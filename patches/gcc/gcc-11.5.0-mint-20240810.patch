diff --git a/Makefile.in b/Makefile.in
index 20cbbe2906d..97c05735637 100644
--- a/Makefile.in
+++ b/Makefile.in
@@ -12679,14 +12679,14 @@ configure-gmp: stage_current
 maybe-configure-gmp: configure-gmp
 configure-gmp: 
 	@r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	test ! -f $(HOST_SUBDIR)/gmp/Makefile || exit 0; \
 	$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/gmp; \
 	$(HOST_EXPORTS)  \
 	echo Configuring in $(HOST_SUBDIR)/gmp; \
 	cd "$(HOST_SUBDIR)/gmp" || exit 1; \
 	case $(srcdir) in \
-	  /* | [A-Za-z]:[\\/]*) topdir=$(srcdir) ;; \
+	  /* | [A-Za-z]:[\\/]*) topdir=$$s ;; \
 	  *) topdir=`echo $(HOST_SUBDIR)/gmp/ | \
 		sed -e 's,\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \
 	esac; \
@@ -12709,7 +12709,7 @@ configure-stage1-gmp:
 	@[ $(current_stage) = stage1 ] || $(MAKE) stage1-start
 	@$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/gmp
 	@r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	TFLAGS="$(STAGE1_TFLAGS)"; \
 	test ! -f $(HOST_SUBDIR)/gmp/Makefile || exit 0; \
 	$(HOST_EXPORTS) \
@@ -12720,7 +12720,7 @@ configure-stage1-gmp:
 	$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/gmp; \
 	cd $(HOST_SUBDIR)/gmp || exit 1; \
 	case $(srcdir) in \
-	  /* | [A-Za-z]:[\\/]*) topdir=$(srcdir) ;; \
+	  /* | [A-Za-z]:[\\/]*) topdir=$$s ;; \
 	  *) topdir=`echo $(HOST_SUBDIR)/gmp/ | \
 		sed -e 's,\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \
 	esac; \
@@ -12742,7 +12742,7 @@ configure-stage2-gmp:
 	@[ $(current_stage) = stage2 ] || $(MAKE) stage2-start
 	@$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/gmp
 	@r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	TFLAGS="$(STAGE2_TFLAGS)"; \
 	test ! -f $(HOST_SUBDIR)/gmp/Makefile || exit 0; \
 	$(HOST_EXPORTS) \
@@ -12754,7 +12754,7 @@ configure-stage2-gmp:
 	$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/gmp; \
 	cd $(HOST_SUBDIR)/gmp || exit 1; \
 	case $(srcdir) in \
-	  /* | [A-Za-z]:[\\/]*) topdir=$(srcdir) ;; \
+	  /* | [A-Za-z]:[\\/]*) topdir=$$s ;; \
 	  *) topdir=`echo $(HOST_SUBDIR)/gmp/ | \
 		sed -e 's,\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \
 	esac; \
@@ -12776,7 +12776,7 @@ configure-stage3-gmp:
 	@[ $(current_stage) = stage3 ] || $(MAKE) stage3-start
 	@$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/gmp
 	@r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	TFLAGS="$(STAGE3_TFLAGS)"; \
 	test ! -f $(HOST_SUBDIR)/gmp/Makefile || exit 0; \
 	$(HOST_EXPORTS) \
@@ -12788,7 +12788,7 @@ configure-stage3-gmp:
 	$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/gmp; \
 	cd $(HOST_SUBDIR)/gmp || exit 1; \
 	case $(srcdir) in \
-	  /* | [A-Za-z]:[\\/]*) topdir=$(srcdir) ;; \
+	  /* | [A-Za-z]:[\\/]*) topdir=$$s ;; \
 	  *) topdir=`echo $(HOST_SUBDIR)/gmp/ | \
 		sed -e 's,\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \
 	esac; \
@@ -12810,7 +12810,7 @@ configure-stage4-gmp:
 	@[ $(current_stage) = stage4 ] || $(MAKE) stage4-start
 	@$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/gmp
 	@r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	TFLAGS="$(STAGE4_TFLAGS)"; \
 	test ! -f $(HOST_SUBDIR)/gmp/Makefile || exit 0; \
 	$(HOST_EXPORTS) \
@@ -12822,7 +12822,7 @@ configure-stage4-gmp:
 	$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/gmp; \
 	cd $(HOST_SUBDIR)/gmp || exit 1; \
 	case $(srcdir) in \
-	  /* | [A-Za-z]:[\\/]*) topdir=$(srcdir) ;; \
+	  /* | [A-Za-z]:[\\/]*) topdir=$$s ;; \
 	  *) topdir=`echo $(HOST_SUBDIR)/gmp/ | \
 		sed -e 's,\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \
 	esac; \
@@ -12844,7 +12844,7 @@ configure-stageprofile-gmp:
 	@[ $(current_stage) = stageprofile ] || $(MAKE) stageprofile-start
 	@$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/gmp
 	@r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	TFLAGS="$(STAGEprofile_TFLAGS)"; \
 	test ! -f $(HOST_SUBDIR)/gmp/Makefile || exit 0; \
 	$(HOST_EXPORTS) \
@@ -12856,7 +12856,7 @@ configure-stageprofile-gmp:
 	$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/gmp; \
 	cd $(HOST_SUBDIR)/gmp || exit 1; \
 	case $(srcdir) in \
-	  /* | [A-Za-z]:[\\/]*) topdir=$(srcdir) ;; \
+	  /* | [A-Za-z]:[\\/]*) topdir=$$s ;; \
 	  *) topdir=`echo $(HOST_SUBDIR)/gmp/ | \
 		sed -e 's,\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \
 	esac; \
@@ -12878,7 +12878,7 @@ configure-stagetrain-gmp:
 	@[ $(current_stage) = stagetrain ] || $(MAKE) stagetrain-start
 	@$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/gmp
 	@r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	TFLAGS="$(STAGEtrain_TFLAGS)"; \
 	test ! -f $(HOST_SUBDIR)/gmp/Makefile || exit 0; \
 	$(HOST_EXPORTS) \
@@ -12890,7 +12890,7 @@ configure-stagetrain-gmp:
 	$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/gmp; \
 	cd $(HOST_SUBDIR)/gmp || exit 1; \
 	case $(srcdir) in \
-	  /* | [A-Za-z]:[\\/]*) topdir=$(srcdir) ;; \
+	  /* | [A-Za-z]:[\\/]*) topdir=$$s ;; \
 	  *) topdir=`echo $(HOST_SUBDIR)/gmp/ | \
 		sed -e 's,\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \
 	esac; \
@@ -12912,7 +12912,7 @@ configure-stagefeedback-gmp:
 	@[ $(current_stage) = stagefeedback ] || $(MAKE) stagefeedback-start
 	@$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/gmp
 	@r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	TFLAGS="$(STAGEfeedback_TFLAGS)"; \
 	test ! -f $(HOST_SUBDIR)/gmp/Makefile || exit 0; \
 	$(HOST_EXPORTS) \
@@ -12924,7 +12924,7 @@ configure-stagefeedback-gmp:
 	$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/gmp; \
 	cd $(HOST_SUBDIR)/gmp || exit 1; \
 	case $(srcdir) in \
-	  /* | [A-Za-z]:[\\/]*) topdir=$(srcdir) ;; \
+	  /* | [A-Za-z]:[\\/]*) topdir=$$s ;; \
 	  *) topdir=`echo $(HOST_SUBDIR)/gmp/ | \
 		sed -e 's,\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \
 	esac; \
@@ -12946,7 +12946,7 @@ configure-stageautoprofile-gmp:
 	@[ $(current_stage) = stageautoprofile ] || $(MAKE) stageautoprofile-start
 	@$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/gmp
 	@r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	TFLAGS="$(STAGEautoprofile_TFLAGS)"; \
 	test ! -f $(HOST_SUBDIR)/gmp/Makefile || exit 0; \
 	$(HOST_EXPORTS) \
@@ -12958,7 +12958,7 @@ configure-stageautoprofile-gmp:
 	$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/gmp; \
 	cd $(HOST_SUBDIR)/gmp || exit 1; \
 	case $(srcdir) in \
-	  /* | [A-Za-z]:[\\/]*) topdir=$(srcdir) ;; \
+	  /* | [A-Za-z]:[\\/]*) topdir=$$s ;; \
 	  *) topdir=`echo $(HOST_SUBDIR)/gmp/ | \
 		sed -e 's,\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \
 	esac; \
@@ -12980,7 +12980,7 @@ configure-stageautofeedback-gmp:
 	@[ $(current_stage) = stageautofeedback ] || $(MAKE) stageautofeedback-start
 	@$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/gmp
 	@r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	TFLAGS="$(STAGEautofeedback_TFLAGS)"; \
 	test ! -f $(HOST_SUBDIR)/gmp/Makefile || exit 0; \
 	$(HOST_EXPORTS) \
@@ -12992,7 +12992,7 @@ configure-stageautofeedback-gmp:
 	$(SHELL) $(srcdir)/mkinstalldirs $(HOST_SUBDIR)/gmp; \
 	cd $(HOST_SUBDIR)/gmp || exit 1; \
 	case $(srcdir) in \
-	  /* | [A-Za-z]:[\\/]*) topdir=$(srcdir) ;; \
+	  /* | [A-Za-z]:[\\/]*) topdir=$$s ;; \
 	  *) topdir=`echo $(HOST_SUBDIR)/gmp/ | \
 		sed -e 's,\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \
 	esac; \
@@ -13020,7 +13020,7 @@ TARGET-gmp=all
 maybe-all-gmp: all-gmp
 all-gmp: configure-gmp
 	@r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	$(HOST_EXPORTS)  \
 	(cd $(HOST_SUBDIR)/gmp && \
 	  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS) AM_CFLAGS="-DNO_ASM" \
@@ -13040,7 +13040,7 @@ TARGET-stage1-gmp = $(TARGET-gmp)
 all-stage1-gmp: configure-stage1-gmp
 	@[ $(current_stage) = stage1 ] || $(MAKE) stage1-start
 	@r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	TFLAGS="$(STAGE1_TFLAGS)"; \
 	$(HOST_EXPORTS)  \
 	cd $(HOST_SUBDIR)/gmp && \
@@ -13084,7 +13084,7 @@ TARGET-stage2-gmp = $(TARGET-gmp)
 all-stage2-gmp: configure-stage2-gmp
 	@[ $(current_stage) = stage2 ] || $(MAKE) stage2-start
 	@r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	TFLAGS="$(STAGE2_TFLAGS)"; \
 	$(HOST_EXPORTS) \
 	$(POSTSTAGE1_HOST_EXPORTS)  \
@@ -13127,7 +13127,7 @@ TARGET-stage3-gmp = $(TARGET-gmp)
 all-stage3-gmp: configure-stage3-gmp
 	@[ $(current_stage) = stage3 ] || $(MAKE) stage3-start
 	@r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	TFLAGS="$(STAGE3_TFLAGS)"; \
 	$(HOST_EXPORTS) \
 	$(POSTSTAGE1_HOST_EXPORTS)  \
@@ -13170,7 +13170,7 @@ TARGET-stage4-gmp = $(TARGET-gmp)
 all-stage4-gmp: configure-stage4-gmp
 	@[ $(current_stage) = stage4 ] || $(MAKE) stage4-start
 	@r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	TFLAGS="$(STAGE4_TFLAGS)"; \
 	$(HOST_EXPORTS) \
 	$(POSTSTAGE1_HOST_EXPORTS)  \
@@ -13213,7 +13213,7 @@ TARGET-stageprofile-gmp = $(TARGET-gmp)
 all-stageprofile-gmp: configure-stageprofile-gmp
 	@[ $(current_stage) = stageprofile ] || $(MAKE) stageprofile-start
 	@r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	TFLAGS="$(STAGEprofile_TFLAGS)"; \
 	$(HOST_EXPORTS) \
 	$(POSTSTAGE1_HOST_EXPORTS)  \
@@ -13256,7 +13256,7 @@ TARGET-stagetrain-gmp = $(TARGET-gmp)
 all-stagetrain-gmp: configure-stagetrain-gmp
 	@[ $(current_stage) = stagetrain ] || $(MAKE) stagetrain-start
 	@r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	TFLAGS="$(STAGEtrain_TFLAGS)"; \
 	$(HOST_EXPORTS) \
 	$(POSTSTAGE1_HOST_EXPORTS)  \
@@ -13299,7 +13299,7 @@ TARGET-stagefeedback-gmp = $(TARGET-gmp)
 all-stagefeedback-gmp: configure-stagefeedback-gmp
 	@[ $(current_stage) = stagefeedback ] || $(MAKE) stagefeedback-start
 	@r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	TFLAGS="$(STAGEfeedback_TFLAGS)"; \
 	$(HOST_EXPORTS) \
 	$(POSTSTAGE1_HOST_EXPORTS)  \
@@ -13342,7 +13342,7 @@ TARGET-stageautoprofile-gmp = $(TARGET-gmp)
 all-stageautoprofile-gmp: configure-stageautoprofile-gmp
 	@[ $(current_stage) = stageautoprofile ] || $(MAKE) stageautoprofile-start
 	@r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	TFLAGS="$(STAGEautoprofile_TFLAGS)"; \
 	$(HOST_EXPORTS) \
 	$(POSTSTAGE1_HOST_EXPORTS)  \
@@ -13385,7 +13385,7 @@ TARGET-stageautofeedback-gmp = $(TARGET-gmp)
 all-stageautofeedback-gmp: configure-stageautofeedback-gmp
 	@[ $(current_stage) = stageautofeedback ] || $(MAKE) stageautofeedback-start
 	@r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	TFLAGS="$(STAGEautofeedback_TFLAGS)"; \
 	$(HOST_EXPORTS) \
 	$(POSTSTAGE1_HOST_EXPORTS)  \
@@ -13428,7 +13428,7 @@ maybe-check-gmp: check-gmp
 check-gmp:
 	@: $(MAKE); $(unstage)
 	@r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	$(HOST_EXPORTS) $(EXTRA_HOST_EXPORTS) \
 	(cd $(HOST_SUBDIR)/gmp && \
 	  $(MAKE) $(FLAGS_TO_PASS) AM_CFLAGS="-DNO_ASM" $(EXTRA_BOOTSTRAP_FLAGS) check)
@@ -13464,7 +13464,7 @@ info-gmp: \
     configure-gmp 
 	@[ -f ./gmp/Makefile ] || exit 0; \
 	r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	$(HOST_EXPORTS) \
 	for flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS="-DNO_ASM"; do \
 	  eval `echo "$$flag" | sed -e "s|^\([^=]*\)=\(.*\)|\1='\2'; export \1|"`; \
@@ -13489,7 +13489,7 @@ dvi-gmp: \
     configure-gmp 
 	@[ -f ./gmp/Makefile ] || exit 0; \
 	r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	$(HOST_EXPORTS) \
 	for flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS="-DNO_ASM"; do \
 	  eval `echo "$$flag" | sed -e "s|^\([^=]*\)=\(.*\)|\1='\2'; export \1|"`; \
@@ -13514,7 +13514,7 @@ pdf-gmp: \
     configure-gmp 
 	@[ -f ./gmp/Makefile ] || exit 0; \
 	r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	$(HOST_EXPORTS) \
 	for flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS="-DNO_ASM"; do \
 	  eval `echo "$$flag" | sed -e "s|^\([^=]*\)=\(.*\)|\1='\2'; export \1|"`; \
@@ -13539,7 +13539,7 @@ html-gmp: \
     configure-gmp 
 	@[ -f ./gmp/Makefile ] || exit 0; \
 	r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	$(HOST_EXPORTS) \
 	for flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS="-DNO_ASM"; do \
 	  eval `echo "$$flag" | sed -e "s|^\([^=]*\)=\(.*\)|\1='\2'; export \1|"`; \
@@ -13564,7 +13564,7 @@ TAGS-gmp: \
     configure-gmp 
 	@[ -f ./gmp/Makefile ] || exit 0; \
 	r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	$(HOST_EXPORTS) \
 	for flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS="-DNO_ASM"; do \
 	  eval `echo "$$flag" | sed -e "s|^\([^=]*\)=\(.*\)|\1='\2'; export \1|"`; \
@@ -13590,7 +13590,7 @@ install-info-gmp: \
     info-gmp 
 	@[ -f ./gmp/Makefile ] || exit 0; \
 	r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	$(HOST_EXPORTS) \
 	for flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS="-DNO_ASM"; do \
 	  eval `echo "$$flag" | sed -e "s|^\([^=]*\)=\(.*\)|\1='\2'; export \1|"`; \
@@ -13616,7 +13616,7 @@ install-pdf-gmp: \
     pdf-gmp 
 	@[ -f ./gmp/Makefile ] || exit 0; \
 	r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	$(HOST_EXPORTS) \
 	for flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS="-DNO_ASM"; do \
 	  eval `echo "$$flag" | sed -e "s|^\([^=]*\)=\(.*\)|\1='\2'; export \1|"`; \
@@ -13642,7 +13642,7 @@ install-html-gmp: \
     html-gmp 
 	@[ -f ./gmp/Makefile ] || exit 0; \
 	r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	$(HOST_EXPORTS) \
 	for flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS="-DNO_ASM"; do \
 	  eval `echo "$$flag" | sed -e "s|^\([^=]*\)=\(.*\)|\1='\2'; export \1|"`; \
@@ -13667,7 +13667,7 @@ installcheck-gmp: \
     configure-gmp 
 	@[ -f ./gmp/Makefile ] || exit 0; \
 	r=`${PWD_COMMAND}`; export r; \
-	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
+	s=`cd $(srcdir); ${PWD_COMMAND} | sed -e 's@^/\(.\)/\(.*\)@\1:/\2@'`; export s; \
 	$(HOST_EXPORTS) \
 	for flag in $(EXTRA_HOST_FLAGS) AM_CFLAGS="-DNO_ASM"; do \
 	  eval `echo "$$flag" | sed -e "s|^\([^=]*\)=\(.*\)|\1='\2'; export \1|"`; \
diff --git a/config-ml.in b/config-ml.in
index 68854a4f16c..a626f1b2d70 100644
--- a/config-ml.in
+++ b/config-ml.in
@@ -346,6 +346,23 @@ m68*-*-*)
 	    esac
 	  done
 	fi
+	case "${host}" in
+	  *-*-mint*)
+	    case "${srcdir}" in
+	      */libgcc ) : ;;
+	      *)
+	        old_multidirs="${multidirs}"
+	        multidirs=""
+	        for x in ${old_multidirs}; do
+		  case "$x" in
+		    *mshort ) : ;;
+		    *) multidirs="${multidirs} ${x}" ;;
+		  esac
+		done
+		;;
+	    esac
+	    ;;
+	esac
 	;;
 mips*-*-*)
 	if [ x$enable_single_float = xno ]
diff --git a/config.guess b/config.guess
index 1972fda8eb0..106b1c4917d 100755
--- a/config.guess
+++ b/config.guess
@@ -466,22 +466,22 @@ case "$UNAME_MACHINE:$UNAME_SYSTEM:$UNAME_RELEASE:$UNAME_VERSION" in
     # MiNT.  But MiNT is downward compatible to TOS, so this should
     # be no problem.
     atarist[e]:*MiNT:*:* | atarist[e]:*mint:*:* | atarist[e]:*TOS:*:*)
-	echo m68k-atari-mint"$UNAME_RELEASE"
+	echo m68k-atari-mint
 	exit ;;
     atari*:*MiNT:*:* | atari*:*mint:*:* | atarist[e]:*TOS:*:*)
-	echo m68k-atari-mint"$UNAME_RELEASE"
+	echo m68k-atari-mint
 	exit ;;
     *falcon*:*MiNT:*:* | *falcon*:*mint:*:* | *falcon*:*TOS:*:*)
-	echo m68k-atari-mint"$UNAME_RELEASE"
+	echo m68k-atari-mint
 	exit ;;
     milan*:*MiNT:*:* | milan*:*mint:*:* | *milan*:*TOS:*:*)
-	echo m68k-milan-mint"$UNAME_RELEASE"
+	echo m68k-milan-mint
 	exit ;;
     hades*:*MiNT:*:* | hades*:*mint:*:* | *hades*:*TOS:*:*)
-	echo m68k-hades-mint"$UNAME_RELEASE"
+	echo m68k-hades-mint
 	exit ;;
     *:*MiNT:*:* | *:*mint:*:* | *:*TOS:*:*)
-	echo m68k-unknown-mint"$UNAME_RELEASE"
+	echo m68k-unknown-mint
 	exit ;;
     m68k:machten:*:*)
 	echo m68k-apple-machten"$UNAME_RELEASE"
diff --git a/config.sub b/config.sub
index 63c1f1c8b5e..51b20eb13f3 100755
--- a/config.sub
+++ b/config.sub
@@ -1372,6 +1372,12 @@ case $os in
 	psos*)
 		os=psos
 		;;
+	mintelf)
+		os=mintelf
+		;;
+	mint | mint[0-9]*)
+		os=mint
+		;;
 	qnx*)
 		os=qnx
 		;;
@@ -1463,6 +1469,9 @@ case $os in
 	ose*)
 		os=ose
 		;;
+	*mintelf)
+		os=mintelf
+		;;
 	*mint | mint[0-9]* | *MiNT | MiNT[0-9]*)
 		os=mint
 		;;
diff --git a/config/lib-ld.m4 b/config/lib-ld.m4
index 11d0ce77342..947835568a4 100644
--- a/config/lib-ld.m4
+++ b/config/lib-ld.m4
@@ -47,7 +47,7 @@ if test "$GCC" = yes; then
   # Check if gcc -print-prog-name=ld gives a path.
   AC_MSG_CHECKING([for ld used by GCC])
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
diff --git a/config/lthostflags.m4 b/config/lthostflags.m4
index bc0f59ee79e..253e7aa6b06 100644
--- a/config/lthostflags.m4
+++ b/config/lthostflags.m4
@@ -13,7 +13,7 @@ AC_DEFUN([ACX_LT_HOST_FLAGS], [
 AC_REQUIRE([AC_CANONICAL_SYSTEM])
 
 case $host in
-  *-cygwin* | *-mingw*)
+  *-cygwin* | *-mingw* | *-msys*)
     # 'host' will be top-level target in the case of a target lib,
     # we must compare to with_cross_host to decide if this is a native
     # or cross-compiler and select where to install dlls appropriately.
diff --git a/config/mmap.m4 b/config/mmap.m4
index fba0d9d3657..5342ed8ab2c 100644
--- a/config/mmap.m4
+++ b/config/mmap.m4
@@ -42,7 +42,7 @@ else
    # Systems known to be in this category are Windows (all variants),
    # VMS, and Darwin.
    case "$host_os" in
-     *vms* | cygwin* | pe | mingw* | darwin* | ultrix* | hpux10* | hpux11.00)
+     *vms* | cygwin* | pe | mingw* | msys* | darwin* | ultrix* | hpux10* | hpux11.00)
         gcc_cv_func_mmap_dev_zero=no ;;
      *)
         gcc_cv_func_mmap_dev_zero=yes;;
@@ -74,7 +74,7 @@ else
    # above for use of /dev/zero.
    # Systems known to be in this category are Windows, VMS, and SCO Unix.
    case "$host_os" in
-     *vms* | cygwin* | pe | mingw* | sco* | udk* )
+     *vms* | cygwin* | pe | mingw* | msys* | sco* | udk* )
         gcc_cv_func_mmap_anon=no ;;
      *)
         gcc_cv_func_mmap_anon=yes;;
diff --git a/config/picflag.m4 b/config/picflag.m4
index 8b106f9af88..b136478cf36 100644
--- a/config/picflag.m4
+++ b/config/picflag.m4
@@ -25,7 +25,9 @@ case "${$2}" in
 	;;
     i[[34567]]86-*-cygwin* | x86_64-*-cygwin*)
 	;;
-    i[[34567]]86-*-mingw* | x86_64-*-mingw*)
+    i[[34567]]86-*-mingw* | x86_64-*-mingw* | x86_64-*-msys*)
+	;;
+    *-*-mint*)
 	;;
     i[[34567]]86-*-interix[[3-9]]*)
 	# Interix 3.x gcc -fpic/-fPIC options generate broken code.
diff --git a/configure b/configure
index 74775c31c58..7179b3a7141 100755
--- a/configure
+++ b/configure
@@ -3225,6 +3225,9 @@ if test x$enable_libgomp = x ; then
 	;;
     nvptx*-*-* | amdgcn*-*-*)
 	;;
+    *-*-mint*)
+        # Enable libmudflap by default in MiNT.
+	;;
     *)
 	noconfigdirs="$noconfigdirs target-libgomp"
 	;;
@@ -3649,6 +3652,9 @@ case "${target}" in
   m68hc11-*-*|m6811-*-*|m68hc12-*-*|m6812-*-*)
     libgloss_dir=m68hc11
     ;;
+  m68k-*-mint*)
+    noconfigdirs="$noconfigdirs target-libiberty"
+    ;;
   m68*-*-* | fido-*-*)
     libgloss_dir=m68k
     ;;
@@ -9819,7 +9825,7 @@ case "$target" in
   x86_64-*mingw* | *-w64-mingw*)
   # MinGW-w64 does not use newlib, nor does it use winsup. It may,
   # however, use a symlink named 'mingw' in ${prefix} .
-    FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -L${prefix}/${target}/lib -L${prefix}/mingw/lib -isystem ${prefix}/${target}/include -isystem ${prefix}/mingw/include'
+    FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -L${prefix}/${target}/lib -L${prefix}/lib -isystem ${prefix}/${target}/include -isystem ${prefix}/include'
     ;;
   *-mingw*)
   # MinGW can't be handled as Cygwin above since it does not use newlib.
diff --git a/configure.ac b/configure.ac
index 3613860460e..664fb5a1e83 100644
--- a/configure.ac
+++ b/configure.ac
@@ -515,6 +515,9 @@ if test x$enable_libgomp = x ; then
 	;;
     nvptx*-*-* | amdgcn*-*-*)
 	;;
+    *-*-mint*)
+        # Enable libmudflap by default in MiNT.
+	;;
     *)
 	noconfigdirs="$noconfigdirs target-libgomp"
 	;;
@@ -915,6 +918,9 @@ case "${target}" in
   m68hc11-*-*|m6811-*-*|m68hc12-*-*|m6812-*-*)
     libgloss_dir=m68hc11
     ;;
+  m68k-*-mint*)
+    noconfigdirs="$noconfigdirs target-libiberty"
+    ;;
   m68*-*-* | fido-*-*)
     libgloss_dir=m68k
     ;;
@@ -3324,7 +3330,7 @@ case "$target" in
   x86_64-*mingw* | *-w64-mingw*)
   # MinGW-w64 does not use newlib, nor does it use winsup. It may,
   # however, use a symlink named 'mingw' in ${prefix} .
-    FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -L${prefix}/${target}/lib -L${prefix}/mingw/lib -isystem ${prefix}/${target}/include -isystem ${prefix}/mingw/include'
+    FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -L${prefix}/${target}/lib -L${prefix}/lib -isystem ${prefix}/${target}/include -isystem ${prefix}/include'
     ;;
   *-mingw*)
   # MinGW can't be handled as Cygwin above since it does not use newlib.
diff --git a/fixincludes/configure b/fixincludes/configure
index 6e2d67b655b..50add10685e 100755
--- a/fixincludes/configure
+++ b/fixincludes/configure
@@ -4815,7 +4815,8 @@ else
   case $host in
 	i?86-*-msdosdjgpp* | \
 	i?86-*-mingw32* | \
-	x86_64-*-mingw32* | \
+	x86_64-*-mingw* | \
+	*-*-msys* | \
 	*-*-beos* | \
         *-*-*vms*)
 		TARGET=twoprocess
@@ -5347,7 +5348,7 @@ else
    # Systems known to be in this category are Windows (all variants),
    # VMS, and Darwin.
    case "$host_os" in
-     *vms* | cygwin* | pe | mingw* | darwin* | ultrix* | hpux10* | hpux11.00)
+     *vms* | cygwin* | pe | mingw* | msys* | darwin* | ultrix* | hpux10* | hpux11.00)
         gcc_cv_func_mmap_dev_zero=no ;;
      *)
         gcc_cv_func_mmap_dev_zero=yes;;
@@ -5404,7 +5405,7 @@ else
    # above for use of /dev/zero.
    # Systems known to be in this category are Windows, VMS, and SCO Unix.
    case "$host_os" in
-     *vms* | cygwin* | pe | mingw* | sco* | udk* )
+     *vms* | cygwin* | pe | mingw* | msys* | sco* | udk* )
         gcc_cv_func_mmap_anon=no ;;
      *)
         gcc_cv_func_mmap_anon=yes;;
diff --git a/fixincludes/configure.ac b/fixincludes/configure.ac
index 14813b910f1..aaea42ecd94 100644
--- a/fixincludes/configure.ac
+++ b/fixincludes/configure.ac
@@ -51,7 +51,8 @@ fi],
 [case $host in
 	i?86-*-msdosdjgpp* | \
 	i?86-*-mingw32* | \
-	x86_64-*-mingw32* | \
+	x86_64-*-mingw* | \
+	*-*-msys* | \
 	*-*-beos* | \
         *-*-*vms*)
 		TARGET=twoprocess
diff --git a/fixincludes/mkfixinc.sh b/fixincludes/mkfixinc.sh
index df90720b716..7bb14a52400 100755
--- a/fixincludes/mkfixinc.sh
+++ b/fixincludes/mkfixinc.sh
@@ -13,7 +13,7 @@ target=fixinc.sh
 case $machine in
     i?86-*-cygwin* | \
     i?86-*-mingw32* | \
-    x86_64-*-mingw32* | \
+    x86_64-*-mingw* | \
     powerpc-*-eabisim* | \
     powerpc-*-eabi*    | \
     powerpc-*-rtems*   | \
diff --git a/gcc/Makefile.in b/gcc/Makefile.in
index 7bfd6ce653f..db7b2b57e48 100644
--- a/gcc/Makefile.in
+++ b/gcc/Makefile.in
@@ -456,7 +456,7 @@ T_GLIMITS_H = $(srcdir)/glimits.h
 # The GCC to use for compiling crt*.o.
 # Usually the one we just built.
 # Don't use this as a dependency--use $(GCC_PASSES).
-GCC_FOR_TARGET = $(STAGE_CC_WRAPPER) ./xgcc -B./ -B$(build_tooldir)/bin/ -isystem $(build_tooldir)/include -isystem $(build_tooldir)/sys-include -L$(objdir)/../ld
+GCC_FOR_TARGET = $(STAGE_CC_WRAPPER) ./xgcc -B./ -B$(mingw_build_tooldir)/bin/ -isystem $(mingw_build_tooldir)/include -isystem $(mingw_build_tooldir)/sys-include -L$(objdir)/../ld
 
 # Set if the compiler was configured with --with-build-sysroot.
 SYSROOT_CFLAGS_FOR_TARGET = @SYSROOT_CFLAGS_FOR_TARGET@
@@ -702,6 +702,10 @@ man7ext = .7
 objext = .o
 exeext = @host_exeext@
 build_exeext = @build_exeext@
+EVAL_MINGW := case `uname -s` in MINGW*) echo yes;; *) echo no;; esac
+MINGW := $(shell $(EVAL_MINGW))
+mingw_srcdir := $(shell if test "${MINGW}" = yes; then cmd //c echo ${srcdir}; else echo ${srcdir}; fi)
+mingw_build_tooldir := $(shell if test "${MINGW}" = yes; then cmd //c echo ${build_tooldir}; else echo ${build_tooldir}; fi)
 
 # Directory in which to put man pages.
 mandir = @mandir@
@@ -909,7 +913,7 @@ REVISION_s  := "\"\""
 endif
 
 # Shorthand variables for dependency lists.
-DUMPFILE_H = $(srcdir)/../libcpp/include/line-map.h dumpfile.h
+DUMPFILE_H = $(mingw_srcdir)/../libcpp/include/line-map.h dumpfile.h
 VEC_H = vec.h statistics.h $(GGC_H)
 HASH_TABLE_H = $(HASHTAB_H) hash-table.h $(GGC_H)
 EXCEPT_H = except.h $(HASHTAB_H)
@@ -976,21 +980,21 @@ GCC_H = gcc.h version.h $(DIAGNOSTIC_CORE_H)
 GGC_H = ggc.h gtype-desc.h statistics.h
 TIMEVAR_H = timevar.h timevar.def
 INSN_ATTR_H = insn-attr.h insn-attr-common.h $(INSN_ADDR_H)
-INSN_ADDR_H = $(srcdir)/insn-addr.h
+INSN_ADDR_H = $(mingw_srcdir)/insn-addr.h
 C_COMMON_H = c-family/c-common.h c-family/c-common.def $(TREE_H) \
 	$(SPLAY_TREE_H) $(CPPLIB_H) $(GGC_H) $(DIAGNOSTIC_CORE_H)
 C_PRAGMA_H = c-family/c-pragma.h $(CPPLIB_H)
 C_TREE_H = c/c-tree.h $(C_COMMON_H) $(DIAGNOSTIC_H)
-SYSTEM_H = system.h hwint.h $(srcdir)/../include/libiberty.h \
-	$(srcdir)/../include/safe-ctype.h $(srcdir)/../include/filenames.h
+SYSTEM_H = system.h hwint.h $(mingw_srcdir)/../include/libiberty.h \
+	$(mingw_srcdir)/../include/safe-ctype.h $(mingw_srcdir)/../include/filenames.h
 PREDICT_H = predict.h predict.def
-CPPLIB_H = $(srcdir)/../libcpp/include/line-map.h \
-	$(srcdir)/../libcpp/include/cpplib.h
-CODYLIB_H = $(srcdir)/../libcody/cody.hh
-INPUT_H = $(srcdir)/../libcpp/include/line-map.h input.h
+CPPLIB_H = $(mingw_srcdir)/../libcpp/include/line-map.h \
+	$(mingw_srcdir)/../libcpp/include/cpplib.h
+CODYLIB_H = $(mingw_srcdir)/../libcody/cody.hh
+INPUT_H = $(mingw_srcdir)/../libcpp/include/line-map.h input.h
 OPTS_H = $(INPUT_H) $(VEC_H) opts.h $(OBSTACK_H)
-SYMTAB_H = $(srcdir)/../libcpp/include/symtab.h $(OBSTACK_H)
-CPP_INTERNAL_H = $(srcdir)/../libcpp/internal.h
+SYMTAB_H = $(mingw_srcdir)/../libcpp/include/symtab.h $(OBSTACK_H)
+CPP_INTERNAL_H = $(mingw_srcdir)/../libcpp/internal.h
 TREE_DUMP_H = tree-dump.h $(SPLAY_TREE_H) $(DUMPFILE_H)
 TREE_PASS_H = tree-pass.h $(TIMEVAR_H) $(DUMPFILE_H)
 TREE_SSA_H = tree-ssa.h tree-ssa-operands.h \
@@ -1193,7 +1197,7 @@ FLAGS_TO_PASS = \
 	"local_prefix=$(local_prefix)" \
 	"gxx_include_dir=$(gcc_gxx_include_dir)" \
 	"gxx_libcxx_include_dir=$(gcc_gxx_libcxx_include_dir)" \
-	"build_tooldir=$(build_tooldir)" \
+	"build_tooldir=$(mingw_build_tooldir)" \
 	"gcc_tooldir=$(gcc_tooldir)" \
 	"bindir=$(bindir)" \
 	"libexecsubdir=$(libexecsubdir)" \
@@ -2107,7 +2111,7 @@ xgcc$(exeext): $(GCC_OBJS) c/gccspec.o libcommon-target.a $(LIBDEPS) \
 	$(EXTRA_GCC_OBJS)
 	+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ $(GCC_OBJS) \
 	  c/gccspec.o $(EXTRA_GCC_OBJS) libcommon-target.a \
-	  $(EXTRA_GCC_LIBS) $(LIBS)
+	  $(EXTRA_GCC_LIBS) $(LIBS) $(GLIBC_SO)
 
 # cpp is to cpp0 as e.g. g++ is to cc1plus: Just another driver.
 # It is part of c-family because the handled extensions are hard-coded
@@ -2116,7 +2120,7 @@ cpp$(exeext): $(GCC_OBJS) c-family/cppspec.o libcommon-target.a $(LIBDEPS) \
 	$(EXTRA_GCC_OBJS)
 	+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ $(GCC_OBJS) \
 	  c-family/cppspec.o $(EXTRA_GCC_OBJS) libcommon-target.a \
-	  $(EXTRA_GCC_LIBS) $(LIBS)
+	  $(EXTRA_GCC_LIBS) $(LIBS) $(GLIBC_SO)
 
 # Dump a specs file to make -B./ read these specs over installed ones.
 $(SPECS): xgcc$(exeext)
@@ -2196,15 +2200,15 @@ AR_LIBS = @COLLECT2_LIBS@
 
 gcc-ar$(exeext): gcc-ar.o $(AR_OBJS) $(LIBDEPS)
 	+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) gcc-ar.o -o $@ \
-		$(AR_OBJS) $(LIBS) $(AR_LIBS)
+		$(AR_OBJS) $(LIBS) $(AR_LIBS) $(GLIBC_SO)
 
 gcc-nm$(exeext): gcc-nm.o $(AR_OBJS) $(LIBDEPS)
 	+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) gcc-nm.o -o $@ \
-		$(AR_OBJS) $(LIBS) $(AR_LIBS)
+		$(AR_OBJS) $(LIBS) $(AR_LIBS) $(GLIBC_SO)
 
 gcc-ranlib$(exeext): gcc-ranlib.o $(AR_OBJS) $(LIBDEPS)
 	+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) gcc-ranlib.o -o $@ \
-		$(AR_OBJS) $(LIBS) $(AR_LIBS)
+		$(AR_OBJS) $(LIBS) $(AR_LIBS) $(GLIBC_SO)
 
 CFLAGS-gcc-ar.o += $(DRIVER_DEFINES) \
 	-DTARGET_MACHINE=\"$(target_noncanonical)\" \
@@ -2232,7 +2236,7 @@ COLLECT2_LIBS = @COLLECT2_LIBS@
 collect2$(exeext): $(COLLECT2_OBJS) $(LIBDEPS)
 # Don't try modifying collect2 (aka ld) in place--it might be linking this.
 	+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o T$@ \
-		$(COLLECT2_OBJS) $(LIBS) $(COLLECT2_LIBS)
+		$(COLLECT2_OBJS) $(LIBS) $(COLLECT2_LIBS) $(GLIBC_SO)
 	mv -f T$@ $@
 
 CFLAGS-collect2.o += -DTARGET_MACHINE=\"$(target_noncanonical)\" \
@@ -2241,7 +2245,7 @@ CFLAGS-collect2.o += -DTARGET_MACHINE=\"$(target_noncanonical)\" \
 LTO_WRAPPER_OBJS = lto-wrapper.o collect-utils.o ggc-none.o
 lto-wrapper$(exeext): $(LTO_WRAPPER_OBJS) libcommon-target.a $(LIBDEPS)
 	+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o T$@ \
-	   $(LTO_WRAPPER_OBJS) libcommon-target.a $(LIBS)
+	   $(LTO_WRAPPER_OBJS) libcommon-target.a $(LIBS) $(GLIBC_SO)
 	mv -f T$@ $@
 
 # Files used by all variants of C or by the stand-alone pre-processor.
@@ -2615,9 +2619,9 @@ gimple-match.c: s-match gimple-match-head.c ; @true
 generic-match.c: s-match generic-match-head.c ; @true
 
 s-match: build/genmatch$(build_exeext) $(srcdir)/match.pd cfn-operators.pd
-	$(RUN_GEN) build/genmatch$(build_exeext) --gimple $(srcdir)/match.pd \
+	$(RUN_GEN) build/genmatch$(build_exeext) --gimple $(mingw_srcdir)/match.pd \
 	    > tmp-gimple-match.c
-	$(RUN_GEN) build/genmatch$(build_exeext) --generic $(srcdir)/match.pd \
+	$(RUN_GEN) build/genmatch$(build_exeext) --generic $(mingw_srcdir)/match.pd \
 	    > tmp-generic-match.c
 	$(SHELL) $(srcdir)/../move-if-change tmp-gimple-match.c \
 	    					gimple-match.c
@@ -2728,7 +2732,7 @@ GENGTYPE_FLAGS=
 
 gtyp-input.list: s-gtyp-input ; @true
 s-gtyp-input: Makefile
-	@: $(call write_entries_to_file,$(GTFILES),tmp-gi.list)
+	@: $(call write_entries_to_file,$(patsubst $(srcdir)/%, $(mingw_srcdir)/%, $(GTFILES)),tmp-gi.list)
 	$(SHELL) $(srcdir)/../move-if-change tmp-gi.list gtyp-input.list
 	$(STAMP) s-gtyp-input
 
@@ -2736,7 +2740,7 @@ s-gtype: build/gengtype$(build_exeext) $(filter-out [%], $(GTFILES)) \
 	 gtyp-input.list
 # First, parse all files and save a state file.
 	$(RUN_GEN) build/gengtype$(build_exeext) $(GENGTYPE_FLAGS) \
-                    -S $(srcdir) -I gtyp-input.list -w tmp-gtype.state
+                    -S $(mingw_srcdir) -I gtyp-input.list -w tmp-gtype.state
 # Second, read the state file and generate all files.  This ensure that
 # gtype.state is correctly read:
 	$(SHELL) $(srcdir)/../move-if-change tmp-gtype.state gtype.state
@@ -3053,12 +3057,12 @@ CFLAGS-gcov.o += $(ZLIBINC)
 GCOV_OBJS = gcov.o json.o
 gcov$(exeext): $(GCOV_OBJS) $(LIBDEPS)
 	+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) $(GCOV_OBJS) \
-		hash-table.o ggc-none.o $(LIBS) $(ZLIB) -o $@
+		hash-table.o ggc-none.o $(LIBS) $(ZLIB) $(GLIBC_SO) -o $@
 GCOV_DUMP_OBJS = gcov-dump.o
 gcov-dump$(exeext): $(GCOV_DUMP_OBJS) $(LIBDEPS)
 	+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) $(GCOV_DUMP_OBJS) \
 		hash-table.o ggc-none.o\
-		$(LIBS) -o $@
+		$(LIBS) $(GLIBC_SO) -o $@
 
 GCOV_TOOL_DEP_FILES = $(srcdir)/../libgcc/libgcov-util.c gcov-io.c $(GCOV_IO_H) \
   $(srcdir)/../libgcc/libgcov-driver.c $(srcdir)/../libgcc/libgcov-driver-system.c \
@@ -3074,7 +3078,7 @@ libgcov-merge-tool.o: $(srcdir)/../libgcc/libgcov-merge.c $(GCOV_TOOL_DEP_FILES)
 	  -DIN_GCOV_TOOL=1 -o $@ $<
 GCOV_TOOL_OBJS = gcov-tool.o libgcov-util.o libgcov-driver-tool.o libgcov-merge-tool.o
 gcov-tool$(exeext): $(GCOV_TOOL_OBJS) $(LIBDEPS)
-	+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) $(GCOV_TOOL_OBJS) $(LIBS) -o $@
+	+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) $(GCOV_TOOL_OBJS) $(LIBS) $(GLIBC_SO) -o $@
 #
 # Build the include directories.  The stamp files are stmp-* rather than
 # s-* so that mostlyclean does not force the include directory to
diff --git a/gcc/ada/Makefile.rtl b/gcc/ada/Makefile.rtl
index b5b8b573ea4..373d0f05f2f 100644
--- a/gcc/ada/Makefile.rtl
+++ b/gcc/ada/Makefile.rtl
@@ -2208,7 +2208,7 @@ ifeq ($(strip $(filter-out %djgpp,$(target_os))),)
 endif
 
 # Cygwin/Mingw32
-ifeq ($(strip $(filter-out cygwin% mingw32% pe,$(target_os))),)
+ifeq ($(strip $(filter-out cygwin% mingw% pe,$(target_os))),)
   # Cygwin provides a full Posix environment, and so we use the default
   # versions g-socthi rather than the Windows-specific MinGW version.
   # Ideally we would use all the default versions for Cygwin and none
@@ -2547,6 +2547,33 @@ ifeq ($(strip $(filter-out m68k% linux%,$(target_cpu) $(target_os))),)
   LIBRARY_VERSION := $(LIB_VERSION)
 endif
 
+# M68K FreeMiNT
+ifeq ($(strip $(filter-out m68k% mint%,$(target_cpu) $(target_os))),)
+  LIBGNAT_TARGET_PAIRS = \
+  a-intnam.ads<libgnarl/a-intnam__mint.ads \
+  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \
+  s-intman.adb<libgnarl/s-intman__posix.adb \
+  s-mint.ads<libgnarl/s-mint.ads \
+  s-osinte.adb<libgnarl/s-osinte__posix.adb \
+  s-osinte.ads<libgnarl/s-osinte__mint.ads \
+  s-osprim.adb<libgnat/s-osprim__posix.adb \
+  s-taprop.adb<libgnarl/s-taprop__linux.adb \
+  s-tasinf.ads<libgnarl/s-tasinf__linux.ads \
+  s-tasinf.adb<libgnarl/s-tasinf__linux.adb \
+  s-taspri.ads<libgnarl/s-taspri__posix.ads \
+  s-tpopsp.adb<libgnarl/s-tpopsp__posix-foreign.adb \
+  system.ads<libgnat/system-mint.ads
+
+  TOOLS_TARGET_PAIRS = indepsw.adb<indepsw-gnu.adb
+
+  EXTRA_GNATRTL_TASKING_OBJS=s-mint.o
+  EH_MECHANISM=-gcc
+  THREADSLIB =
+  GNATLIB_SHARED = gnatlib
+  GMEM_LIB = gmemlib
+  LIBRARY_VERSION := $(LIB_VERSION)
+endif
+
 # SH4 Linux
 ifeq ($(strip $(filter-out sh4% linux%,$(target_cpu) $(target_os))),)
   LIBGNAT_TARGET_PAIRS = \
diff --git a/gcc/ada/adaint.c b/gcc/ada/adaint.c
index 2e54e69643a..7eb970f0f50 100644
--- a/gcc/ada/adaint.c
+++ b/gcc/ada/adaint.c
@@ -44,14 +44,6 @@
 #define _THREAD_SAFE
 #endif
 
-/* Use 64 bit Large File API */
-#if defined (__QNX__)
-#define _LARGEFILE64_SOURCE 1
-#elif !defined(_LARGEFILE_SOURCE)
-#define _LARGEFILE_SOURCE
-#endif
-#define _FILE_OFFSET_BITS 64
-
 #ifdef __vxworks
 
 /* No need to redefine exit here.  */
@@ -124,6 +116,7 @@
 #include <sys/stat.h>
 #include <fcntl.h>
 #include <time.h>
+#include <sys/time.h>
 
 #if defined (__vxworks) || defined (__ANDROID__)
 /* S_IREAD and S_IWRITE are not defined in VxWorks or Android */
@@ -152,6 +145,16 @@
 #include <limits.h>
 #endif
 
+/*
+ * these are from xm-mingw32.h, but this is only included
+ * for the target; we need those definitions here also
+ * when using MinGW as host for a cross-compiler
+ */
+#ifdef __MINGW32__
+#undef HOST_EXECUTABLE_SUFFIX
+#define HOST_EXECUTABLE_SUFFIX ".exe"
+#endif
+
 #ifdef __cplusplus
 extern "C" {
 #endif
@@ -237,6 +240,8 @@ UINT __gnat_current_ccs_encoding;
 #include <signal.h>
 #undef DIR_SEPARATOR
 #define DIR_SEPARATOR '\\'
+#undef PATH_SEPARATOR
+#define PATH_SEPARATOR ';'
 
 #else
 #include <utime.h>
@@ -3285,7 +3290,7 @@ __gnat_copy_attribs (char *from ATTRIBUTE_UNUSED, char *to ATTRIBUTE_UNUSED,
       return -1;
   }
 
-#elif _POSIX_C_SOURCE >= 200809L
+#elif _POSIX_C_SOURCE >= 200809L && defined(AT_FDCWD)
   struct timespec tbuf[2];
 
   if (mode != 2) {
diff --git a/gcc/ada/cstreams.c b/gcc/ada/cstreams.c
index 8072320ae10..d88acc11b8f 100644
--- a/gcc/ada/cstreams.c
+++ b/gcc/ada/cstreams.c
@@ -31,12 +31,6 @@
 
 /* Routines required for implementing routines in Interfaces.C.Streams.  */
 
-#ifndef _LARGEFILE_SOURCE
-#define _LARGEFILE_SOURCE
-#endif
-#define _FILE_OFFSET_BITS 64
-/* the define above will make off_t a 64bit type on GNU/Linux */
-
 /* Tell Cygwin's <stdio.h> to expose fileno_unlocked() */
 #if defined(__CYGWIN__) && !defined(__CYGWIN32__) && !defined(_GNU_SOURCE)
 #define _GNU_SOURCE
diff --git a/gcc/ada/errno.c b/gcc/ada/errno.c
index 061d0f07bee..aaa773ceff2 100644
--- a/gcc/ada/errno.c
+++ b/gcc/ada/errno.c
@@ -47,7 +47,7 @@ __get_errno(void)
   return errno;
 }
 
-#ifndef __ANDROID__
+#if !defined(__ANDROID__) && !defined(__set_errno)
 void
 __set_errno(int err)
 {
diff --git a/gcc/ada/gcc-interface/Make-lang.in b/gcc/ada/gcc-interface/Make-lang.in
index d88c354c9a4..caa1c121a2b 100644
--- a/gcc/ada/gcc-interface/Make-lang.in
+++ b/gcc/ada/gcc-interface/Make-lang.in
@@ -637,6 +637,7 @@ GNATBIND_OBJS = \
  ada/uintp.o      \
  ada/uname.o      \
  ada/urealp.o     \
+ ada/libcmain.o   \
  ada/widechar.o
 
 # Language-independent object files.
@@ -672,12 +673,12 @@ gnat1$(exeext): $(TARGET_ADA_SRCS) $(GNAT1_OBJS) $(ADA_BACKEND) libcommon-target
 		$(LIBDEPS) $(ada.prev)
 	@$(call LINK_PROGRESS,$(INDEX.ada),start)
 	+$(GCC_LLINK) -o $@ $(GNAT1_OBJS) $(ADA_BACKEND) \
-	  libcommon-target.a $(LIBS) $(SYSLIBS) $(BACKENDLIBS) $(CFLAGS)
+	  libcommon-target.a $(LIBS) $(SYSLIBS) $(BACKENDLIBS) $(CFLAGS) $(GLIBC_SO)
 	$(RM) stamp-gnatlib2-rts stamp-tools
 	@$(call LINK_PROGRESS,$(INDEX.ada),end)
 
 gnatbind$(exeext): ada/b_gnatb.o $(CONFIG_H) $(GNATBIND_OBJS) ggc-none.o libcommon-target.a $(LIBDEPS)
-	+$(GCC_LINK) -o $@ ada/b_gnatb.o $(GNATBIND_OBJS) ggc-none.o libcommon-target.a $(LIBS) $(SYSLIBS) $(CFLAGS)
+	+$(GCC_LINK) -o $@ ada/b_gnatb.o $(GNATBIND_OBJS) ggc-none.o libcommon-target.a $(LIBS) $(SYSLIBS) $(CFLAGS) $(GLIBC_SO)
 
 # use target-gcc target-gnatmake target-gnatbind target-gnatlink
 gnattools: $(GCC_PARTS) $(CONFIG_H) prefix.o force
@@ -841,7 +842,7 @@ gnat-install-tools:
 	    fi ; \
 	  done; \
 	  $(RM) $(DESTDIR)$(bindir)/gnatdll$(exeext); \
-	  $(INSTALL_PROGRAM) gnatdll$(exeext) $(DESTDIR)$(bindir)/gnatdll$(exeext); \
+	  if test -f gnatdll$(exeext); then $(INSTALL_PROGRAM) gnatdll$(exeext) $(DESTDIR)$(bindir)/gnatdll$(exeext); fi; \
 	fi
 
 #
diff --git a/gcc/ada/gcc-interface/Makefile.in b/gcc/ada/gcc-interface/Makefile.in
index 1f15652d2c8..e7eff6aca9d 100644
--- a/gcc/ada/gcc-interface/Makefile.in
+++ b/gcc/ada/gcc-interface/Makefile.in
@@ -102,7 +102,7 @@ INSTALL_DATA_DATE = cp -p
 MAKEINFO = makeinfo
 TEXI2DVI = texi2dvi
 TEXI2PDF = texi2pdf
-GNATBIND_FLAGS = -static -x
+GNATBIND_FLAGS = -x
 ADA_CFLAGS =
 ADAFLAGS = -W -Wall -gnatpg -gnata
 FORCE_DEBUG_ADAFLAGS = -g
@@ -118,7 +118,7 @@ GNATLIBCFLAGS = -g -O2
 GNATLIBCFLAGS_FOR_C = \
   -W -Wall $(GNATLIBCFLAGS) -fexceptions -DIN_RTS -DHAVE_GETIPINFO
 PICFLAG_FOR_TARGET = @PICFLAG_FOR_TARGET@
-ALL_ADAFLAGS = $(CFLAGS) $(ADA_CFLAGS) $(ADAFLAGS)
+ALL_ADAFLAGS = $(CFLAGS) $(ADA_CFLAGS) $(ADAFLAGS) -include $(fsrcdir)/libcwrap.h
 THREAD_KIND = native
 THREADSLIB =
 GMEM_LIB =
@@ -199,7 +199,7 @@ RTSDIR = rts$(subst /,_,$(MULTISUBDIR))
 # Link flags used to build gnat tools.  By default we prefer to statically
 # link with libgcc to avoid a dependency on shared libgcc (which is tricky
 # to deal with as it may conflict with the libgcc provided by the system).
-GCC_LINK_FLAGS=-static-libstdc++ -static-libgcc
+GCC_LINK_FLAGS=
 
 # End of variables for you to override.
 
@@ -253,7 +253,7 @@ LIBDEPS = $(LIBINTL_DEP) $(LIBICONV_DEP) $(LIBBACKTRACE) $(LIBIBERTY)
 TGT_LIB =
 TOOLS_LIBS = ../link.o ../targext.o ../../ggc-none.o ../../libcommon-target.a \
   ../../libcommon.a ../../../libcpp/libcpp.a $(LIBGNAT) $(LIBINTL) $(LIBICONV) \
-  ../$(LIBBACKTRACE) ../$(LIBIBERTY) $(SYSLIBS) $(TGT_LIB)
+  ../$(LIBBACKTRACE) ../$(LIBIBERTY) $(SYSLIBS) $(TGT_LIB) $(GLIBC_SO)
 
 # Add -no-pie to TOOLS_LIBS since some of them are compiled with -fno-PIE.
 TOOLS_LIBS += @NO_PIE_FLAG@
@@ -406,6 +406,9 @@ GCC_LINK=$(CXX) $(GCC_LINK_FLAGS) $(LDFLAGS)
 	                tools/$(word 1,$(subst <, ,$(PAIR)));)
 	touch ../stamp-tools
 
+../stat64.o: $(fsrcdir)/ada/stat64.c
+	$(CC) -O2 -c $< -o $@
+
 # when compiling the tools, the runtime has to be first on the path so that
 # it hides the runtime files lying with the rest of the sources
 ifeq ($(TOOLSCASE),native)
@@ -453,23 +456,23 @@ common-tools: ../stamp-tools
 	  gnatchop gnatcmd gnatkr gnatls gnatprep gnatxref gnatfind gnatname \
 	  gnatclean -bargs $(ADA_INCLUDES) $(GNATBIND_FLAGS)
 	$(GNATLINK) -v gnatcmd -o ../../gnat$(exeext) \
-	  --GCC="$(CC) $(ADA_INCLUDES)" --LINK="$(GCC_LINK)" $(TOOLS_LIBS)
+	  --GCC="$(CC) $(ADA_INCLUDES)" --LINK="$(GCC_LINK)" $(TOOLS_LIBS) ../stat64.o
 	$(GNATLINK) -v gnatchop -o ../../gnatchop$(exeext) \
-	  --GCC="$(CC) $(ADA_INCLUDES)" --LINK="$(GCC_LINK)" $(TOOLS_LIBS)
+	  --GCC="$(CC) $(ADA_INCLUDES)" --LINK="$(GCC_LINK)" $(TOOLS_LIBS) ../stat64.o
 	$(GNATLINK) -v gnatkr -o ../../gnatkr$(exeext) \
-	  --GCC="$(CC) $(ADA_INCLUDES)" --LINK="$(GCC_LINK)" $(TOOLS_LIBS)
+	  --GCC="$(CC) $(ADA_INCLUDES)" --LINK="$(GCC_LINK)" $(TOOLS_LIBS) ../stat64.o
 	$(GNATLINK) -v gnatls -o ../../gnatls$(exeext) \
-	  --GCC="$(CC) $(ADA_INCLUDES)" --LINK="$(GCC_LINK)" $(TOOLS_LIBS)
+	  --GCC="$(CC) $(ADA_INCLUDES)" --LINK="$(GCC_LINK)" $(TOOLS_LIBS) ../stat64.o
 	$(GNATLINK) -v gnatprep -o ../../gnatprep$(exeext) \
-	  --GCC="$(CC) $(ADA_INCLUDES)" --LINK="$(GCC_LINK)" $(TOOLS_LIBS)
+	  --GCC="$(CC) $(ADA_INCLUDES)" --LINK="$(GCC_LINK)" $(TOOLS_LIBS) ../stat64.o
 	$(GNATLINK) -v gnatxref -o ../../gnatxref$(exeext) \
-	  --GCC="$(CC) $(ADA_INCLUDES)" --LINK="$(GCC_LINK)" $(TOOLS_LIBS)
+	  --GCC="$(CC) $(ADA_INCLUDES)" --LINK="$(GCC_LINK)" $(TOOLS_LIBS) ../stat64.o
 	$(GNATLINK) -v gnatfind -o ../../gnatfind$(exeext) \
-	  --GCC="$(CC) $(ADA_INCLUDES)" --LINK="$(GCC_LINK)" $(TOOLS_LIBS)
+	  --GCC="$(CC) $(ADA_INCLUDES)" --LINK="$(GCC_LINK)" $(TOOLS_LIBS) ../stat64.o
 	$(GNATLINK) -v gnatname -o ../../gnatname$(exeext) \
-	  --GCC="$(CC) $(ADA_INCLUDES)" --LINK="$(GCC_LINK)" $(TOOLS_LIBS)
+	  --GCC="$(CC) $(ADA_INCLUDES)" --LINK="$(GCC_LINK)" $(TOOLS_LIBS) ../stat64.o
 	$(GNATLINK) -v gnatclean -o ../../gnatclean$(exeext) \
-	  --GCC="$(CC) $(ADA_INCLUDES)" --LINK="$(GCC_LINK)" $(TOOLS_LIBS)
+	  --GCC="$(CC) $(ADA_INCLUDES)" --LINK="$(GCC_LINK)" $(TOOLS_LIBS) ../stat64.o
 
 ../../gnatdll$(exeext): ../stamp-tools
 	$(GNATMAKE) -c $(ADA_INCLUDES) gnatdll --GCC="$(CC) $(ALL_ADAFLAGS)"
@@ -477,22 +480,22 @@ common-tools: ../stamp-tools
 	$(GNATLINK) -v gnatdll -o $@ \
 	  --GCC="$(CC) $(ADA_INCLUDES)" --LINK="$(GCC_LINK)" $(TOOLS_LIBS)
 
-gnatmake-re: ../stamp-tools
+gnatmake-re: ../stamp-tools ../stat64.o
 	$(GNATMAKE) -j0 $(ADA_INCLUDES) -u sdefault --GCC="$(CC) $(MOST_ADA_FLAGS)"
 	$(GNATMAKE) -j0 -c $(ADA_INCLUDES) gnatmake --GCC="$(CC) $(ALL_ADAFLAGS)"
 	$(GNATBIND) $(ADA_INCLUDES) $(GNATBIND_FLAGS) gnatmake
 	$(GNATLINK) -v gnatmake -o ../../gnatmake$(exeext) \
-	  --GCC="$(CC) $(ADA_INCLUDES)" --LINK="$(GCC_LINK)" $(TOOLS_LIBS)
+	  --GCC="$(CC) $(ADA_INCLUDES)" --LINK="$(GCC_LINK)" $(TOOLS_LIBS) ../stat64.o
 
 # Note the use of the "mv" command in order to allow gnatlink to be linked with
 # with the former version of gnatlink itself which cannot override itself.
 # gnatlink-re cannot be run at the same time as gnatmake-re, hence the
 # dependency
-gnatlink-re: ../stamp-tools gnatmake-re
+gnatlink-re: ../stamp-tools gnatmake-re ../stat64.o
 	$(GNATMAKE) -j0 -c $(ADA_INCLUDES) gnatlink --GCC="$(CC) $(ALL_ADAFLAGS)"
 	$(GNATBIND) $(ADA_INCLUDES) $(GNATBIND_FLAGS) gnatlink
 	$(GNATLINK) -v gnatlink -o ../../gnatlinknew$(exeext) \
-	  --GCC="$(CC) $(ADA_INCLUDES)" --LINK="$(GCC_LINK)" $(TOOLS_LIBS)
+	  --GCC="$(CC) $(ADA_INCLUDES)" --LINK="$(GCC_LINK)" $(TOOLS_LIBS) ../stat64.o
 	$(MV)  ../../gnatlinknew$(exeext)  ../../gnatlink$(exeext)
 
 # Needs to be built with CC=gcc
@@ -500,11 +503,11 @@ gnatlink-re: ../stamp-tools gnatmake-re
 #  stamp target in the parent directory whenever gnat1 is rebuilt
 
 # Likewise for the tools
-../../gnatmake$(exeext): b_gnatm.o $(GNATMAKE_OBJS)
-	+$(GCC_LINK) $(ALL_CFLAGS) -o $@ b_gnatm.o $(GNATMAKE_OBJS) $(TOOLS_LIBS) $(TOOLS1_LIBS)
+../../gnatmake$(exeext): b_gnatm.o $(GNATMAKE_OBJS) ../stat64.o
+	+$(GCC_LINK) $(ALL_CFLAGS) -o $@ b_gnatm.o $(GNATMAKE_OBJS) ../stat64.o $(TOOLS_LIBS) $(TOOLS1_LIBS)
 
-../../gnatlink$(exeext): b_gnatl.o $(GNATLINK_OBJS)
-	+$(GCC_LINK) $(ALL_CFLAGS) -o $@ b_gnatl.o $(GNATLINK_OBJS) $(TOOLS_LIBS) $(TOOLS1_LIBS)
+../../gnatlink$(exeext): b_gnatl.o $(GNATLINK_OBJS) ../stat64.o
+	+$(GCC_LINK) $(ALL_CFLAGS) -o $@ b_gnatl.o $(GNATLINK_OBJS) $(TOOLS_LIBS) $(TOOLS1_LIBS) ../stat64.o
 
 ../stamp-gnatlib-$(RTSDIR):
 	@if [ ! -f stamp-gnatlib-$(RTSDIR) ] ; \
@@ -766,13 +769,16 @@ gnatlib-shared-win32:
 		$(PICFLAG_FOR_TARGET) \
 		-o libgnat$(hyphen)$(LIBRARY_VERSION)$(soext) \
 		$(GNATRTL_NONTASKING_OBJS) $(LIBGNAT_OBJS) \
-		$(SO_OPTS)libgnat$(hyphen)$(LIBRARY_VERSION)$(soext) $(MISCLIB)
+		$(SO_OPTS)libgnat$(hyphen)$(LIBRARY_VERSION)$(soext) \
+		-Wl,-out-implib,libgnat$(hyphen)$(LIBRARY_VERSION).dll.a \
+		$(MISCLIB)
 	cd $(RTSDIR); `echo "$(GCC_FOR_TARGET)" \
                 | sed -e 's,\./xgcc,../../xgcc,' -e 's,-B\./,-B../../,'` -shared -shared-libgcc \
 		$(PICFLAG_FOR_TARGET) \
 		-o libgnarl$(hyphen)$(LIBRARY_VERSION)$(soext) \
 		$(GNATRTL_TASKING_OBJS) \
 		$(SO_OPTS)libgnarl$(hyphen)$(LIBRARY_VERSION)$(soext) \
+		-Wl,-out-implib,libgnarl$(hyphen)$(LIBRARY_VERSION).dll.a \
 		$(THREADSLIB) -Wl,libgnat$(hyphen)$(LIBRARY_VERSION)$(soext)
 
 gnatlib-shared-darwin:
diff --git a/gcc/ada/libcmain.c b/gcc/ada/libcmain.c
new file mode 100644
index 00000000000..fce12d9248b
--- /dev/null
+++ b/gcc/ada/libcmain.c
@@ -0,0 +1,57 @@
+#if defined(__LINUX_GLIBC_WRAP_H)
+
+/* ugly hack to get __libc_start_main versioned */
+
+#if __GLIBC_PREREQ(2, 34)
+
+#define STR_(s) #s
+#define STR(s)  STR_(s)
+#include <stdio.h>
+#include <dlfcn.h>
+
+#ifdef __UCLIBC__
+#define __libc_start_main       __uClibc_main
+#endif
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+int __libc_start_main(
+        int (*main)(int,char**,char**), int ac, char **av,
+        int (*init)(void), void (*fini)(void),
+        void (*rtld_fini)(void), void *stack_end);
+int __libc_start_main(
+        int (*main)(int,char**,char**), int ac, char **av,
+        int (*init)(void), void (*fini)(void),
+        void (*rtld_fini)(void), void *stack_end)
+{
+	typeof(__libc_start_main) *real_lsm;
+	if ((*(void**)&real_lsm = dlsym(RTLD_NEXT, STR(__libc_start_main))) != 0)
+		return real_lsm(main, ac, av, init, fini, rtld_fini, stack_end);
+	fputs("BUG: dlsym error\n", stderr);
+	return 1;
+}
+
+/* dito for dladdr */
+int dladdr (const void *address, Dl_info *info)
+{
+	typeof(dladdr) *real_dladdr;
+	if ((*(void**)&real_dladdr = dlsym(RTLD_NEXT, STR(dladdr))) != 0)
+		return real_dladdr(address, info);
+	if (info != 0)
+	{
+		info->dli_fname = 0;
+		info->dli_fbase = 0;
+		info->dli_sname = 0;
+		info->dli_saddr = 0;
+	}
+	return 0;
+}
+
+#ifdef __cplusplus
+}
+#endif
+#undef STR
+#undef STR_
+#endif
+#endif
diff --git a/gcc/ada/libgnarl/a-intnam__mint.ads b/gcc/ada/libgnarl/a-intnam__mint.ads
new file mode 100644
index 00000000000..44a644c0209
--- /dev/null
+++ b/gcc/ada/libgnarl/a-intnam__mint.ads
@@ -0,0 +1,154 @@
+------------------------------------------------------------------------------
+--                                                                          --
+--                 GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                 --
+--                                                                          --
+--                   A D A . I N T E R R U P T S . N A M E S                --
+--                                                                          --
+--                                  S p e c                                 --
+--                                                                          --
+--          Copyright (C) 1991-2020, Free Software Foundation, Inc.         --
+--                                                                          --
+-- GNARL is free software; you can  redistribute it  and/or modify it under --
+-- terms of the  GNU General Public License as published  by the Free Soft- --
+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --
+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --
+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --
+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --
+--                                                                          --
+-- As a special exception under Section 7 of GPL version 3, you are granted --
+-- additional permissions described in the GCC Runtime Library Exception,   --
+-- version 3.1, as published by the Free Software Foundation.               --
+--                                                                          --
+-- You should have received a copy of the GNU General Public License and    --
+-- a copy of the GCC Runtime Library Exception along with this program;     --
+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --
+-- <http://www.gnu.org/licenses/>.                                          --
+--                                                                          --
+-- GNARL was developed by the GNARL team at Florida State University.       --
+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --
+--                                                                          --
+------------------------------------------------------------------------------
+
+--  This is a GNU/Linux version of this package
+
+--  The following signals are reserved by the run time:
+
+--  SIGFPE, SIGILL, SIGSEGV, SIGBUS, SIGTRAP, SIGABRT, SIGINT,
+--  SIGUSR1, SIGUSR2, SIGVTALRM, SIGUNUSED, SIGSTOP, SIGKILL
+
+--  The pragma Unreserve_All_Interrupts affects the following signal(s):
+
+--  SIGINT: made available for Ada handler
+
+--  This target-dependent package spec contains names of interrupts
+--  supported by the local system.
+
+with System.OS_Interface;
+
+package Ada.Interrupts.Names is
+
+   --  All identifiers in this unit are implementation defined
+
+   pragma Implementation_Defined;
+
+   --  Beware that the mapping of names to signals may be many-to-one. There
+   --  may be aliases. Also, for all signal names that are not supported on the
+   --  current system the value of the corresponding constant will be zero.
+
+   SIGHUP : constant Interrupt_ID :=
+     System.OS_Interface.SIGHUP;      --  hangup
+
+   SIGINT : constant Interrupt_ID :=
+     System.OS_Interface.SIGINT;      --  interrupt (rubout)
+
+   SIGQUIT : constant Interrupt_ID :=
+     System.OS_Interface.SIGQUIT;     --  quit (ASCD FS)
+
+   SIGILL : constant Interrupt_ID :=
+     System.OS_Interface.SIGILL;      --  illegal instruction (not reset)
+
+   SIGTRAP : constant Interrupt_ID :=
+     System.OS_Interface.SIGTRAP;     --  trace trap (not reset)
+
+   SIGIOT : constant Interrupt_ID :=
+     System.OS_Interface.SIGIOT;      --  IOT instruction
+
+   SIGABRT : constant Interrupt_ID := --  used by abort,
+     System.OS_Interface.SIGABRT;     --  replace SIGIOT in the  future
+
+   SIGFPE : constant Interrupt_ID :=
+     System.OS_Interface.SIGFPE;      --  floating point exception
+
+   SIGKILL : constant Interrupt_ID :=
+     System.OS_Interface.SIGKILL;     --  kill (cannot be caught or ignored)
+
+   SIGBUS : constant Interrupt_ID :=
+     System.OS_Interface.SIGBUS;      --  bus error
+
+   SIGSEGV : constant Interrupt_ID :=
+     System.OS_Interface.SIGSEGV;     --  segmentation violation
+
+   SIGPIPE : constant Interrupt_ID := --  write on a pipe with
+     System.OS_Interface.SIGPIPE;     --  no one to read it
+
+   SIGALRM : constant Interrupt_ID :=
+     System.OS_Interface.SIGALRM;     --  alarm clock
+
+   SIGTERM : constant Interrupt_ID :=
+     System.OS_Interface.SIGTERM;     --  software termination signal from kill
+
+   SIGUSR1 : constant Interrupt_ID :=
+     System.OS_Interface.SIGUSR1;     --  user defined signal 1
+
+   SIGUSR2 : constant Interrupt_ID :=
+     System.OS_Interface.SIGUSR2;     --  user defined signal 2
+
+   SIGCLD : constant Interrupt_ID :=
+     System.OS_Interface.SIGCLD;      --  child status change
+
+   SIGCHLD : constant Interrupt_ID :=
+     System.OS_Interface.SIGCHLD;     --  4.3BSD's/POSIX name for SIGCLD
+
+   SIGWINCH : constant Interrupt_ID :=
+     System.OS_Interface.SIGWINCH;    --  window size change
+
+   SIGURG : constant Interrupt_ID :=
+     System.OS_Interface.SIGURG;      --  urgent condition on IO channel
+
+   SIGIO : constant Interrupt_ID :=   --  input/output possible,
+     System.OS_Interface.SIGIO;       --  SIGPOLL alias (Solaris)
+
+   SIGSTOP : constant Interrupt_ID :=
+     System.OS_Interface.SIGSTOP;     --  stop (cannot be caught or ignored)
+
+   SIGTSTP : constant Interrupt_ID :=
+     System.OS_Interface.SIGTSTP;     --  user stop requested from tty
+
+   SIGCONT : constant Interrupt_ID :=
+     System.OS_Interface.SIGCONT;     --  stopped process has been continued
+
+   SIGTTIN : constant Interrupt_ID :=
+     System.OS_Interface.SIGTTIN;     --  background tty read attempted
+
+   SIGTTOU : constant Interrupt_ID :=
+     System.OS_Interface.SIGTTOU;     --  background tty write attempted
+
+   SIGVTALRM : constant Interrupt_ID :=
+     System.OS_Interface.SIGVTALRM;   --  virtual timer expired
+
+   SIGPROF : constant Interrupt_ID :=
+     System.OS_Interface.SIGPROF;     --  profiling timer expired
+
+   SIGXCPU : constant Interrupt_ID :=
+     System.OS_Interface.SIGXCPU;     --  CPU time limit exceeded
+
+   SIGXFSZ : constant Interrupt_ID :=
+     System.OS_Interface.SIGXFSZ;     --  filesize limit exceeded
+
+   SIGPWR : constant Interrupt_ID :=
+     System.OS_Interface.SIGPWR;        --  Power failure
+
+   SIGSYS : constant Interrupt_ID :=
+     System.OS_Interface.SIGSYS;       --  bad system call
+
+end Ada.Interrupts.Names;
diff --git a/gcc/ada/libgnarl/s-mint.ads b/gcc/ada/libgnarl/s-mint.ads
new file mode 100644
index 00000000000..86764483f4c
--- /dev/null
+++ b/gcc/ada/libgnarl/s-mint.ads
@@ -0,0 +1,118 @@
+------------------------------------------------------------------------------
+--                                                                          --
+--                GNU ADA RUN-TIME LIBRARY (GNARL) COMPONENTS               --
+--                                                                          --
+--                          S Y S T E M .  M I N T                          --
+--                                                                          --
+--                                  S p e c                                 --
+--                                                                          --
+--          Copyright (C) 2008-2020, Free Software Foundation, Inc.         --
+--                                                                          --
+-- GNARL is free software; you can  redistribute it  and/or modify it under --
+-- terms of the  GNU General Public License as published  by the Free Soft- --
+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --
+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --
+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --
+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --
+--                                                                          --
+-- As a special exception under Section 7 of GPL version 3, you are granted --
+-- additional permissions described in the GCC Runtime Library Exception,   --
+-- version 3.1, as published by the Free Software Foundation.               --
+--                                                                          --
+-- You should have received a copy of the GNU General Public License and    --
+-- a copy of the GCC Runtime Library Exception along with this program;     --
+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --
+-- <http://www.gnu.org/licenses/>.                                          --
+--                                                                          --
+--                                                                          --
+------------------------------------------------------------------------------
+
+--  This is the default version of this package
+
+--  This package encapsulates cpu specific differences between implementations
+--  of GNU/Linux, in order to share s-osinte-linux.ads.
+
+--  PLEASE DO NOT add any with-clauses to this package or remove the pragma
+--  Preelaborate. This package is designed to be a bottom-level (leaf) package
+
+with Interfaces.C;
+
+package System.Mint is
+   pragma Preelaborate;
+
+   ----------
+   -- Time --
+   ----------
+
+   subtype long        is Interfaces.C.long;
+   subtype suseconds_t is Interfaces.C.long;
+   subtype time_t      is Interfaces.C.long;
+   subtype clockid_t   is Interfaces.C.int;
+
+   type timespec is record
+      tv_sec  : time_t;
+      tv_nsec : long;
+   end record;
+   pragma Convention (C, timespec);
+
+   type timeval is record
+      tv_sec  : time_t;
+      tv_usec : suseconds_t;
+   end record;
+   pragma Convention (C, timeval);
+
+   -----------
+   -- Errno --
+   -----------
+
+   EAGAIN    : constant := 236;
+   EINTR     : constant := 128;
+   EINVAL    : constant := 25;
+   ENOMEM    : constant := 39;
+   EPERM     : constant := 38;
+   ETIMEDOUT : constant := 320;
+
+   -------------
+   -- Signals --
+   -------------
+
+   SIGHUP     : constant := 1; --  hangup
+   SIGINT     : constant := 2; --  interrupt (rubout)
+   SIGQUIT    : constant := 3; --  quit (ASCD FS)
+   SIGILL     : constant := 4; --  illegal instruction (not reset)
+   SIGTRAP    : constant := 5; --  trace trap (not reset)
+   SIGIOT     : constant := 6; --  IOT instruction
+   SIGABRT    : constant := 6; --  used by abort, replace SIGIOT in the future
+   SIGPRIV    : constant := 7; --  privilege violation
+   SIGFPE     : constant := 8; --  floating point exception
+   SIGKILL    : constant := 9; --  kill (cannot be caught or ignored)
+   SIGBUS     : constant := 10; --  bus error
+   SIGSEGV    : constant := 11; --  segmentation violation
+   SIGSYS     : constant := 12; --  bad system call
+   SIGPIPE    : constant := 13; --  write on a pipe with no one to read it
+   SIGALRM    : constant := 14; --  alarm clock
+   SIGTERM    : constant := 15; --  software termination signal from kill
+   SIGURG     : constant := 16; --  urgent condition on IO channel
+   SIGSTOP    : constant := 17; --  stop (cannot be caught or ignored)
+   SIGTSTP    : constant := 18; --  user stop requested from tty
+   SIGCONT    : constant := 19; --  stopped process has been continued
+   SIGCLD     : constant := 20; --  alias for SIGCHLD
+   SIGCHLD    : constant := 20; --  child status change
+   SIGTTIN    : constant := 21; --  background tty read attempted
+   SIGTTOU    : constant := 22; --  background tty write attempted
+   SIGIO      : constant := 23; --  I/O now possible (4.2 BSD)
+   SIGXCPU    : constant := 24; --  CPU time limit exceeded
+   SIGXFSZ    : constant := 25; --  filesize limit exceeded
+   SIGVTALRM  : constant := 26; --  virtual timer expired
+   SIGPROF    : constant := 27; --  profiling timer expired
+   SIGWINCH   : constant := 28; --  window size change
+   SIGUSR1    : constant := 29; --  user defined signal 1
+   SIGUSR2    : constant := 30; --  user defined signal 2
+   SIGPWR     : constant := 31; --  power-fail restart
+
+   --  struct_sigaction
+
+   SA_SIGINFO  : constant := 16#04#;
+   SA_ONSTACK  : constant := 16#08000000#;
+
+end System.Mint;
diff --git a/gcc/ada/libgnarl/s-osinte__mint.ads b/gcc/ada/libgnarl/s-osinte__mint.ads
new file mode 100644
index 00000000000..92032e4e413
--- /dev/null
+++ b/gcc/ada/libgnarl/s-osinte__mint.ads
@@ -0,0 +1,642 @@
+------------------------------------------------------------------------------
+--                                                                          --
+--                 GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                 --
+--                                                                          --
+--                   S Y S T E M . O S _ I N T E R F A C E                  --
+--                                                                          --
+--                                  S p e c                                 --
+--                                                                          --
+--             Copyright (C) 1991-2017, Florida State University            --
+--          Copyright (C) 1995-2020, Free Software Foundation, Inc.         --
+--                                                                          --
+-- GNAT is free software;  you can  redistribute it  and/or modify it under --
+-- terms of the  GNU General Public License as published  by the Free Soft- --
+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --
+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --
+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --
+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --
+--                                                                          --
+-- As a special exception under Section 7 of GPL version 3, you are granted --
+-- additional permissions described in the GCC Runtime Library Exception,   --
+-- version 3.1, as published by the Free Software Foundation.               --
+--                                                                          --
+-- You should have received a copy of the GNU General Public License and    --
+-- a copy of the GCC Runtime Library Exception along with this program;     --
+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --
+-- <http://www.gnu.org/licenses/>.                                          --
+--                                                                          --
+-- GNARL was developed by the GNARL team at Florida State University.       --
+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --
+--                                                                          --
+------------------------------------------------------------------------------
+
+--  This is a FreeMiNT version of this package
+
+--  This package encapsulates all direct interfaces to OS services
+--  that are needed by the tasking run-time (libgnarl).
+
+--  PLEASE DO NOT add any with-clauses to this package or remove the pragma
+--  Preelaborate. This package is designed to be a bottom-level (leaf) package.
+
+with Ada.Unchecked_Conversion;
+with Interfaces.C;
+with System.Mint;
+with System.OS_Constants;
+
+package System.OS_Interface is
+   pragma Preelaborate;
+
+   subtype int            is Interfaces.C.int;
+   subtype char           is Interfaces.C.char;
+   subtype short          is Interfaces.C.short;
+   subtype long           is Interfaces.C.long;
+   subtype unsigned       is Interfaces.C.unsigned;
+   subtype unsigned_short is Interfaces.C.unsigned_short;
+   subtype unsigned_long  is Interfaces.C.unsigned_long;
+   subtype unsigned_char  is Interfaces.C.unsigned_char;
+   subtype plain_char     is Interfaces.C.plain_char;
+   subtype size_t         is Interfaces.C.size_t;
+
+   -----------
+   -- Errno --
+   -----------
+
+   EAGAIN    : constant := System.Mint.EAGAIN;
+   EINTR     : constant := System.Mint.EINTR;
+   EINVAL    : constant := System.Mint.EINVAL;
+   ENOMEM    : constant := System.Mint.ENOMEM;
+   EPERM     : constant := System.Mint.EPERM;
+   ETIMEDOUT : constant := System.Mint.ETIMEDOUT;
+
+   -------------
+   -- Signals --
+   -------------
+
+   Max_Interrupt : constant := 31;
+   type Signal is new int range 0 .. Max_Interrupt;
+   for Signal'Size use int'Size;
+
+   SIGNULL    : constant := 0;
+   SIGHUP     : constant := System.Mint.SIGHUP;
+   SIGINT     : constant := System.Mint.SIGINT;
+   SIGQUIT    : constant := System.Mint.SIGQUIT;
+   SIGILL     : constant := System.Mint.SIGILL;
+   SIGTRAP    : constant := System.Mint.SIGTRAP;
+   SIGIOT     : constant := System.Mint.SIGIOT;
+   SIGABRT    : constant := System.Mint.SIGABRT;
+   SIGPRIV    : constant := System.Mint.SIGPRIV;
+   SIGFPE     : constant := System.Mint.SIGFPE;
+   SIGKILL    : constant := System.Mint.SIGKILL;
+   SIGBUS     : constant := System.Mint.SIGBUS;
+   SIGSEGV    : constant := System.Mint.SIGSEGV;
+   SIGSYS     : constant := System.Mint.SIGSYS;
+   SIGPIPE    : constant := System.Mint.SIGPIPE;
+   SIGALRM    : constant := System.Mint.SIGALRM;
+   SIGTERM    : constant := System.Mint.SIGTERM;
+   SIGURG     : constant := System.Mint.SIGURG;
+   SIGSTOP    : constant := System.Mint.SIGSTOP;
+   SIGTSTP    : constant := System.Mint.SIGTSTP;
+   SIGCONT    : constant := System.Mint.SIGCONT;
+   SIGCLD     : constant := System.Mint.SIGCLD;
+   SIGCHLD    : constant := System.Mint.SIGCHLD;
+   SIGTTIN    : constant := System.Mint.SIGTTIN;
+   SIGTTOU    : constant := System.Mint.SIGTTOU;
+   SIGIO      : constant := System.Mint.SIGIO;
+   SIGXCPU    : constant := System.Mint.SIGXCPU;
+   SIGXFSZ    : constant := System.Mint.SIGXFSZ;
+   SIGVTALRM  : constant := System.Mint.SIGVTALRM;
+   SIGPROF    : constant := System.Mint.SIGPROF;
+   SIGWINCH   : constant := System.Mint.SIGWINCH;
+   SIGUSR1    : constant := System.Mint.SIGUSR1;
+   SIGUSR2    : constant := System.Mint.SIGUSR2;
+   SIGPWR     : constant := System.Mint.SIGPWR;
+
+   SIGADAABORT : constant := SIGABRT;
+   --  Change this to use another signal for task abort. SIGTERM might be a
+   --  good one.
+
+   type Signal_Set is array (Natural range <>) of Signal;
+
+   Unmasked : constant Signal_Set := (
+      SIGTRAP,
+      --  To enable debugging on multithreaded applications, mark SIGTRAP to
+      --  be kept unmasked.
+
+      SIGBUS,
+
+      SIGTTIN, SIGTTOU, SIGTSTP,
+      --  Keep these three signals unmasked so that background processes and IO
+      --  behaves as normal "C" applications
+
+      SIGPROF,
+      --  To avoid confusing the profiler
+
+      SIGKILL, SIGSTOP
+      --  These two signals actually can't be masked (POSIX won't allow it)
+      );
+
+   Reserved : constant Signal_Set := (SIGNULL, SIGNULL);
+
+   type sigset_t is private;
+
+   function sigaddset (set : access sigset_t; sig : Signal) return int;
+   pragma Import (C, sigaddset, "sigaddset");
+
+   function sigdelset (set : access sigset_t; sig : Signal) return int;
+   pragma Import (C, sigdelset, "sigdelset");
+
+   function sigfillset (set : access sigset_t) return int;
+   pragma Import (C, sigfillset, "sigfillset");
+
+   function sigismember (set : access sigset_t; sig : Signal) return int;
+   pragma Import (C, sigismember, "sigismember");
+
+   function sigemptyset (set : access sigset_t) return int;
+   pragma Import (C, sigemptyset, "sigemptyset");
+
+   type union_type_3 is new String (1 .. 116);
+   type siginfo_t is record
+      si_signo : int;
+      si_code  : int;
+      si_errno : int;
+      X_data   : union_type_3;
+   end record;
+   pragma Convention (C, siginfo_t);
+
+   type struct_sigaction is record
+      sa_handler  : System.Address;
+      sa_mask     : sigset_t;
+      sa_flags    : int;
+      sa_restorer : System.Address;
+   end record;
+   pragma Convention (C, struct_sigaction);
+
+   type struct_sigaction_ptr is access all struct_sigaction;
+
+   SA_SIGINFO : constant := System.Mint.SA_SIGINFO;
+   SA_ONSTACK : constant := System.Mint.SA_ONSTACK;
+
+   SIG_BLOCK   : constant := 0;
+   SIG_UNBLOCK : constant := 1;
+   SIG_SETMASK : constant := 2;
+
+   SIG_DFL : constant := 0;
+   SIG_IGN : constant := 1;
+
+   function sigaction
+     (sig  : Signal;
+      act  : struct_sigaction_ptr;
+      oact : struct_sigaction_ptr) return int;
+   pragma Import (C, sigaction, "sigaction");
+
+   ----------
+   -- Time --
+   ----------
+
+   subtype time_t    is System.Mint.time_t;
+   subtype timespec  is System.Mint.timespec;
+   subtype timeval   is System.Mint.timeval;
+   subtype clockid_t is System.Mint.clockid_t;
+
+   function clock_gettime
+     (clock_id : clockid_t; tp : access timespec) return int;
+   pragma Import (C, clock_gettime, "clock_gettime");
+
+   function clock_getres
+     (clock_id : clockid_t;
+      res      : access timespec) return int;
+   pragma Import (C, clock_getres, "clock_getres");
+
+   function To_Duration (TS : timespec) return Duration;
+   pragma Inline (To_Duration);
+
+   function To_Timespec (D : Duration) return timespec;
+   pragma Inline (To_Timespec);
+
+   function sysconf (name : int) return long;
+   pragma Import (C, sysconf);
+
+   SC_CLK_TCK          : constant := 5;
+   SC_NPROCESSORS_ONLN : constant := 3015;
+
+   -------------------------
+   -- Priority Scheduling --
+   -------------------------
+
+   SCHED_OTHER : constant := 0;
+   SCHED_FIFO  : constant := 1;
+   SCHED_RR    : constant := 2;
+
+   function To_Target_Priority
+     (Prio : System.Any_Priority) return Interfaces.C.int;
+   --  Maps System.Any_Priority to a POSIX priority
+
+   -------------
+   -- Process --
+   -------------
+
+   type pid_t is private;
+
+   function kill (pid : pid_t; sig : Signal) return int;
+   pragma Import (C, kill, "kill");
+
+   function getpid return pid_t;
+   pragma Import (C, getpid, "getpid");
+
+   PR_SET_NAME : constant := 15;
+   PR_GET_NAME : constant := 16;
+
+   function prctl
+     (option : int;
+      arg    : unsigned_long) return int;
+   pragma Import (C_Variadic_1, prctl, "prctl");
+
+   -------------
+   -- Threads --
+   -------------
+
+   type Thread_Body is access
+     function (arg : System.Address) return System.Address;
+   pragma Convention (C, Thread_Body);
+
+   function Thread_Body_Access is new
+     Ada.Unchecked_Conversion (System.Address, Thread_Body);
+
+   type pthread_t is new unsigned_long;
+   subtype Thread_Id is pthread_t;
+
+   function To_pthread_t is
+     new Ada.Unchecked_Conversion (unsigned_long, pthread_t);
+
+   type pthread_mutex_t      is limited private;
+   type pthread_rwlock_t     is limited private;
+   type pthread_cond_t       is limited private;
+   type pthread_attr_t       is limited private;
+   type pthread_mutexattr_t  is limited private;
+   type pthread_rwlockattr_t is limited private;
+   type pthread_condattr_t   is limited private;
+   type pthread_key_t        is private;
+
+   PTHREAD_CREATE_DETACHED : constant := 1;
+
+   -----------
+   -- Stack --
+   -----------
+
+   subtype char_array is Interfaces.C.char_array;
+
+   type stack_t is record
+      ss_sp    : System.Address;
+      ss_flags : int;
+      ss_size  : size_t;
+   end record;
+   pragma Convention (C, stack_t);
+
+   function sigaltstack
+     (ss  : not null access stack_t;
+      oss : access stack_t) return int;
+   pragma Import (C, sigaltstack, "sigaltstack");
+
+   Alternate_Stack_Size : constant := 32 * 1024;
+   --  This must be in keeping with init.c:__gnat_alternate_stack
+
+   Alternate_Stack : aliased char_array (1 .. Alternate_Stack_Size);
+   pragma Import (C, Alternate_Stack, "__gnat_alternate_stack");
+   --  The alternate signal stack for stack overflows
+
+   function Get_Stack_Base (thread : pthread_t) return Address;
+   pragma Inline (Get_Stack_Base);
+   --  This is a dummy procedure to share some GNULLI files
+
+   ---------------------------------------
+   -- Nonstandard Thread Initialization --
+   ---------------------------------------
+
+   procedure pthread_init;
+   pragma Inline (pthread_init);
+   --  This is a dummy procedure to share some GNULLI files
+
+   -------------------------
+   -- POSIX.1c  Section 3 --
+   -------------------------
+
+   function sigwait (set : access sigset_t; sig : access Signal) return int;
+   pragma Import (C, sigwait, "sigwait");
+
+   function pthread_kill (thread : pthread_t; sig : Signal) return int;
+   pragma Import (C, pthread_kill, "pthread_kill");
+
+   function pthread_sigmask
+     (how  : int;
+      set  : access sigset_t;
+      oset : access sigset_t) return int;
+   pragma Import (C, pthread_sigmask, "pthread_sigmask");
+
+   --------------------------
+   -- POSIX.1c  Section 11 --
+   --------------------------
+
+   function pthread_mutexattr_init
+     (attr : access pthread_mutexattr_t) return int;
+   pragma Import (C, pthread_mutexattr_init, "pthread_mutexattr_init");
+
+   function pthread_mutexattr_destroy
+     (attr : access pthread_mutexattr_t) return int;
+   pragma Import (C, pthread_mutexattr_destroy, "pthread_mutexattr_destroy");
+
+   function pthread_mutex_init
+     (mutex : access pthread_mutex_t;
+      attr  : access pthread_mutexattr_t) return int;
+   pragma Import (C, pthread_mutex_init, "pthread_mutex_init");
+
+   function pthread_mutex_destroy (mutex : access pthread_mutex_t) return int;
+   pragma Import (C, pthread_mutex_destroy, "pthread_mutex_destroy");
+
+   function pthread_mutex_lock (mutex : access pthread_mutex_t) return int;
+   pragma Import (C, pthread_mutex_lock, "pthread_mutex_lock");
+
+   function pthread_mutex_unlock (mutex : access pthread_mutex_t) return int;
+   pragma Import (C, pthread_mutex_unlock, "pthread_mutex_unlock");
+
+   function pthread_rwlockattr_init
+     (attr : access pthread_rwlockattr_t) return int;
+   pragma Import (C, pthread_rwlockattr_init, "pthread_rwlockattr_init");
+
+   function pthread_rwlockattr_destroy
+     (attr : access pthread_rwlockattr_t) return int;
+   pragma Import (C, pthread_rwlockattr_destroy, "pthread_rwlockattr_destroy");
+
+   PTHREAD_RWLOCK_PREFER_READER_NP              : constant := 0;
+   PTHREAD_RWLOCK_PREFER_WRITER_NP              : constant := 1;
+   PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP : constant := 2;
+
+   function pthread_rwlockattr_setkind_np
+     (attr : access pthread_rwlockattr_t;
+      pref : int) return int;
+   pragma Import
+     (C, pthread_rwlockattr_setkind_np, "pthread_rwlockattr_setkind_np");
+
+   function pthread_rwlock_init
+     (mutex : access pthread_rwlock_t;
+      attr  : access pthread_rwlockattr_t) return int;
+   pragma Import (C, pthread_rwlock_init, "pthread_rwlock_init");
+
+   function pthread_rwlock_destroy
+     (mutex : access pthread_rwlock_t) return int;
+   pragma Import (C, pthread_rwlock_destroy, "pthread_rwlock_destroy");
+
+   function pthread_rwlock_rdlock (mutex : access pthread_rwlock_t) return int;
+   pragma Import (C, pthread_rwlock_rdlock, "pthread_rwlock_rdlock");
+
+   function pthread_rwlock_wrlock (mutex : access pthread_rwlock_t) return int;
+   pragma Import (C, pthread_rwlock_wrlock, "pthread_rwlock_wrlock");
+
+   function pthread_rwlock_unlock (mutex : access pthread_rwlock_t) return int;
+   pragma Import (C, pthread_rwlock_unlock, "pthread_rwlock_unlock");
+
+   function pthread_condattr_init
+     (attr : access pthread_condattr_t) return int;
+   pragma Import (C, pthread_condattr_init, "pthread_condattr_init");
+
+   function pthread_condattr_destroy
+     (attr : access pthread_condattr_t) return int;
+   pragma Import (C, pthread_condattr_destroy, "pthread_condattr_destroy");
+
+   function pthread_cond_init
+     (cond : access pthread_cond_t;
+      attr : access pthread_condattr_t) return int;
+   pragma Import (C, pthread_cond_init, "pthread_cond_init");
+
+   function pthread_cond_destroy (cond : access pthread_cond_t) return int;
+   pragma Import (C, pthread_cond_destroy, "pthread_cond_destroy");
+
+   function pthread_cond_signal (cond : access pthread_cond_t) return int;
+   pragma Import (C, pthread_cond_signal, "pthread_cond_signal");
+
+   function pthread_cond_wait
+     (cond  : access pthread_cond_t;
+      mutex : access pthread_mutex_t) return int;
+   pragma Import (C, pthread_cond_wait, "pthread_cond_wait");
+
+   function pthread_cond_timedwait
+     (cond    : access pthread_cond_t;
+      mutex   : access pthread_mutex_t;
+      abstime : access timespec) return int;
+   pragma Import (C, pthread_cond_timedwait, "pthread_cond_timedwait");
+
+   --------------------------
+   -- POSIX.1c  Section 13 --
+   --------------------------
+
+   PTHREAD_PRIO_NONE    : constant := 0;
+   PTHREAD_PRIO_INHERIT : constant := 1;
+   PTHREAD_PRIO_PROTECT : constant := 2;
+
+   function pthread_mutexattr_setprotocol
+     (attr     : access pthread_mutexattr_t;
+      protocol : int) return int;
+   pragma Import (C, pthread_mutexattr_setprotocol);
+
+   function pthread_mutexattr_setprioceiling
+     (attr        : access pthread_mutexattr_t;
+      prioceiling : int) return int;
+   pragma Import (C, pthread_mutexattr_setprioceiling);
+
+   type struct_sched_param is record
+      sched_priority : int;  --  scheduling priority
+   end record;
+   pragma Convention (C, struct_sched_param);
+
+   function pthread_setschedparam
+     (thread : pthread_t;
+      policy : int;
+      param  : access struct_sched_param) return int;
+   pragma Import (C, pthread_setschedparam, "pthread_setschedparam");
+
+   function pthread_attr_setschedpolicy
+     (attr   : access pthread_attr_t;
+      policy : int) return int;
+   pragma Import
+     (C, pthread_attr_setschedpolicy, "pthread_attr_setschedpolicy");
+
+   function sched_yield return int;
+   pragma Import (C, sched_yield, "sched_yield");
+
+   ---------------------------
+   -- P1003.1c - Section 16 --
+   ---------------------------
+
+   function pthread_attr_init
+     (attributes : access pthread_attr_t) return int;
+   pragma Import (C, pthread_attr_init, "pthread_attr_init");
+
+   function pthread_attr_destroy
+     (attributes : access pthread_attr_t) return int;
+   pragma Import (C, pthread_attr_destroy, "pthread_attr_destroy");
+
+   function pthread_attr_setdetachstate
+     (attr        : access pthread_attr_t;
+      detachstate : int) return int;
+   pragma Import
+     (C, pthread_attr_setdetachstate, "pthread_attr_setdetachstate");
+
+   function pthread_attr_setstacksize
+     (attr      : access pthread_attr_t;
+      stacksize : size_t) return int;
+   pragma Import (C, pthread_attr_setstacksize, "pthread_attr_setstacksize");
+
+   function pthread_create
+     (thread        : access pthread_t;
+      attributes    : access pthread_attr_t;
+      start_routine : Thread_Body;
+      arg           : System.Address) return int;
+   pragma Import (C, pthread_create, "pthread_create");
+
+   procedure pthread_exit (status : System.Address);
+   pragma Import (C, pthread_exit, "pthread_exit");
+
+   function pthread_self return pthread_t;
+   pragma Import (C, pthread_self, "pthread_self");
+
+   function lwp_self return System.Address;
+   pragma Import (C, lwp_self, "__gnat_lwp_self");
+
+   --------------------------
+   -- POSIX.1c  Section 17 --
+   --------------------------
+
+   function pthread_setspecific
+     (key   : pthread_key_t;
+      value : System.Address) return int;
+   pragma Import (C, pthread_setspecific, "pthread_setspecific");
+
+   function pthread_getspecific (key : pthread_key_t) return System.Address;
+   pragma Import (C, pthread_getspecific, "pthread_getspecific");
+
+   type destructor_pointer is access procedure (arg : System.Address);
+   pragma Convention (C, destructor_pointer);
+
+   function pthread_key_create
+     (key        : access pthread_key_t;
+      destructor : destructor_pointer) return int;
+   pragma Import (C, pthread_key_create, "pthread_key_create");
+
+   ----------------
+   -- Extensions --
+   ----------------
+
+   CPU_SETSIZE : constant := 1_024;
+   --  Size of the cpu_set_t mask on most linux systems (SUSE 11 uses 4_096).
+   --  This is kept for backward compatibility (System.Task_Info uses it), but
+   --  the run-time library does no longer rely on static masks, using
+   --  dynamically allocated masks instead.
+
+   type bit_field is array (1 .. CPU_SETSIZE) of Boolean;
+   for bit_field'Size use CPU_SETSIZE;
+   pragma Pack (bit_field);
+   pragma Convention (C, bit_field);
+
+   type cpu_set_t is record
+      bits : bit_field;
+   end record;
+   pragma Convention (C, cpu_set_t);
+
+   type cpu_set_t_ptr is access all cpu_set_t;
+   --  In the run-time library we use this pointer because the size of type
+   --  cpu_set_t varies depending on the glibc version. Hence, objects of type
+   --  cpu_set_t are allocated dynamically using the number of processors
+   --  available in the target machine (value obtained at execution time).
+
+   function CPU_ALLOC (count : size_t) return cpu_set_t_ptr;
+   pragma Import (C, CPU_ALLOC, "__gnat_cpu_alloc");
+   --  Wrapper around the CPU_ALLOC C macro
+
+   function CPU_ALLOC_SIZE (count : size_t) return size_t;
+   pragma Import (C, CPU_ALLOC_SIZE, "__gnat_cpu_alloc_size");
+   --  Wrapper around the CPU_ALLOC_SIZE C macro
+
+   procedure CPU_FREE (cpuset : cpu_set_t_ptr);
+   pragma Import (C, CPU_FREE, "__gnat_cpu_free");
+   --  Wrapper around the CPU_FREE C macro
+
+   procedure CPU_ZERO (count : size_t; cpuset : cpu_set_t_ptr);
+   pragma Import (C, CPU_ZERO, "__gnat_cpu_zero");
+   --  Wrapper around the CPU_ZERO_S C macro
+
+   procedure CPU_SET (cpu : int; count : size_t; cpuset : cpu_set_t_ptr);
+   pragma Import (C, CPU_SET, "__gnat_cpu_set");
+   --  Wrapper around the CPU_SET_S C macro
+
+   function pthread_setaffinity_np
+     (thread     : pthread_t;
+      cpusetsize : size_t;
+      cpuset     : cpu_set_t_ptr) return int;
+   pragma Import (C, pthread_setaffinity_np, "pthread_setaffinity_np");
+   pragma Weak_External (pthread_setaffinity_np);
+   --  Use a weak symbol because this function may be available or not,
+   --  depending on the version of the system.
+
+   function pthread_attr_setaffinity_np
+     (attr       : access pthread_attr_t;
+      cpusetsize : size_t;
+      cpuset     : cpu_set_t_ptr) return int;
+   pragma Import (C, pthread_attr_setaffinity_np,
+                    "pthread_attr_setaffinity_np");
+   pragma Weak_External (pthread_attr_setaffinity_np);
+   --  Use a weak symbol because this function may be available or not,
+   --  depending on the version of the system.
+
+private
+
+   type sigset_t is
+     array (0 .. OS_Constants.SIZEOF_sigset - 1) of unsigned_char;
+   pragma Convention (C, sigset_t);
+   for sigset_t'Alignment use Interfaces.C.unsigned_long'Alignment;
+
+   type pid_t is new int;
+
+   type pthread_attr_t is record
+      Data : char_array (1 .. OS_Constants.PTHREAD_ATTR_SIZE);
+   end record;
+   pragma Convention (C, pthread_attr_t);
+   for pthread_attr_t'Alignment use Interfaces.C.unsigned_long'Alignment;
+
+   type pthread_condattr_t is record
+      Data : char_array (1 .. OS_Constants.PTHREAD_CONDATTR_SIZE);
+   end record;
+   pragma Convention (C, pthread_condattr_t);
+   for pthread_condattr_t'Alignment use Interfaces.C.int'Alignment;
+
+   type pthread_mutexattr_t is record
+      Data : char_array (1 .. OS_Constants.PTHREAD_MUTEXATTR_SIZE);
+   end  record;
+   pragma Convention (C, pthread_mutexattr_t);
+   for pthread_mutexattr_t'Alignment use Interfaces.C.int'Alignment;
+
+   type pthread_mutex_t is record
+      Data : char_array (1 .. OS_Constants.PTHREAD_MUTEX_SIZE);
+   end record;
+   pragma Convention (C, pthread_mutex_t);
+   for pthread_mutex_t'Alignment use Interfaces.C.unsigned_long'Alignment;
+
+   type pthread_rwlockattr_t is record
+      Data : char_array (1 .. OS_Constants.PTHREAD_RWLOCKATTR_SIZE);
+   end record;
+   pragma Convention (C, pthread_rwlockattr_t);
+   for pthread_rwlockattr_t'Alignment use Interfaces.C.unsigned_long'Alignment;
+
+   type pthread_rwlock_t is record
+      Data : char_array (1 .. OS_Constants.PTHREAD_RWLOCK_SIZE);
+   end record;
+   pragma Convention (C, pthread_rwlock_t);
+   for pthread_rwlock_t'Alignment use Interfaces.C.unsigned_long'Alignment;
+
+   type pthread_cond_t is record
+      Data : char_array (1 .. OS_Constants.PTHREAD_COND_SIZE);
+   end record;
+   pragma Convention (C, pthread_cond_t);
+   for pthread_cond_t'Alignment use Interfaces.Unsigned_64'Alignment;
+
+   type pthread_key_t is new unsigned;
+
+end System.OS_Interface;
diff --git a/gcc/ada/libgnat/g-sechas.ads b/gcc/ada/libgnat/g-sechas.ads
index 566a6967bee..d813df04c0b 100644
--- a/gcc/ada/libgnat/g-sechas.ads
+++ b/gcc/ada/libgnat/g-sechas.ads
@@ -45,7 +45,7 @@ with System;
 package GNAT.Secure_Hashes is
 
    type Buffer_Type is new Stream_Element_Array;
-   for Buffer_Type'Alignment use 8;
+   --  for Buffer_Type'Alignment use 8;
    --  Secure hash functions use a string buffer that is also accessed as an
    --  array of words, which may require up to 64 bit alignment.
 
diff --git a/gcc/ada/libgnat/g-sothco.ads b/gcc/ada/libgnat/g-sothco.ads
index e30af189d3a..74e421f6908 100644
--- a/gcc/ada/libgnat/g-sothco.ads
+++ b/gcc/ada/libgnat/g-sothco.ads
@@ -210,7 +210,7 @@ package GNAT.Sockets.Thin_Common is
 
    type Hostent is new
      System.Storage_Elements.Storage_Array (1 .. SOSC.SIZEOF_struct_hostent);
-   for Hostent'Alignment use 8;
+   --  for Hostent'Alignment use 8;
    --  Host entry. This is an opaque type used only via the following
    --  accessor functions, because 'struct hostent' has different layouts on
    --  different platforms.
@@ -240,7 +240,7 @@ package GNAT.Sockets.Thin_Common is
 
    type Servent is new
      System.Storage_Elements.Storage_Array (1 .. SOSC.SIZEOF_struct_servent);
-   for Servent'Alignment use 8;
+   --  for Servent'Alignment use 8;
    --  Service entry. This is an opaque type used only via the following
    --  accessor functions, because 'struct servent' has different layouts on
    --  different platforms.
diff --git a/gcc/ada/libgnat/i-cexten.ads b/gcc/ada/libgnat/i-cexten.ads
index 2772860ae1e..e87de305222 100644
--- a/gcc/ada/libgnat/i-cexten.ads
+++ b/gcc/ada/libgnat/i-cexten.ads
@@ -71,7 +71,7 @@ package Interfaces.C.Extensions is
       low, high : unsigned_long_long;
    end record;
    pragma Convention (C_Pass_By_Copy, Signed_128);
-   for Signed_128'Alignment use unsigned_long_long'Alignment * 2;
+   --  for Signed_128'Alignment use unsigned_long_long'Alignment * 2;
 
    --  128-bit floating-point type available on x86:
    --  typedef float float_128 __attribute__ ((mode (TF)));
@@ -80,7 +80,7 @@ package Interfaces.C.Extensions is
       low, high : unsigned_long_long;
    end record;
    pragma Convention (C_Pass_By_Copy, Float_128);
-   for Float_128'Alignment use unsigned_long_long'Alignment * 2;
+   --  for Float_128'Alignment use unsigned_long_long'Alignment * 2;
 
    --  128-bit complex floating-point type available on x86:
    --  typedef _Complex float cfloat_128 __attribute__ ((mode (TC)));
diff --git a/gcc/ada/libgnat/s-bitfie.ads b/gcc/ada/libgnat/s-bitfie.ads
index 21b72949be5..0b436896241 100644
--- a/gcc/ada/libgnat/s-bitfie.ads
+++ b/gcc/ada/libgnat/s-bitfie.ads
@@ -43,9 +43,9 @@ package System.Bitfields is
    Val_Bits  : constant := Long_Long_Integer'Size / 2;
    Val_Bytes : constant := Val_Bits / System.Storage_Unit;
 
-   type Val_2 is mod 2**(Val_Bits * 2) with Alignment => Val_Bytes;
+   type Val_2 is mod 2**(Val_Bits * 2) with Alignment => 2;
    pragma Provide_Shift_Operators (Val_2);
-   type Val is mod 2**Val_Bits with Alignment => Val_Bytes;
+   type Val is mod 2**Val_Bits with Alignment => 2;
 
    --  ??? It turns out that enabling checks on the instantiation of
    --  System.Bitfield_Utils.G makes a latent visibility bug appear on strict
diff --git a/gcc/ada/libgnat/s-bituti.ads b/gcc/ada/libgnat/s-bituti.ads
index 305133b45cc..b947b8286b0 100644
--- a/gcc/ada/libgnat/s-bituti.ads
+++ b/gcc/ada/libgnat/s-bituti.ads
@@ -85,7 +85,7 @@ package System.Bitfield_Utils is
       --  Assert that both are aligned the same, to the size in bytes of Val
       --  (not Val_2).
 
-      pragma Assert (Val'Alignment = Val'Size / Storage_Unit);
+      pragma Assert (Val'Alignment = 2);
       pragma Assert (Val_2'Alignment = Val'Alignment);
 
       type Val_Array is array (Positive range <>) of Val;
diff --git a/gcc/ada/libgnat/s-secsta.ads b/gcc/ada/libgnat/s-secsta.ads
index 504c89147aa..578aa425cec 100644
--- a/gcc/ada/libgnat/s-secsta.ads
+++ b/gcc/ada/libgnat/s-secsta.ads
@@ -276,7 +276,7 @@ private
    --  consumption overheads.
 
    type Chunk_Memory is array (Memory_Size range <>) of SSE.Storage_Element;
-   for Chunk_Memory'Alignment use Memory_Alignment;
+   --  for Chunk_Memory'Alignment use Memory_Alignment;
    --  The memory storage of a single chunk
 
    --------------
diff --git a/gcc/ada/libgnat/system-mint.ads b/gcc/ada/libgnat/system-mint.ads
new file mode 100644
index 00000000000..e71c2aef4df
--- /dev/null
+++ b/gcc/ada/libgnat/system-mint.ads
@@ -0,0 +1,146 @@
+------------------------------------------------------------------------------
+--                                                                          --
+--                        GNAT RUN-TIME COMPONENTS                          --
+--                                                                          --
+--                               S Y S T E M                                --
+--                                                                          --
+--                                 S p e c                                  --
+--                         (freemint/m68k Version)                          --
+--                                                                          --
+--          Copyright (C) 2014-2020, Free Software Foundation, Inc.         --
+--                                                                          --
+-- This specification is derived from the Ada Reference Manual for use with --
+-- GNAT. The copyright notice above, and the license provisions that follow --
+-- apply solely to the  contents of the part following the private keyword. --
+--                                                                          --
+-- GNAT is free software;  you can  redistribute it  and/or modify it under --
+-- terms of the  GNU General Public License as published  by the Free Soft- --
+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --
+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --
+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --
+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --
+--                                                                          --
+-- As a special exception under Section 7 of GPL version 3, you are granted --
+-- additional permissions described in the GCC Runtime Library Exception,   --
+-- version 3.1, as published by the Free Software Foundation.               --
+--                                                                          --
+-- You should have received a copy of the GNU General Public License and    --
+-- a copy of the GCC Runtime Library Exception along with this program;     --
+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --
+-- <http://www.gnu.org/licenses/>.                                          --
+--                                                                          --
+-- GNAT was originally developed  by the GNAT team at  New York University. --
+-- Extensive contributions were provided by Ada Core Technologies Inc.      --
+--                                                                          --
+------------------------------------------------------------------------------
+
+package System is
+   pragma Pure;
+   --  Note that we take advantage of the implementation permission to make
+   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada
+   --  2005, this is Pure in any case (AI-362).
+
+   pragma No_Elaboration_Code_All;
+   --  Allow the use of that restriction in units that WITH this unit
+
+   type Name is (SYSTEM_NAME_GNAT);
+   System_Name : constant Name := SYSTEM_NAME_GNAT;
+
+   --  System-Dependent Named Numbers
+
+   Min_Int             : constant := -2 ** (Standard'Max_Integer_Size - 1);
+   Max_Int             : constant :=  2 ** (Standard'Max_Integer_Size - 1) - 1;
+
+   Max_Binary_Modulus    : constant := 2 ** Standard'Max_Integer_Size;
+   Max_Nonbinary_Modulus : constant := 2 ** Integer'Size - 1;
+
+   Max_Base_Digits       : constant := Long_Long_Float'Digits;
+   Max_Digits            : constant := Long_Long_Float'Digits;
+
+   Max_Mantissa          : constant := Standard'Max_Integer_Size - 1;
+   Fine_Delta            : constant := 2.0 ** (-Max_Mantissa);
+
+   Tick                  : constant := 0.05;
+
+   --  Storage-related Declarations
+
+   type Address is private;
+   pragma Preelaborable_Initialization (Address);
+   Null_Address : constant Address;
+
+   Storage_Unit : constant := 8;
+   Word_Size    : constant := 32;
+   Memory_Size  : constant := 2 ** 32;
+
+   --  Address comparison
+
+   function "<"  (Left, Right : Address) return Boolean;
+   function "<=" (Left, Right : Address) return Boolean;
+   function ">"  (Left, Right : Address) return Boolean;
+   function ">=" (Left, Right : Address) return Boolean;
+   function "="  (Left, Right : Address) return Boolean;
+
+   pragma Import (Intrinsic, "<");
+   pragma Import (Intrinsic, "<=");
+   pragma Import (Intrinsic, ">");
+   pragma Import (Intrinsic, ">=");
+   pragma Import (Intrinsic, "=");
+
+   --  Other System-Dependent Declarations
+
+   type Bit_Order is (High_Order_First, Low_Order_First);
+   Default_Bit_Order : constant Bit_Order := High_Order_First;
+   pragma Warnings (Off, Default_Bit_Order); -- kill constant condition warning
+
+   --  Priority-related Declarations (RM D.1)
+
+   Max_Priority           : constant Positive := 30;
+   Max_Interrupt_Priority : constant Positive := 31;
+
+   subtype Any_Priority       is Integer      range  0 .. 31;
+   subtype Priority           is Any_Priority range  0 .. 30;
+   subtype Interrupt_Priority is Any_Priority range 31 .. 31;
+
+   Default_Priority : constant Priority := 15;
+
+private
+
+   type Address is mod Memory_Size;
+   Null_Address : constant Address := 0;
+
+   --------------------------------------
+   -- System Implementation Parameters --
+   --------------------------------------
+
+   --  These parameters provide information about the target that is used
+   --  by the compiler. They are in the private part of System, where they
+   --  can be accessed using the special circuitry in the Targparm unit
+   --  whose source should be consulted for more detailed descriptions
+   --  of the individual switch values.
+
+   Backend_Divide_Checks     : constant Boolean := False;
+   Backend_Overflow_Checks   : constant Boolean := True;
+   Command_Line_Args         : constant Boolean := True;
+   Configurable_Run_Time     : constant Boolean := False;
+   Denorm                    : constant Boolean := True;
+   Duration_32_Bits          : constant Boolean := False;
+   Exit_Status_Supported     : constant Boolean := True;
+   Machine_Overflows         : constant Boolean := False;
+   Machine_Rounds            : constant Boolean := True;
+   Preallocated_Stacks       : constant Boolean := False;
+   Signed_Zeros              : constant Boolean := True;
+   Stack_Check_Default       : constant Boolean := False;
+   Stack_Check_Probes        : constant Boolean := False;
+   Stack_Check_Limits        : constant Boolean := False;
+   Support_Aggregates        : constant Boolean := True;
+   Support_Atomic_Primitives : constant Boolean := True;
+   Support_Composite_Assign  : constant Boolean := True;
+   Support_Composite_Compare : constant Boolean := True;
+   Support_Long_Shifts       : constant Boolean := True;
+   Always_Compatible_Rep     : constant Boolean := False;
+   Suppress_Standard_Library : constant Boolean := False;
+   Use_Ada_Main_Program_Name : constant Boolean := False;
+   Frontend_Exceptions       : constant Boolean := False;
+   ZCX_By_Default            : constant Boolean := True;
+
+end System;
diff --git a/gcc/ada/output.adb b/gcc/ada/output.adb
index 432247f588c..2c112c405cd 100644
--- a/gcc/ada/output.adb
+++ b/gcc/ada/output.adb
@@ -26,7 +26,7 @@
 package body Output is
 
    Buffer : String (1 .. Buffer_Max + 1) := (others => '*');
-   for Buffer'Alignment use 4;
+   for Buffer'Alignment use Integer'Alignment;
    --  Buffer used to build output line. We do line buffering because it is
    --  needed for the support of the debug-generated-code option (-gnatD). Note
    --  any attempt to write more output to a line than can fit in the buffer
diff --git a/gcc/ada/s-oscons-tmplt.c b/gcc/ada/s-oscons-tmplt.c
index 582c35ef7db..f7d0857ee11 100644
--- a/gcc/ada/s-oscons-tmplt.c
+++ b/gcc/ada/s-oscons-tmplt.c
@@ -86,7 +86,7 @@ pragma Style_Checks ("M32766");
  ** a number of non-POSIX but useful/required features.
  **/
 
-#if defined (__linux__) || defined (__ANDROID__)
+#if defined (__linux__) || defined (__ANDROID__) || defined(__MINT__)
 
 /* Define _XOPEN_SOURCE to get IOV_MAX */
 # if !defined (_XOPEN_SOURCE)
@@ -160,7 +160,7 @@ pragma Style_Checks ("M32766");
 #endif
 
 #if defined (__linux__) || defined (__ANDROID__) || defined (__QNX__) \
-  || defined (__rtems__)
+  || defined (__rtems__) || defined(__MINT__)
 # include <pthread.h>
 # include <signal.h>
 #endif
@@ -1213,12 +1213,12 @@ CND(NI_NUMERICSERV, "Numeric form of the service")
 CND(NI_NUMERICHOST, "Numeric form of the hostname")
 
 #ifndef NI_MAXHOST
-# define NI_MAXHOST -1
+# define NI_MAXHOST 1025
 #endif
 CND(NI_MAXHOST, "Maximum size of hostname")
 
 #ifndef NI_MAXSERV
-# define NI_MAXSERV -1
+# define NI_MAXSERV 32
 #endif
 CND(NI_MAXSERV, "Maximum size of service name")
 
@@ -1766,7 +1766,7 @@ CND(SIZEOF_struct_hostent, "struct hostent")
 #define SIZEOF_struct_servent (sizeof (struct servent))
 CND(SIZEOF_struct_servent, "struct servent")
 
-#if defined (__linux__) || defined (__ANDROID__) || defined (__QNX__)
+#if defined (__linux__) || defined (__ANDROID__) || defined (__QNX__) || defined(__MINT__)
 #define SIZEOF_sigset (sizeof (sigset_t))
 CND(SIZEOF_sigset, "sigset")
 #endif
@@ -1962,7 +1962,7 @@ CNS(CLOCK_RT_Ada, "")
 #endif
 
 #if defined (__APPLE__) || defined (__linux__) || defined (__ANDROID__) \
-  || defined (__QNX__) || defined (__rtems__) || defined (DUMMY)
+  || defined (__QNX__) || defined (__rtems__) || defined (DUMMY) || defined(__MINT__)
 /*
 
    --  Sizes of pthread data types
diff --git a/gcc/ada/sinput.ads b/gcc/ada/sinput.ads
index 9e66d0967bc..9c9927af78d 100644
--- a/gcc/ada/sinput.ads
+++ b/gcc/ada/sinput.ads
@@ -941,7 +941,7 @@ private
    end record;
    Dope_Rec_Size : constant := 2 * Source_Ptr'Base'Size;
    for Dope_Rec'Size use Dope_Rec_Size;
-   for Dope_Rec'Alignment use Dope_Rec_Size / 8;
+   for Dope_Rec'Alignment use Source_Ptr'Base'Alignment;
    type Dope_Ptr is access all Dope_Rec;
 
    procedure Set_Dope
diff --git a/gcc/ada/stat64.c b/gcc/ada/stat64.c
new file mode 100644
index 00000000000..0c815c5642f
--- /dev/null
+++ b/gcc/ada/stat64.c
@@ -0,0 +1,66 @@
+#ifndef _GNU_SOURCE
+#define _GNU_SOURCE
+#endif
+#define _FILE_OFFSET_BITS 64
+#include <sys/stat.h>
+
+#if defined (__cplusplus)
+extern "C" {
+#endif
+
+#ifdef __linux__
+
+#if __GLIBC_PREREQ(2, 33)
+
+#include <stdarg.h>
+#include <fcntl.h>
+
+/*
+ * those are referenced by the hosts libgnat.a
+ */
+
+extern int __xstat64(int __ver, const char *__filename,
+      struct stat64 *__stat_buf) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 3)));
+extern int __lxstat64(int __ver, const char *__filename,
+       struct stat64 *__stat_buf) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 3)));
+extern int __fxstat64(int __ver, int __fildes, struct stat64 *__stat_buf)
+     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3)));
+
+__attribute__((__nothrow__))
+int stat64(const char *__path, struct stat64 *__statbuf)
+{
+	return __xstat64(1, __path, __statbuf);
+}
+
+__attribute__((__nothrow__)) 
+int lstat64 (const char *__path, struct stat64 *__statbuf)
+{
+	return __lxstat64(1, __path, __statbuf);
+}
+
+__attribute__((__nothrow__)) 
+int fstat64(int __fd, struct stat64 *__statbuf)
+{
+	return __fxstat64(1, __fd, __statbuf);
+}
+
+#undef fcntl
+int fcntl64(int fd, int cmd, ...)
+{
+  va_list ap;
+  void *arg;
+
+  va_start (ap, cmd);
+  arg = va_arg (ap, void *);
+  va_end (ap);
+
+  return fcntl(fd, cmd, arg);
+}
+
+#endif /* __GLIBC_PREREQ */
+
+#endif /* __linux__ */
+
+#if defined (__cplusplus)
+}
+#endif
diff --git a/gcc/ada/terminals.c b/gcc/ada/terminals.c
index ec9db3a6a4c..af66385f483 100644
--- a/gcc/ada/terminals.c
+++ b/gcc/ada/terminals.c
@@ -34,7 +34,7 @@
 /* First all usupported platforms. Add stubs for exported routines. */
 
 #if defined (VMS) || defined (__vxworks) || defined (__Lynx__) \
-  || defined (__ANDROID__) || defined (__PikeOS__) || defined(__DJGPP__)
+  || defined (__ANDROID__) || defined (__PikeOS__) || defined(__DJGPP__) || defined(__MINT__)
 
 void *
 __gnat_new_tty (void)
diff --git a/gcc/c-family/c-common.c b/gcc/c-family/c-common.c
index ae3ef89b05c..157caf393bc 100644
--- a/gcc/c-family/c-common.c
+++ b/gcc/c-family/c-common.c
@@ -5291,9 +5291,14 @@ check_user_alignment (const_tree align, bool objfile, bool warn_zero)
       unsigned maxalign = MAX_OFILE_ALIGNMENT / BITS_PER_UNIT;
       if (!tree_fits_uhwi_p (align) || tree_to_uhwi (align) > maxalign)
 	{
+#if 0
 	  error ("requested alignment %qE exceeds object file maximum %u",
 		 align, maxalign);
 	  return -1;
+#else
+	  warning (OPT_Wattributes, "requested alignment %qE exceeds object file maximum %u",
+		 align, maxalign);
+#endif
 	}
     }
 
diff --git a/gcc/c/Make-lang.in b/gcc/c/Make-lang.in
index a1cdee87264..5a2323b1b46 100644
--- a/gcc/c/Make-lang.in
+++ b/gcc/c/Make-lang.in
@@ -85,7 +85,7 @@ cc1-checksum.c : build/genchecksum$(build_exeext) checksum-options \
 cc1$(exeext): $(C_OBJS) cc1-checksum.o $(BACKEND) $(LIBDEPS)
 	@$(call LINK_PROGRESS,$(INDEX.c),start)
 	+$(LLINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ $(C_OBJS) \
-	  cc1-checksum.o $(BACKEND) $(LIBS) $(BACKENDLIBS)
+	  cc1-checksum.o $(BACKEND) $(LIBS) $(BACKENDLIBS) $(GLIBC_SO)
 	@$(call LINK_PROGRESS,$(INDEX.c),end)
 
 cc1.fda: ../stage1-gcc/cc1$(exeext) ../prev-gcc/$(PERF_DATA)
diff --git a/gcc/c/c-decl.c b/gcc/c/c-decl.c
index 2b567ce7c88..3b94cf703da 100644
--- a/gcc/c/c-decl.c
+++ b/gcc/c/c-decl.c
@@ -10366,9 +10366,12 @@ check_for_loop_decls (location_t loc, bool turn_off_iso_c99_error)
 	}
       return NULL_TREE;
     }
-  else
-    pedwarn_c90 (loc, OPT_Wpedantic, "ISO C90 does not support %<for%> loop "
-		 "initial declarations");
+  if (warn_c90_c99_compat > 0)
+  {
+	warning_at (loc, OPT_Wc90_c99_compat,
+	   "ISO C90 does not support %<for%> loop "
+		"initial declarations");
+  }
 
   /* C99 subclause 6.8.5 paragraph 3:
 
diff --git a/gcc/collect2.c b/gcc/collect2.c
index 3e212fc75f3..5e38c9751b7 100644
--- a/gcc/collect2.c
+++ b/gcc/collect2.c
@@ -158,6 +158,16 @@ int do_collecting = 0;
 #define DO_COLLECT_EXPORT_LIST 0
 #endif
 
+/*
+ * these are from xm-mingw32.h, but this is only included
+ * for the target; we need those definitions here also
+ * when using MinGW as host for a cross-compiler
+ */
+#ifdef __MINGW32__
+#undef HOST_EXECUTABLE_SUFFIX
+#define HOST_EXECUTABLE_SUFFIX ".exe"
+#endif
+
 /* Nonzero if we should suppress the automatic demangling of identifiers
    in linker error messages.  Set from COLLECT_NO_DEMANGLE.  */
 int no_demangle;
@@ -775,6 +785,8 @@ do_link (char **ld_argv, const char *atsuffix)
 
 /* Main program.  */
 
+#include "libcmain.h"
+
 int
 main (int argc, char **argv)
 {
diff --git a/gcc/common/config/m68k/m68k-common.c b/gcc/common/config/m68k/m68k-common.c
index 6a9cd18189c..0660f0b0dde 100644
--- a/gcc/common/config/m68k/m68k-common.c
+++ b/gcc/common/config/m68k/m68k-common.c
@@ -75,4 +75,26 @@ m68k_handle_option (struct gcc_options *opts,
 #undef TARGET_HANDLE_OPTION
 #define TARGET_HANDLE_OPTION m68k_handle_option
 
+/* Implement TARGET_EXCEPT_UNWIND_INFO.  */
+
+static enum unwind_info_type
+m68k_except_unwind_info (struct gcc_options *opts ATTRIBUTE_UNUSED)
+{
+#ifdef USING_ELFOS_H
+  /* Honor the --enable-sjlj-exceptions configure switch.  */
+#ifdef CONFIG_SJLJ_EXCEPTIONS
+  if (CONFIG_SJLJ_EXCEPTIONS)
+    return UI_SJLJ;
+#endif
+
+  if (DWARF2_UNWIND_INFO)
+    return UI_DWARF2;
+#endif
+
+  return UI_SJLJ;
+}
+
+#undef TARGET_EXCEPT_UNWIND_INFO
+#define TARGET_EXCEPT_UNWIND_INFO m68k_except_unwind_info
+
 struct gcc_targetm_common targetm_common = TARGETM_COMMON_INITIALIZER;
diff --git a/gcc/config.gcc b/gcc/config.gcc
index 6e6ce881d89..de87a3c7300 100644
--- a/gcc/config.gcc
+++ b/gcc/config.gcc
@@ -2223,7 +2223,10 @@ i[34567]86-*-mingw* | x86_64-*-mingw*)
 			tmake_file="${tmake_file} i386/t-mingw-w32"
 			;;
 	esac
-        native_system_header_dir=/mingw/include
+	# Don't ignore values passed in to configure via --native-system-header-dir
+	if test x$native_system_header_dir = x ; then
+		native_system_header_dir=/mingw/include
+	fi
 	target_gtfiles="$target_gtfiles \$(srcdir)/config/i386/winnt.c"
 	extra_options="${extra_options} i386/cygming.opt i386/mingw.opt"
 	case ${target} in
@@ -2424,6 +2427,29 @@ m68k-*-linux*)			# Motorola m68k's running GNU/Linux
 	tm_defines="${tm_defines} MOTOROLA=1"
 	tmake_file="${tmake_file} m68k/t-floatlib m68k/t-linux m68k/t-mlibs"
 	;;
+m68k-*-mintelf*)
+	default_m68k_cpu=68000
+	default_cf_cpu=5475
+	tm_file="${tm_file} dbxelf.h elfos.h m68k/mint.h m68k/mint-stdint.h"
+	tm_defines="${tm_defines} MOTOROLA=1"
+	tmake_file="m68k/t-floatlib m68k/t-mint"
+	xm_file=m68k/xm-mint.h
+	gas=yes
+	gnu_ld=yes
+	if test x${disable_initfini_array} != xyes; then
+		gcc_cv_initfini_array=yes
+	fi
+	;;
+m68k-*-mint*)
+	default_m68k_cpu=68000
+	default_cf_cpu=5475
+	tm_file="${tm_file} m68k/mint.h m68k/mint-stdint.h"
+	tm_defines="${tm_defines} MOTOROLA=1"
+	tmake_file="m68k/t-floatlib m68k/t-mint"
+	xm_file=m68k/xm-mint.h
+	gas=yes
+	gnu_ld=yes
+	;;
 m68k-*-rtems*)
 	default_m68k_cpu=68020
 	default_cf_cpu=5206
diff --git a/gcc/config.host b/gcc/config.host
index 0a02c33cc80..6345f6c0346 100644
--- a/gcc/config.host
+++ b/gcc/config.host
@@ -234,7 +234,7 @@ case ${host} in
     host_exeext=.exe
     host_lto_plugin_soname=cyglto_plugin.dll
     ;;
-  i[34567]86-*-mingw32*)
+  i[34567]86-*-mingw32* | i[34567]86-*-msys*)
     host_xm_file=i386/xm-mingw32.h
     host_xmake_file="${host_xmake_file} i386/x-mingw32"
     host_exeext=.exe
@@ -242,7 +242,7 @@ case ${host} in
     host_extra_gcc_objs="${host_extra_gcc_objs} driver-mingw32.o"
     host_lto_plugin_soname=liblto_plugin.dll
     ;;
-  x86_64-*-mingw*)
+  x86_64-*-mingw* | x86_64-*-msys*)
     use_long_long_for_widest_fast_int=yes
     host_xm_file=i386/xm-mingw32.h
     host_xmake_file="${host_xmake_file} i386/x-mingw32"
diff --git a/gcc/config/elfos.h b/gcc/config/elfos.h
index 7a736cc3b89..16299c8c2b5 100644
--- a/gcc/config/elfos.h
+++ b/gcc/config/elfos.h
@@ -198,7 +198,13 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
 #define ASCII_DATA_ASM_OP	"\t.ascii\t"
 
 /* Support a read-only data section.  */
-#define READONLY_DATA_SECTION_ASM_OP	"\t.section\t.rodata"
+#ifndef READONLY_DATA_SECTION_ASM_OP
+#define READONLY_DATA_SECTION_ASM_OP	"\t.section\t" ELF_DEFAULT_RODATA_SECTION
+#endif
+#define ELF_SECTION_FORMAT		"\t.section %s"
+#define ELF_DEFAULT_TEXT_SECTION	".text"
+#define ELF_DEFAULT_DATA_SECTION	".data"
+#define ELF_DEFAULT_RODATA_SECTION	".rodata"
 
 /* On svr4, we *do* have support for the .init and .fini sections, and we
    can put stuff in there to be executed before and after `main'.  We let
diff --git a/gcc/config/i386/cygming.opt b/gcc/config/i386/cygming.opt
index 1907874995f..b7567dac042 100644
--- a/gcc/config/i386/cygming.opt
+++ b/gcc/config/i386/cygming.opt
@@ -22,6 +22,9 @@ mconsole
 Target RejectNegative
 Create console application.
 
+mcrtdll=
+Target RejectNegative Joined
+
 mdll
 Target RejectNegative
 Generate code for a DLL.
diff --git a/gcc/config/i386/host-mingw32.c b/gcc/config/i386/host-mingw32.c
index 360a280b23a..33a71f6e6a9 100644
--- a/gcc/config/i386/host-mingw32.c
+++ b/gcc/config/i386/host-mingw32.c
@@ -44,9 +44,6 @@ static size_t mingw32_gt_pch_alloc_granularity (void);
 
 static inline void w32_error(const char*, const char*, int, const char*);
 
-/* FIXME: Is this big enough?  */
-static const size_t pch_VA_max_size  = 128 * 1024 * 1024;
-
 /* Granularity for reserving address space.  */
 static size_t va_granularity = 0x10000;
 
@@ -88,9 +85,6 @@ static void *
 mingw32_gt_pch_get_address (size_t size, int)
 {
   void* res;
-  size = (size + va_granularity - 1) & ~(va_granularity - 1);
-  if (size > pch_VA_max_size)
-    return NULL;
 
   /* FIXME: We let system determine base by setting first arg to NULL.
      Allocating at top of available address space avoids unnecessary
@@ -100,7 +94,7 @@ mingw32_gt_pch_get_address (size_t size, int)
      If we allocate at bottom we need to reserve the address as early
      as possible and at the same point in each invocation. */
  
-  res = VirtualAlloc (NULL, pch_VA_max_size,
+  res = VirtualAlloc (NULL, size,
 		      MEM_RESERVE | MEM_TOP_DOWN,
 		      PAGE_NOACCESS);
   if (!res)
@@ -150,7 +144,7 @@ mingw32_gt_pch_use_address (void *addr, size_t size, int fd,
 
   /* Offset must be also be a multiple of allocation granularity for
      this to work.  We can't change the offset. */ 
-  if ((offset & (va_granularity - 1)) != 0 || size > pch_VA_max_size)
+  if ((offset & (va_granularity - 1)) != 0)
     return -1;
 
 
diff --git a/gcc/config/i386/mingw32.h b/gcc/config/i386/mingw32.h
index 05ffcfec755..71b5fcf4c42 100644
--- a/gcc/config/i386/mingw32.h
+++ b/gcc/config/i386/mingw32.h
@@ -185,7 +185,7 @@ along with GCC; see the file COPYING3.  If not see
 #define REAL_LIBGCC_SPEC \
   "%{mthreads:-lmingwthrd} -lmingw32 \
    " SHARED_LIBGCC_SPEC " \
-   -lmoldname -lmingwex -lmsvcrt -lkernel32"
+   -lmoldname -lmingwex %{!mcrtdll=*:-lmsvcrt} %{mcrtdll=*:-l%*} -lkernel32"
 
 #undef STARTFILE_SPEC
 #define STARTFILE_SPEC "%{shared|mdll:dllcrt2%O%s} \
@@ -205,8 +205,16 @@ along with GCC; see the file COPYING3.  If not see
   crtend.o%s"
 
 /* Override startfile prefix defaults.  */
+/*
+ * change hardcoded /mingw prefix to the real prefix .. isn't this rubbish?
+ * it might work at build time and could be important there but beyond that?!
+ */
 #ifndef STANDARD_STARTFILE_PREFIX_1
-#define STANDARD_STARTFILE_PREFIX_1 "/mingw/lib/"
+#ifdef __MINGW64__
+#define STANDARD_STARTFILE_PREFIX_1 "C:/msys64/mingw64/x86_64-w64-mingw64/lib/"
+#else
+#define STANDARD_STARTFILE_PREFIX_1 "C:/msys64/mingw32/i686-w64-mingw32/lib/"
+#endif
 #endif
 #ifndef STANDARD_STARTFILE_PREFIX_2
 #define STANDARD_STARTFILE_PREFIX_2 ""
@@ -215,7 +223,11 @@ along with GCC; see the file COPYING3.  If not see
 /* For native mingw-version we need to take care that NATIVE_SYSTEM_HEADER_DIR
    macro contains POSIX-style path.  See bug 52947.  */
 #undef NATIVE_SYSTEM_HEADER_DIR
-#define NATIVE_SYSTEM_HEADER_DIR "/mingw/include"
+#ifdef __MINGW64__
+#define NATIVE_SYSTEM_HEADER_DIR "C:/msys64/mingw64/x86_64-w64-mingw64/include"
+#else
+#define NATIVE_SYSTEM_HEADER_DIR "C:/msys64/mingw32/i686-w64-mingw32/include"
+#endif
 
 /* Output STRING, a string representing a filename, to FILE.
    We canonicalize it to be in Unix format (backslashes are replaced
diff --git a/gcc/config/i386/xm-mingw32.h b/gcc/config/i386/xm-mingw32.h
index a2216d28711..dfc7336f2b8 100644
--- a/gcc/config/i386/xm-mingw32.h
+++ b/gcc/config/i386/xm-mingw32.h
@@ -25,9 +25,10 @@ along with GCC; see the file COPYING3.  If not see
 
 /* This is the name of the null device on windows.  */
 #define HOST_BIT_BUCKET "nul"
+#define HOST_BIT_BUCKET2 "/dev/null"
 
 /*  The st_ino field of struct stat is always 0.  */
-#define HOST_LACKS_INODE_NUMBERS
+#define HOST_LACKS_INODE_NUMBERS 1
 
 #ifdef __MINGW32__
 #undef __USE_MINGW_ANSI_STDIO
diff --git a/gcc/config/i386/xmmintrin.h b/gcc/config/i386/xmmintrin.h
index f013f5c08fe..e104b13618f 100644
--- a/gcc/config/i386/xmmintrin.h
+++ b/gcc/config/i386/xmmintrin.h
@@ -64,6 +64,10 @@ _mm_prefetch (const void *__P, enum _mm_hint __I)
 #define __DISABLE_SSE__
 #endif /* __SSE__ */
 
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 /* The Intel API is flexible enough that we must allow aliasing with other
    vector types, and their scalar components.  */
 typedef float __m128 __attribute__ ((__vector_size__ (16), __may_alias__));
@@ -1312,6 +1316,10 @@ do {									\
   (row3) = __builtin_ia32_movhlps (__t3, __t2);				\
 } while (0)
 
+#ifdef __cplusplus
+}
+#endif
+
 /* For backward source compatibility.  */
 # include <emmintrin.h>
 
diff --git a/gcc/config/m68k/linux.h b/gcc/config/m68k/linux.h
index ccf5d9fe802..e4ed097a319 100644
--- a/gcc/config/m68k/linux.h
+++ b/gcc/config/m68k/linux.h
@@ -226,8 +226,6 @@ along with GCC; see the file COPYING3.  If not see
      : "%d0", "%d2", "%d3");						\
 }
 
-#define TARGET_ASM_FILE_END file_end_indicate_exec_stack
-
 #undef DBX_REGISTER_NUMBER
 #define DBX_REGISTER_NUMBER(REGNO) (REGNO)
 
@@ -245,4 +243,4 @@ along with GCC; see the file COPYING3.  If not see
 
 /* Install the __sync libcalls.  */
 #undef TARGET_INIT_LIBFUNCS
-#define TARGET_INIT_LIBFUNCS  m68k_init_sync_libfuncs
+#define TARGET_INIT_LIBFUNCS  m68k_init_libfuncs
diff --git a/gcc/config/m68k/m68k.c b/gcc/config/m68k/m68k.c
index 40bdcb052f8..e141a96b056 100644
--- a/gcc/config/m68k/m68k.c
+++ b/gcc/config/m68k/m68k.c
@@ -67,6 +67,7 @@ along with GCC; see the file COPYING3.  If not see
 #include "builtins.h"
 #include "rtl-iter.h"
 #include "toplev.h"
+#include "dbxout.h"
 
 /* This file should be included last.  */
 #include "target-def.h"
@@ -83,6 +84,11 @@ enum reg_class regno_reg_class[] =
 };
 
 
+/* Name of text, data, and rodata sections used in varasm.c.  */
+const char *m68k_text_section;
+const char *m68k_data_section;
+const char *m68k_rodata_section;
+
 /* The minimum number of integer registers that we want to save with the
    movem instruction.  Using two movel instructions instead of a single
    moveml is about 15% faster for the 68020 and 68030 at no expense in
@@ -187,7 +193,7 @@ static void m68k_function_arg_advance (cumulative_args_t,
 static rtx m68k_function_arg (cumulative_args_t, const function_arg_info &);
 static bool m68k_cannot_force_const_mem (machine_mode mode, rtx x);
 static bool m68k_output_addr_const_extra (FILE *, rtx);
-static void m68k_init_sync_libfuncs (void) ATTRIBUTE_UNUSED;
+static void m68k_init_libfuncs (void) ATTRIBUTE_UNUSED;
 static enum flt_eval_method
 m68k_excess_precision (enum excess_precision_type);
 static unsigned int m68k_hard_regno_nregs (unsigned int, machine_mode);
@@ -196,6 +202,7 @@ static bool m68k_modes_tieable_p (machine_mode, machine_mode);
 static machine_mode m68k_promote_function_mode (const_tree, machine_mode,
 						int *, const_tree, int);
 static void m68k_asm_final_postscan_insn (FILE *, rtx_insn *insn, rtx [], int);
+static void m68k_file_end (void);
 
 /* Initialize the GCC target structure.  */
 
@@ -234,6 +241,8 @@ static void m68k_asm_final_postscan_insn (FILE *, rtx_insn *insn, rtx [], int);
 
 #undef TARGET_ASM_FILE_START_APP_OFF
 #define TARGET_ASM_FILE_START_APP_OFF true
+#undef TARGET_ASM_FILE_END
+#define TARGET_ASM_FILE_END m68k_file_end
 
 #undef TARGET_LEGITIMIZE_ADDRESS
 #define TARGET_LEGITIMIZE_ADDRESS m68k_legitimize_address
@@ -658,6 +667,27 @@ m68k_option_override (void)
       gcc_unreachable ();
     }
 
+  /* Set the pseudo-ops for the various standard sections.  */
+#ifdef ELF_SECTION_FORMAT
+  {
+  char *tmp;
+  const char *name;
+  name = m68k_text_string ? m68k_text_string : M68K_DEFAULT_TEXT_SECTION;
+  m68k_text_section = tmp = XNEWVEC (char, strlen (name) + sizeof (ELF_SECTION_FORMAT) + 1);
+  sprintf (tmp, ELF_SECTION_FORMAT, name);
+  name = m68k_data_string ? m68k_data_string : M68K_DEFAULT_DATA_SECTION;
+  m68k_data_section = tmp = XNEWVEC (char, strlen (name) + sizeof (ELF_SECTION_FORMAT) + 1);
+  sprintf (tmp, ELF_SECTION_FORMAT, name);
+  name = m68k_rodata_string ? m68k_rodata_string : M68K_DEFAULT_RODATA_SECTION;
+  m68k_rodata_section = tmp = XNEWVEC (char, strlen (name) + sizeof (ELF_SECTION_FORMAT) + 1);
+  sprintf (tmp, ELF_SECTION_FORMAT, name);
+  }
+#else
+  m68k_text_section = "\t" M68K_DEFAULT_TEXT_SECTION;
+  m68k_data_section = "\t" M68K_DEFAULT_DATA_SECTION;
+  m68k_rodata_section = m68k_text_section;
+#endif
+
 #ifndef ASM_OUTPUT_ALIGN_WITH_NOP
   parse_alignment_opts ();
   int label_alignment = align_labels.levels[0].get_value ();
@@ -712,6 +742,14 @@ m68k_option_override (void)
       else
 	m68k_sched_mac = MAC_NO;
     }
+
+  /*
+   * disable -fcombine-stack-adjustments for coldfire/mshort combination,
+   * which generates wrong CFI offsets.
+   * https://gcc.gnu.org/bugzilla/show_bug.cgi?id=88160
+   */
+  if (PREFERRED_STACK_BOUNDARY > 16 && INT_TYPE_SIZE <= 16 && (write_symbols & DWARF2_DEBUG))
+    flag_combine_stack_adjustments = 0;
 }
 
 /* Implement TARGET_OVERRIDE_OPTIONS_AFTER_CHANGE.  */
@@ -7076,7 +7114,7 @@ m68k_conditional_register_usage (void)
 }
 
 static void
-m68k_init_sync_libfuncs (void)
+m68k_init_libfuncs (void)
 {
   init_sync_libfuncs (UNITS_PER_WORD);
 }
@@ -7150,4 +7188,36 @@ m68k_promote_function_mode (const_tree type, machine_mode mode,
   return mode;
 }
 
+/* Do not emit .note.GNU-stack by default.  */
+#undef NEED_INDICATE_EXEC_STACK
+#ifdef USING_ELFOS_H
+#define NEED_INDICATE_EXEC_STACK	1
+#else
+#define NEED_INDICATE_EXEC_STACK	0
+#endif
+
+static void
+m68k_file_end (void)
+{
+#if defined(HAVE_AS_GNU_ATTRIBUTE)
+#if 0
+  /* Emit .gnu_attribute directive for Tag_GNU_M68K_ABI_FP.  */
+  int fp_abi = TARGET_68881 ? (FUNCTION_VALUE_REGNO_P(FP0_REG) ? 1 : 2) : 0;
+  fprintf (asm_out_file, "\t.gnu_attribute 4,%d\n", fp_abi);
+#endif
+#endif
+#ifdef USING_ELFOS_H
+  /* Emit .gnu_attribute directive for Tag_GNU_M68K_ABI.  */
+#ifndef TARGET_FASTCALL
+#define TARGET_FASTCALL 0
+#endif
+  int abi = 1 + (TARGET_SHORT ? 2 : 0) + (TARGET_FASTCALL ? 4 : 0);
+  fprintf (asm_out_file, "\t.gnu_attribute 8,%d\n", abi);
+#endif
+
+  if (NEED_INDICATE_EXEC_STACK)
+    /* Add .note.GNU-stack.  */
+    file_end_indicate_exec_stack ();
+}
+
 #include "gt-m68k.h"
diff --git a/gcc/config/m68k/m68k.h b/gcc/config/m68k/m68k.h
index 8dfa3a9bb4c..7d363d66d74 100644
--- a/gcc/config/m68k/m68k.h
+++ b/gcc/config/m68k/m68k.h
@@ -37,8 +37,8 @@ along with GCC; see the file COPYING3.  If not see
 
 #define ASM_CPU_SPEC "\
 %{m68851}%{mno-68851} %{m68881}%{mno-68881} %{msoft-float:-mno-float} \
-%{m68020-40:-m68040}%{m68020-60:-m68040}\
-%{mcpu=*:-mcpu=%*}%{march=*:-march=%*}\
+%{m68020-40:-m68040} %{m68020-60:-m68040} \
+%{mcpu=*:-mcpu=%*} %{march=*:-march=%*}\
 "
 #define ASM_PCREL_SPEC "%{" FPIE_OR_FPIC_SPEC ":--pcrel} \
  %{mpcrel:%{" NO_FPIE_AND_FPIC_SPEC ":--pcrel}} \
@@ -131,7 +131,10 @@ along with GCC; see the file COPYING3.  If not see
 	}								\
 									\
       if (TARGET_68881)							\
-	builtin_define ("__HAVE_68881__");				\
+	{								\
+	  builtin_define ("__HAVE_68881__");				\
+	  builtin_define ("__M68881__"); /* Non-standard */		\
+	}								\
 									\
       if (TARGET_COLDFIRE)						\
 	{								\
@@ -543,9 +546,10 @@ extern enum reg_class regno_reg_class[];
    The function name __transfer_from_trampoline is not actually used.
    The function definition just permits use of "asm with operands"
    (though the operand list is empty).  */
+void __transfer_from_trampoline (void);
 #define TRANSFER_FROM_TRAMPOLINE				\
 void								\
-__transfer_from_trampoline ()					\
+__transfer_from_trampoline (void)					\
 {								\
   register char *a0 asm (M68K_STATIC_CHAIN_REG_NAME);		\
   asm (GLOBAL_ASM_OP "___trampoline");				\
@@ -554,6 +558,7 @@ __transfer_from_trampoline ()					\
   asm volatile ("move%.l %1,%0" : "=a" (a0) : "m" (a0[18]));	\
   asm ("rts":);							\
 }
+
 
 /* There are two registers that can always be eliminated on the m68k.
    The frame pointer and the arg pointer can be replaced by either the
@@ -673,16 +678,24 @@ __transfer_from_trampoline ()					\
 
 /* Control the assembler format that we output.  */
 
+extern const char *m68k_text_section, *m68k_data_section, *m68k_rodata_section;
+
 #define ASM_APP_ON "#APP\n"
 #define ASM_APP_OFF "#NO_APP\n"
-#define TEXT_SECTION_ASM_OP "\t.text"
-#define DATA_SECTION_ASM_OP "\t.data"
+#define TEXT_SECTION_ASM_OP m68k_text_section
+#define DATA_SECTION_ASM_OP m68k_data_section
+#undef READONLY_DATA_SECTION_ASM_OP
+#define READONLY_DATA_SECTION_ASM_OP	m68k_rodata_section
 #define GLOBAL_ASM_OP "\t.globl\t"
 #define REGISTER_PREFIX ""
 #define LOCAL_LABEL_PREFIX ""
 #define USER_LABEL_PREFIX "_"
 #define IMMEDIATE_PREFIX "#"
 
+#define M68K_DEFAULT_TEXT_SECTION ".text"
+#define M68K_DEFAULT_DATA_SECTION ".data"
+#define M68K_DEFAULT_RODATA_SECTION ".rodata"
+
 #define REGISTER_NAMES \
 {REGISTER_PREFIX"d0", REGISTER_PREFIX"d1", REGISTER_PREFIX"d2",	\
  REGISTER_PREFIX"d3", REGISTER_PREFIX"d4", REGISTER_PREFIX"d5",	\
diff --git a/gcc/config/m68k/m68k.opt b/gcc/config/m68k/m68k.opt
index f2a72ee8ef8..24165831162 100644
--- a/gcc/config/m68k/m68k.opt
+++ b/gcc/config/m68k/m68k.opt
@@ -197,3 +197,15 @@ Support more than 8192 GOT entries on ColdFire.
 mxtls
 Target Mask(XTLS)
 Support TLS segment larger than 64K.
+
+mtext=
+Target RejectNegative Joined Var(m68k_text_string) Init(0)
+Put functions in SECTION
+
+mdata=
+Target RejectNegative Joined Var(m68k_data_string) Init(0)
+Put data in SECTION
+
+mrodata=
+Target RejectNegative Joined Var(m68k_rodata_string) Init(0)
+Put read-only data in SECTION
diff --git a/gcc/config/m68k/math-68881.h b/gcc/config/m68k/math-68881.h
index 6d9f8b2d4a1..9fad2950508 100644
--- a/gcc/config/m68k/math-68881.h
+++ b/gcc/config/m68k/math-68881.h
@@ -44,6 +44,16 @@
 
 #include <errno.h>
 
+/* GCC 4.3 and above with -std=c99 or -std=gnu99 implements ISO C99
+   inline semantics, unless -fgnu89-inline is used.  */
+#ifdef __cplusplus
+# define __MATH_68881_INLINE inline
+#elif defined __GNUC_STDC_INLINE__
+# define __MATH_68881_INLINE extern __inline __attribute__ ((__gnu_inline__))
+#else
+# define __MATH_68881_INLINE extern __inline
+#endif
+
 #undef HUGE_VAL
 #ifdef __sun__
 /* The Sun assembler fails to handle the hex constant in the usual defn.  */
@@ -64,7 +74,7 @@
 })
 #endif
 
-__inline extern double
+__MATH_68881_INLINE double
 sin (double x)
 {
   double value;
@@ -75,7 +85,7 @@ sin (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 cos (double x)
 {
   double value;
@@ -86,7 +96,7 @@ cos (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 tan (double x)
 {
   double value;
@@ -97,7 +107,7 @@ tan (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 asin (double x)
 {
   double value;
@@ -108,7 +118,7 @@ asin (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 acos (double x)
 {
   double value;
@@ -119,7 +129,7 @@ acos (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 atan (double x)
 {
   double value;
@@ -130,7 +140,7 @@ atan (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 atan2 (double y, double x)
 {
   double pi, pi_over_2;
@@ -187,7 +197,7 @@ atan2 (double y, double x)
     }
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 sinh (double x)
 {
   double value;
@@ -198,7 +208,7 @@ sinh (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 cosh (double x)
 {
   double value;
@@ -209,7 +219,7 @@ cosh (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 tanh (double x)
 {
   double value;
@@ -220,7 +230,7 @@ tanh (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 atanh (double x)
 {
   double value;
@@ -231,7 +241,7 @@ atanh (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 exp (double x)
 {
   double value;
@@ -242,7 +252,7 @@ exp (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 expm1 (double x)
 {
   double value;
@@ -253,7 +263,7 @@ expm1 (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 log (double x)
 {
   double value;
@@ -264,7 +274,7 @@ log (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 log1p (double x)
 {
   double value;
@@ -275,7 +285,7 @@ log1p (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 log10 (double x)
 {
   double value;
@@ -286,7 +296,7 @@ log10 (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 sqrt (double x)
 {
   double value;
@@ -297,13 +307,13 @@ sqrt (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 hypot (double x, double y)
 {
   return sqrt (x*x + y*y);
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 pow (double x, double y)
 {
   if (x > 0)
@@ -352,7 +362,7 @@ pow (double x, double y)
     }
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 fabs (double x)
 {
   double value;
@@ -363,7 +373,7 @@ fabs (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 ceil (double x)
 {
   int rounding_mode, round_up;
@@ -385,7 +395,7 @@ ceil (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 floor (double x)
 {
   int rounding_mode, round_down;
@@ -408,7 +418,7 @@ floor (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 rint (double x)
 {
   int rounding_mode, round_nearest;
@@ -430,7 +440,7 @@ rint (double x)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 fmod (double x, double y)
 {
   double value;
@@ -442,7 +452,7 @@ fmod (double x, double y)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 drem (double x, double y)
 {
   double value;
@@ -454,19 +464,20 @@ drem (double x, double y)
   return value;
 }
 
-__inline extern double
-scalb (double x, int n)
+__MATH_68881_INLINE double
+scalb (double x, double n)
 {
   double value;
+  int exp = (int)(n);
 
   __asm ("fscale%.l %2,%0"
 	 : "=f" (value)
 	 : "0" (x),
-	   "dmi" (n));
+	   "dmi" (exp));
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 logb (double x)
 {
   double exponent;
@@ -477,7 +488,7 @@ logb (double x)
   return exponent;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 ldexp (double x, int n)
 {
   double value;
@@ -489,7 +500,7 @@ ldexp (double x, int n)
   return value;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 frexp (double x, int *exp)
 {
   double float_exponent;
@@ -514,7 +525,7 @@ frexp (double x, int *exp)
   return mantissa;
 }
 
-__inline extern double
+__MATH_68881_INLINE double
 modf (double x, double *ip)
 {
   double temp;
diff --git a/gcc/config/m68k/mint-stdint.h b/gcc/config/m68k/mint-stdint.h
new file mode 100644
index 00000000000..89538ccf0d6
--- /dev/null
+++ b/gcc/config/m68k/mint-stdint.h
@@ -0,0 +1,50 @@
+/* Definitions for <stdint.h> types on systems using MiNT.
+   Copyright (C) 2009-2018 Free Software Foundation, Inc.
+
+This file is part of GCC.
+
+GCC is free software; you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation; either version 3, or (at your option)
+any later version.
+
+GCC is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with GCC; see the file COPYING3.  If not see
+<http://www.gnu.org/licenses/>.  */
+
+#define SIG_ATOMIC_TYPE "int"
+
+#define INT8_TYPE "signed char"
+#define INT16_TYPE (TARGET_SHORT ? "int" : "short int")
+#define INT32_TYPE (TARGET_SHORT ? "long int" : "int")
+#define INT64_TYPE "long long int"
+#define UINT8_TYPE "unsigned char"
+#define UINT16_TYPE (TARGET_SHORT ? "unsigned int" : "short unsigned int")
+#define UINT32_TYPE (TARGET_SHORT ? "long unsigned int" : "unsigned int")
+#define UINT64_TYPE "long long unsigned int"
+
+#define INT_LEAST8_TYPE INT8_TYPE
+#define INT_LEAST16_TYPE INT16_TYPE
+#define INT_LEAST32_TYPE INT32_TYPE
+#define INT_LEAST64_TYPE INT64_TYPE
+#define UINT_LEAST8_TYPE UINT8_TYPE
+#define UINT_LEAST16_TYPE UINT16_TYPE
+#define UINT_LEAST32_TYPE UINT32_TYPE
+#define UINT_LEAST64_TYPE UINT64_TYPE
+
+#define INT_FAST8_TYPE INT8_TYPE
+#define INT_FAST16_TYPE INT16_TYPE
+#define INT_FAST32_TYPE INT32_TYPE
+#define INT_FAST64_TYPE INT64_TYPE
+#define UINT_FAST8_TYPE UINT8_TYPE
+#define UINT_FAST16_TYPE UINT16_TYPE
+#define UINT_FAST32_TYPE UINT32_TYPE
+#define UINT_FAST64_TYPE UINT64_TYPE
+
+#define INTPTR_TYPE "long int"
+#define UINTPTR_TYPE "long unsigned int"
diff --git a/gcc/config/m68k/mint.h b/gcc/config/m68k/mint.h
new file mode 100644
index 00000000000..07d1006b43d
--- /dev/null
+++ b/gcc/config/m68k/mint.h
@@ -0,0 +1,361 @@
+/* Definitions of target machine for GCC for Atari ST TOS/MiNT.
+   Copyright (C) 1994-2023 Free Software Foundation, Inc.
+
+This file is part of GCC.
+
+GCC is free software; you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation; either version 3, or (at your option)
+any later version.
+
+GCC is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with GCC; see the file COPYING3.  If not see
+<http://www.gnu.org/licenses/>.  */
+
+/* Here are four prefixes that are used by asm_fprintf to
+   facilitate customization for alternate assembler syntaxes.
+   Machines with no likelihood of an alternate syntax need not
+   define these and need not use asm_fprintf.  */
+
+/* The prefix for register names.  Note that REGISTER_NAMES
+   is supposed to include this prefix. Also note that this is NOT an
+   fprintf format string, it is a literal string */
+
+#undef REGISTER_PREFIX
+#define REGISTER_PREFIX "%"
+
+/* The prefix for local (compiler generated) labels.
+   These labels will not appear in the symbol table.  */
+
+#undef LOCAL_LABEL_PREFIX
+#define LOCAL_LABEL_PREFIX "."
+
+#undef ASM_COMMENT_START
+#define ASM_COMMENT_START "|"
+
+#undef TARGET_LIBC_HAS_FUNCTION
+#define TARGET_LIBC_HAS_FUNCTION no_c99_libc_has_function
+
+#undef WCHAR_TYPE
+#define WCHAR_TYPE "short unsigned int"
+
+#undef WCHAR_TYPE_SIZE
+#define WCHAR_TYPE_SIZE SHORT_TYPE_SIZE
+
+#if HAVE_INITFINI_ARRAY_SUPPORT
+#define GCC_HAVE_INITFINI_ARRAY_SUPPORT builtin_define ("__GCC_HAVE_INITFINI_ARRAY_SUPPORT");
+#else
+#define GCC_HAVE_INITFINI_ARRAY_SUPPORT
+#endif
+
+#undef TARGET_OS_CPP_BUILTINS
+#define TARGET_OS_CPP_BUILTINS()		\
+  do						\
+    {						\
+      builtin_define ("__MINT__");		\
+      GCC_HAVE_INITFINI_ARRAY_SUPPORT \
+      /* The GNU C++ standard library requires this.  */ \
+      if (c_dialect_cxx ()) \
+       builtin_define ("_GNU_SOURCE"); \
+      builtin_define_std ("atarist");		\
+      builtin_assert ("machine=atari");		\
+      builtin_assert ("system=mint");		\
+    }						\
+  while (0)
+
+/* The following defines are nonstandard
+   and are kept only for compatibility
+   with older versions of GCC for MiNT.  */
+
+#undef CPP_SPEC
+#define CPP_SPEC			\
+  "%{m68000|mcpu=68000:-D__M68000__} "		\
+  "%{m68020|mcpu=68020:-D__M68020__} "		\
+  "%{m68030|mcpu=68030:-D__M68020__} "		\
+  "%{m68040|mcpu=68040:-D__M68020__} "		\
+  "%{m68060|mcpu=68060:-D__M68020__} "		\
+  "%{m68020-40|mcpu=68020-40:-D__M68020__} "		\
+  "%{m68020-60|mcpu=68020-60:-D__M68020__} "		\
+  "%{!m680*:%{!mc680*:%{!mcpu=680*:-D__M68000__}}} "	\
+  "%{mshort:-D__MSHORT__}"
+
+#undef  LIB_SPEC
+#define LIB_SPEC	"-lc"
+
+/* The -g option generates stabs debug information.  */
+#define DBX_DEBUGGING_INFO 1
+
+/* Do not break .stabs pseudos into continuations.  */
+#define DBX_CONTIN_LENGTH 0
+
+/* This is the char to use for continuation (in case we need to turn
+   continuation back on).  */
+#define DBX_CONTIN_CHAR '?'
+
+/* This is the assembler directive to equate two values.  */
+#undef SET_ASM_OP
+#define SET_ASM_OP		"\t.set\t"
+
+/* This is how we tell the assembler that a symbol is weak.  */
+#undef ASM_WEAKEN_LABEL
+#define ASM_WEAKEN_LABEL(FILE,NAME) \
+  do { fputs ("\t.weak\t", FILE); assemble_name (FILE, NAME); \
+       fputc ('\n', FILE); } while (0)
+
+/* Don't default to pcc-struct-return, because gcc is the only compiler, and
+   we want to retain compatibility with older gcc versions.  */
+#define DEFAULT_PCC_STRUCT_RETURN 0
+
+/* Finalize the trampoline by flushing the insn cache.  */
+
+#undef FINALIZE_TRAMPOLINE
+#define FINALIZE_TRAMPOLINE(TRAMP)					\
+  if (TARGET_68020 || TARGET_COLDFIRE) \
+    maybe_emit_call_builtin___clear_cache ((TRAMP),			\
+					 plus_constant (Pmode,		\
+							(TRAMP),	\
+							TRAMPOLINE_SIZE))
+
+/* Clear the instruction cache from `beg' to `end'.  This makes an
+   inline system call to Ssystem(S_FLUSHCACHE).  The arguments are as
+   follows:
+
+	Ssystem(S_FLUSHCACHE, addr, len)
+
+   addr	  - the start address for the flush
+   len    - the number of bytes to flush
+
+   The kernel will push the instruction cache
+	    */
+
+#define CLEAR_INSN_CACHE(BEG, END)					\
+{									\
+  register unsigned long _beg __asm ("%d0") = (unsigned long) (BEG);	\
+  unsigned long _end = (unsigned long) (END);				\
+  register unsigned long _len __asm ("%d1") = (_end - _beg);	\
+  __asm __volatile							\
+    ("move%.l %1,-(%%sp)\n\t"	/* len */			\
+     "move%.l %0,-(%%sp)\n\t"	/* beg */			\
+     "move%.w #22,-(%%sp)\n\t"	/* S_FLUSHCACHE */			\
+     "move%.w #340,-(%%sp)\n\t"	/* system call nr */			\
+     "trap #1\n\t"								\
+     "lea 12(%%sp),%%sp" /* correct stack */ \
+     : /* no outputs */							\
+     : "r" (_beg), "r" (_len)						\
+     : "%d2", "%a0", "%a1", "%a2", "cc", "memory");						\
+}
+
+/* By default, the vtable entries are void pointers, the so the alignment
+   is the same as pointer alignment.  The value of this macro specifies
+   the alignment of the vtable entry in bits.  It should be defined only
+   when special alignment is necessary.
+
+   MiNT: The default value of 32 is too much and unsupported by a.out-mintprg.
+*/
+#define TARGET_VTABLE_ENTRY_ALIGN 16
+
+/* If we have a definition of INCOMING_RETURN_ADDR_RTX, assume that
+   the rest of the DWARF 2 frame unwind support is also provided.
+   
+   All configurations that don't use elf must be explicit about not using
+   dwarf unwind information.
+
+   MiNT: DWARF 2 frame unwind is not supported by a.out-mint.
+*/
+#undef DWARF2_UNWIND_INFO
+/* If configured with --disable-sjlj-exceptions, use DWARF2
+   else default to SJLJ.  */
+#if defined(USING_ELFOS_H) && defined (CONFIG_SJLJ_EXCEPTIONS) && !CONFIG_SJLJ_EXCEPTIONS
+/* The logic of this #if must be kept synchronised with the logic
+   for selecting the tmake_eh_file fragment in libgcc/config.host.  */
+#define DWARF2_UNWIND_INFO 1
+#else
+#define DWARF2_UNWIND_INFO 0
+#endif
+
+#if DWARF2_UNWIND_INFO
+/* the default of DW_EH_PE_absptr creates relocations at odd addresses, which we cannot handle */
+#undef ASM_PREFERRED_EH_DATA_FORMAT
+#define ASM_PREFERRED_EH_DATA_FORMAT(CODE, GLOBAL)			   \
+  (flag_pic								   \
+   && !((TARGET_ID_SHARED_LIBRARY || TARGET_SEP_DATA)			   \
+	&& ((GLOBAL) || (CODE)))					   \
+   ? ((GLOBAL) ? DW_EH_PE_indirect : 0) | DW_EH_PE_pcrel | DW_EH_PE_sdata4 \
+   : DW_EH_PE_aligned)
+
+/* Define how the m68k registers should be numbered for Dwarf output.
+   The numbering provided here should be compatible with the native
+   SVR4 debugger in the m68k/SVR4 reference port, where d0-d7
+   are 0-7, a0-a7 are 8-15, and fp0-fp7 are 16-23.  */
+
+#undef DBX_REGISTER_NUMBER
+#define DBX_REGISTER_NUMBER(REGNO) (REGNO)
+#endif
+
+/* config/m68k.md has an explicit reference to the program counter,
+   prefix this by the register prefix.  */
+
+#define ASM_RETURN_CASE_JUMP				\
+  do {							\
+    if (TARGET_COLDFIRE)				\
+      {							\
+	if (ADDRESS_REG_P (operands[0]))		\
+	  return "jmp %%pc@(2,%0:l)";			\
+	else if (TARGET_LONG_JUMP_TABLE_OFFSETS)	\
+	  return "jmp %%pc@(2,%0:l)";			\
+	else						\
+	  return "ext%.l %0\n\tjmp %%pc@(2,%0:l)";	\
+      }							\
+    else if (TARGET_LONG_JUMP_TABLE_OFFSETS)		\
+      return "jmp %%pc@(2,%0:l)";			\
+    else						\
+      return "jmp %%pc@(2,%0:w)";			\
+  } while (0)
+
+/* The ADDR_DIFF_VEC must exactly follow the previous instruction.  */
+
+#undef ADDR_VEC_ALIGN
+#define ADDR_VEC_ALIGN(ADDR_VEC) 0
+
+/* we must define this to prevent alignment of the table,
+   otherwise the relative offset from ASM_RETURN_CASE_JUMP might not match */
+#undef ASM_OUTPUT_BEFORE_CASE_LABEL
+#define ASM_OUTPUT_BEFORE_CASE_LABEL(FILE,PREFIX,NUM,TABLE)
+
+/* If defined, a C expression whose value is a string containing the
+   assembler operation to identify the following data as uninitialized global
+   data.  */
+
+#ifdef USING_ELFOS_H
+#define BSS_SECTION_ASM_OP "\t.section\t.bss"
+
+#define TARGET_HAVE_NAMED_SECTIONS true
+
+/* Currently, JUMP_TABLES_IN_TEXT_SECTION must be defined in order to
+   keep switch tables in the text section.  */
+
+#define JUMP_TABLES_IN_TEXT_SECTION 1
+
+#define EH_TABLES_CAN_BE_READ_ONLY 1
+
+/* avoid pulling in the tm_clone support which we don't need */
+#define USE_TM_CLONE_REGISTRY 0
+
+#undef INIT_SECTION_ASM_OP
+#undef FINI_SECTION_ASM_OP
+
+/* This is how to output an assembler line that says to advance the
+   location counter to a multiple of 2**LOG bytes.  */
+
+#undef ASM_OUTPUT_ALIGN
+#define ASM_OUTPUT_ALIGN(FILE,LOG)				\
+do {								\
+  if ((LOG) > 0)						\
+    fprintf ((FILE), "%s%u\n", ALIGN_ASM_OP, 1 << (LOG));	\
+} while (0)
+
+#undef  STARTFILE_SPEC
+#define STARTFILE_SPEC	"%{pg|p|profile:gcrt0.o%s;:crt0.o%s} crtbegin.o%s"
+ 
+#undef  ENDFILE_SPEC
+#define ENDFILE_SPEC "crtend.o%s"
+
+/* In order for bitfields to work on a 68000, or with -mnobitfield, we must
+   define either PCC_BITFIELD_TYPE_MATTERS or STRUCTURE_SIZE_BOUNDARY.
+   Defining STRUCTURE_SIZE_BOUNDARY results in structure packing problems,
+   so we define PCC_BITFIELD_TYPE_MATTERS.  */
+#define PCC_BITFIELD_TYPE_MATTERS 1
+
+#else
+/* We can only do STABS.  */
+#undef PREFERRED_DEBUGGING_TYPE
+#define PREFERRED_DEBUGGING_TYPE DBX_DEBUG
+
+#define BSS_SECTION_ASM_OP "\t.bss"
+
+#define TARGET_HAVE_NAMED_SECTIONS false
+
+#undef  STARTFILE_SPEC
+#define STARTFILE_SPEC	"%{pg|p|profile:gcrt0.o%s;:crt0.o%s}"
+ 
+#undef  ENDFILE_SPEC
+#define ENDFILE_SPEC ""
+
+/* Every structure or union's size must be a multiple of 2 bytes.  */
+#define STRUCTURE_SIZE_BOUNDARY 16
+
+#endif
+
+/* A C statement (sans semicolon) to output to the stdio stream
+   FILE the assembler definition of uninitialized global DECL named
+   NAME whose size is SIZE bytes and alignment is ALIGN bytes.
+   Try to use asm_output_aligned_bss to implement this macro.  */
+
+#define ASM_OUTPUT_ALIGNED_BSS(FILE, DECL, NAME, SIZE, ALIGN) \
+  asm_output_aligned_bss (FILE, DECL, NAME, SIZE, ALIGN)
+
+/* Disable -fpic and -fPIC since bsr.l _label@PLTPC
+   is unsupported by the assembler.  */
+
+#undef  SUBTARGET_OVERRIDE_OPTIONS
+#define SUBTARGET_OVERRIDE_OPTIONS					\
+do {									\
+  if (flag_pic && !TARGET_PCREL)					\
+      error ("%<-f%s%> is not supported on this target",			\
+	       (flag_pic > 1) ? "PIC" : "pic");				\
+} while (0)
+
+
+/* Workaround for GCC bug #35067 about multiple thunks.  */
+
+#undef MAKE_DECL_ONE_ONLY
+#define MAKE_DECL_ONE_ONLY(DECL) (DECL_WEAK (DECL) = 1)
+
+/* Avoid requiring -static with -fmudflap like in config/bfin/uclinux.h */
+#define MFWRAP_SPEC " %{fmudflap|fmudflapth: \
+ --wrap=malloc --wrap=free --wrap=calloc --wrap=realloc\
+ --wrap=mmap --wrap=munmap --wrap=alloca\
+ %{fmudflapth: --wrap=pthread_create\
+}} %{fmudflap|fmudflapth: --wrap=main}"
+
+/* Install the __sync libcalls.  */
+#undef TARGET_INIT_LIBFUNCS
+#define TARGET_INIT_LIBFUNCS  m68k_init_libfuncs
+
+#ifdef USING_ELFOS_H
+/*
+ * Definitions for crtstuff.c.
+ * Only for elf; others use libgcc2.c instead
+ */
+#define CTOR_LIST_BEGIN \
+STATIC func_ptr __CTOR_LIST__[1] \
+  __attribute__ ((__used__, section(".ctors"), aligned(__alignof__(func_ptr)))) \
+  = { (func_ptr) (-1) }; \
+  /* STATIC ELF_ALIAS(__CTOR_LIST__) */
+
+#define DTOR_LIST_BEGIN \
+STATIC func_ptr __DTOR_LIST__[1] \
+  __attribute__ ((__used__, section(".dtors"), aligned(__alignof__(func_ptr)))) \
+  = { (func_ptr) (-1) }; \
+  /* STATIC ELF_ALIAS(__DTOR_LIST__) */
+
+#define CTOR_LIST_END \
+STATIC func_ptr __CTOR_END__[1] \
+  __attribute__((__used__)) \
+  __attribute__((section(".ctors"), aligned(__alignof__(func_ptr)))) \
+  = { (func_ptr) 0 }; \
+  /* STATIC ELF_ALIAS(__CTOR_END__) */
+
+#define DTOR_LIST_END \
+STATIC func_ptr __DTOR_END__[1] \
+  __attribute__((__used__)) \
+  __attribute__((section(".dtors"), aligned(__alignof__(func_ptr)))) \
+  = { (func_ptr) 0 }; \
+  /* STATIC ELF_ALIAS(__DTOR_END__) */
+
+#endif
diff --git a/gcc/config/m68k/t-mint b/gcc/config/m68k/t-mint
new file mode 100644
index 00000000000..24f3278f508
--- /dev/null
+++ b/gcc/config/m68k/t-mint
@@ -0,0 +1,59 @@
+# 
+# Use multiple libraries
+# 
+
+M68K_AWK = $(strip $(shell $(AWK) 'BEGIN { FS="[ \t]*[,()][ \t]*"; ORS=" " }; \
+	/^M68K_DEVICE/ { CPU=$$3; FLAGS=$$8; \
+	CPU_NAME=substr($$2,2,length($$2)-2); \
+	MLIB=substr($$5,2,length($$5)-2); \
+	if ($1) print $2 }' $(srcdir)/config/m68k/m68k-devices.def))
+
+# Add a multilib for each distinct architecture.  M68K_MLIB_CPU, if defined,
+# adds additional restrictions.
+M68K_MLIB_CPUS := $(call M68K_AWK,\
+	(CPU_NAME == MLIB) $(M68K_MLIB_CPU), \
+	"m"MLIB)
+
+# Make the default cpu the default multilib.
+M68K_MLIB_DEFAULT := $(call M68K_AWK, CPU == "$(target_cpu_default)", MLIB)
+
+ifeq ($(filter m$(M68K_MLIB_DEFAULT),$(M68K_MLIB_CPUS)),)
+$(error Error default cpu '$(target_cpu_default)' is not in multilib set '$(M68K_MLIB_CPUS)')
+endif
+
+MULTILIB_OPTIONS = m68020-60/mcpu=5475 mshort
+
+MULTILIB_DIRNAMES = m68020-60 m5475 mshort
+
+MULTILIB_MATCHES = \
+	m68020-60=m68881 \
+	m68020-60=m68020 \
+	m68020-60=m68020-40 \
+	m68020-60=mc68020 \
+	m68020-60=m68030 \
+	m68020-60=m68040 \
+	m68020-60=m68060 \
+	m68020-60=mcpu?68020 \
+	m68020-60=mcpu?68030 \
+	m68020-60=mcpu?68040 \
+	m68020-60=mcpu?68060 \
+	m68020-60=march?68020 \
+	m68020-60=march?68030 \
+	m68020-60=march?68040 \
+	m68020-60=march?68060 \
+	mcpu?5475=mcfv4e \
+	mcpu?5475=mcpu?5470 \
+	mcpu?5475=mcpu?5471 \
+	mcpu?5475=mcpu?5472 \
+	mcpu?5475=mcpu?5473 \
+	mcpu?5475=mcpu?5474 \
+	mcpu?5475=mcpu?547x \
+	mcpu?5475=mcpu?5480 \
+	mcpu?5475=mcpu?5481 \
+	mcpu?5475=mcpu?5482 \
+	mcpu?5475=mcpu?5483 \
+	mcpu?5475=mcpu?5484 \
+	mcpu?5475=mcpu?5485 \
+	mcpu?5475=mcpu?548x
+
+MULTILIB_EXCEPTIONS :=
diff --git a/gcc/config/m68k/xm-mint.h b/gcc/config/m68k/xm-mint.h
new file mode 100644
index 00000000000..e876f251d06
--- /dev/null
+++ b/gcc/config/m68k/xm-mint.h
@@ -0,0 +1,4 @@
+/* This is the name of the null device on MiNT.  */
+#define HOST_BIT_BUCKET "/dev/null"
+#define HOST_BIT_BUCKET2 "nul:"
+
diff --git a/gcc/configure b/gcc/configure
index 86f44a35f42..390c4b50b5e 100755
--- a/gcc/configure
+++ b/gcc/configure
@@ -5322,7 +5322,7 @@ case "${target}" in
 	;;
     i[34567]86-*-cygwin* | x86_64-*-cygwin*)
 	;;
-    i[34567]86-*-mingw* | x86_64-*-mingw*)
+    i[34567]86-*-mingw* | x86_64-*-mingw* | *-*-msys*)
 	;;
     i[34567]86-*-interix[3-9]*)
 	# Interix 3.x gcc -fpic/-fPIC options generate broken code.
@@ -10564,7 +10564,7 @@ else
    # Systems known to be in this category are Windows (all variants),
    # VMS, and Darwin.
    case "$host_os" in
-     *vms* | cygwin* | pe | mingw* | darwin* | ultrix* | hpux10* | hpux11.00)
+     *vms* | cygwin* | pe | mingw* | msys* | darwin* | ultrix* | hpux10* | hpux11.00)
         gcc_cv_func_mmap_dev_zero=no ;;
      *)
         gcc_cv_func_mmap_dev_zero=yes;;
@@ -10621,7 +10621,7 @@ else
    # above for use of /dev/zero.
    # Systems known to be in this category are Windows, VMS, and SCO Unix.
    case "$host_os" in
-     *vms* | cygwin* | pe | mingw* | sco* | udk* )
+     *vms* | cygwin* | pe | mingw* | msys* | sco* | udk* )
         gcc_cv_func_mmap_anon=no ;;
      *)
         gcc_cv_func_mmap_anon=yes;;
@@ -10924,7 +10924,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by GCC" >&5
 $as_echo_n "checking for ld used by GCC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -13652,7 +13652,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -14010,6 +14010,10 @@ else
     lt_cv_sys_max_cmd_len=8192;
     ;;
 
+  mint*)
+    lt_cv_sys_max_cmd_len=8192;
+    ;;
+
   netbsd* | freebsd* | openbsd* | darwin* | dragonfly*)
     # This has been around since 386BSD, at least.  Likely further.
     if test -x /sbin/sysctl; then
@@ -17185,7 +17189,7 @@ _LT_EOF
       fi
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # _LT_TAGVAR(hardcode_libdir_flag_spec, ) is actually meaningless,
       # as there is no search path for DLLs.
       hardcode_libdir_flag_spec='-L$libdir'
@@ -17616,7 +17620,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
       export_dynamic_flag_spec=-rdynamic
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # When not using gcc, we currently assume that we are using
       # Microsoft Visual C++.
       # hardcode_libdir_flag_spec is actually meaningless, as there is
@@ -18517,14 +18521,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -18548,7 +18552,7 @@ cygwin* | mingw* | pw32* | cegcc*)
 
       sys_lib_search_path_spec="$sys_lib_search_path_spec /usr/lib/w32api"
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -19174,7 +19178,7 @@ else
     lt_cv_dlopen_self=yes
     ;;
 
-  mingw* | pw32* | cegcc*)
+  mingw* | msys* | pw32* | cegcc*)
     lt_cv_dlopen="LoadLibrary"
     lt_cv_dlopen_libs=
     ;;
@@ -20048,7 +20052,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -20401,7 +20405,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
         esac
         ;;
 
-      cygwin* | mingw* | pw32* | cegcc*)
+      cygwin* | mingw* | msys* | pw32* | cegcc*)
         # _LT_TAGVAR(hardcode_libdir_flag_spec, CXX) is actually meaningless,
         # as there is no search path for DLLs.
         hardcode_libdir_flag_spec_CXX='-L$libdir'
@@ -22174,14 +22178,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -22204,7 +22208,7 @@ cygwin* | mingw* | pw32* | cegcc*)
       soname_spec='`echo ${libname} | sed -e 's/^lib/cyg/'``echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
 
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -25489,6 +25493,9 @@ x:
 	tls_first_minor=16
 	tls_as_opt='-32 --fatal-warnings'
 	;;
+  m68k-*-mintelf*)
+	# the assembler will support that, but we want to use emutls at runtime
+	;;
   m68k-*-*)
     conftest_s='
 	.section .tdata,"awT",@progbits
@@ -27836,6 +27843,41 @@ _ACEOF
 
     ;;
 
+  m68k-*-*)
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking assembler for .gnu_attribute support" >&5
+$as_echo_n "checking assembler for .gnu_attribute support... " >&6; }
+if ${gcc_cv_as_m68k_gnu_attribute+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+  gcc_cv_as_m68k_gnu_attribute=no
+  if test x$gcc_cv_as != x; then
+    $as_echo '.gnu_attribute 4,1' > conftest.s
+    if { ac_try='$gcc_cv_as $gcc_cv_as_flags  -o conftest.o conftest.s >&5'
+  { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_try\""; } >&5
+  (eval $ac_try) 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }; }
+    then
+	gcc_cv_as_m68k_gnu_attribute=yes
+    else
+      echo "configure: failed program was" >&5
+      cat conftest.s >&5
+    fi
+    rm -f conftest.o conftest.s
+  fi
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $gcc_cv_as_m68k_gnu_attribute" >&5
+$as_echo "$gcc_cv_as_m68k_gnu_attribute" >&6; }
+if test $gcc_cv_as_m68k_gnu_attribute = yes; then
+
+$as_echo "#define HAVE_AS_GNU_ATTRIBUTE 1" >>confdefs.h
+
+fi
+
+
+    ;;
+
   ia64*-*-*)
     { $as_echo "$as_me:${as_lineno-$LINENO}: checking assembler for ltoffx and ldxmov relocs" >&5
 $as_echo_n "checking assembler for ltoffx and ldxmov relocs... " >&6; }
@@ -30361,7 +30403,7 @@ if ($AR --version | sed 1q | grep "GNU ar" \
     && $CC $CFLAGS -c conftest.c \
     && $AR rcT conftest.a conftest.o \
     && $CC $CFLAGS $LDFLAGS -o conftest conftest.a) >/dev/null 2>&1; then
-  thin_archive_support=yes
+  thin_archive_support=no
 fi
 rm -f conftest.c conftest.o conftest.a conftest
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $thin_archive_support" >&5
diff --git a/gcc/configure.ac b/gcc/configure.ac
index a4d5bdb1b8d..5c53cb874dd 100644
--- a/gcc/configure.ac
+++ b/gcc/configure.ac
@@ -3894,6 +3894,9 @@ x:
 	tls_first_minor=16
 	tls_as_opt='-32 --fatal-warnings'
 	;;
+  m68k-*-mintelf*)
+	# the assembler will support that, but we want to use emutls at runtime
+	;;
   m68k-*-*)
     conftest_s='
 	.section .tdata,"awT",@progbits
@@ -5048,6 +5051,14 @@ gd:
       [Define 0/1 if your assembler and linker support calling ___tls_get_addr via GOT.])
     ;;
 
+   m68k-*-*)
+     gcc_GAS_CHECK_FEATURE([.gnu_attribute support],
+      gcc_cv_as_m68k_gnu_attribute,,
+      [.gnu_attribute 4,1],,
+      [AC_DEFINE(HAVE_AS_GNU_ATTRIBUTE, 1,
+	  [Define if your assembler supports .gnu_attribute.])])
+    ;;
+
   ia64*-*-*)
     gcc_GAS_CHECK_FEATURE([ltoffx and ldxmov relocs],
 	gcc_cv_as_ia64_ltoffx_ldxmov_relocs, [2,14,0],,
@@ -6010,7 +6021,7 @@ if ($AR --version | sed 1q | grep "GNU ar" \
     && $CC $CFLAGS -c conftest.c \
     && $AR rcT conftest.a conftest.o \
     && $CC $CFLAGS $LDFLAGS -o conftest conftest.a) >/dev/null 2>&1; then
-  thin_archive_support=yes
+  thin_archive_support=no
 fi
 rm -f conftest.c conftest.o conftest.a conftest
 AC_MSG_RESULT($thin_archive_support)
diff --git a/gcc/cp/Make-lang.in b/gcc/cp/Make-lang.in
index 4be5cc6a942..199af248602 100644
--- a/gcc/cp/Make-lang.in
+++ b/gcc/cp/Make-lang.in
@@ -81,7 +81,7 @@ GXX_OBJS = $(GCC_OBJS) cp/g++spec.o
 xg++$(exeext): $(GXX_OBJS) $(EXTRA_GCC_OBJS) libcommon-target.a $(LIBDEPS)
 	+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \
 	  $(GXX_OBJS) $(EXTRA_GCC_OBJS) libcommon-target.a \
-	  $(EXTRA_GCC_LIBS) $(LIBS)
+	  $(EXTRA_GCC_LIBS) $(LIBS) $(GLIBC_SO)
 
 # Create a version of the g++ driver which calls the cross-compiler.
 g++-cross$(exeext): xg++$(exeext)
@@ -144,7 +144,7 @@ cc1plus$(exeext): $(CXX_OBJS) cc1plus-checksum.o $(BACKEND) $(CODYLIB) $(LIBDEPS
 	@$(call LINK_PROGRESS,$(INDEX.c++),start)
 	+$(LLINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \
 	      $(CXX_OBJS) cc1plus-checksum.o $(BACKEND) $(CODYLIB) $(NETLIBS) \
-		$(LIBS) $(BACKENDLIBS)
+		$(LIBS) $(BACKENDLIBS) $(GLIBC_SO)
 	@$(call LINK_PROGRESS,$(INDEX.c++),end)
 
 ifeq ($(ENABLE_MAINTAINER_RULES), true)
diff --git a/gcc/d/Make-lang.in b/gcc/d/Make-lang.in
index b3c77a08f46..f40b6aff83d 100644
--- a/gcc/d/Make-lang.in
+++ b/gcc/d/Make-lang.in
@@ -39,7 +39,7 @@ GDC_OBJS = $(GCC_OBJS) d/d-spec.o
 gdc$(exeext): $(GDC_OBJS) $(EXTRA_GCC_OBJS) libcommon-target.a $(LIBDEPS)
 	+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \
 	  $(GDC_OBJS) $(EXTRA_GCC_OBJS) libcommon-target.a \
-	  $(EXTRA_GCC_LIBS) $(LIBS)
+	  $(EXTRA_GCC_LIBS) $(LIBS) $(GLIBC_SO)
 
 # Create a version of the gdc driver which calls the cross-compiler.
 gdc-cross$(exeext): gdc$(exeext)
@@ -170,7 +170,7 @@ d_OBJS = $(D_ALL_OBJS) d/d-spec.o
 d21$(exeext): $(D_ALL_OBJS) attribs.o $(BACKEND) $(LIBDEPS) $(d.prev)
 	@$(call LINK_PROGRESS,$(INDEX.d),start)
 	+$(LLINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \
-		$(D_ALL_OBJS) attribs.o $(BACKEND) $(LIBS) $(BACKENDLIBS)
+		$(D_ALL_OBJS) attribs.o $(BACKEND) $(LIBS) $(BACKENDLIBS) $(GLIBC_SO)
 	@$(call LINK_PROGRESS,$(INDEX.d),end)
 
 # Documentation.
diff --git a/gcc/d/d-compiler.cc b/gcc/d/d-compiler.cc
index 512ef4bab3e..dd61b507329 100644
--- a/gcc/d/d-compiler.cc
+++ b/gcc/d/d-compiler.cc
@@ -19,7 +19,7 @@ along with GCC; see the file COPYING3.  If not see
 #include "system.h"
 #include "coretypes.h"
 
-#include "dmd/compiler.h"
+#include "dmd/dcompiler.h"
 #include "dmd/scope.h"
 #include "dmd/expression.h"
 #include "dmd/identifier.h"
diff --git a/gcc/d/dmd/compiler.h b/gcc/d/dmd/dcompiler.h
similarity index 100%
rename from gcc/d/dmd/compiler.h
rename to gcc/d/dmd/dcompiler.h
diff --git a/gcc/d/dmd/globals.h b/gcc/d/dmd/globals.h
index d9d59d685ca..222259bf6a0 100644
--- a/gcc/d/dmd/globals.h
+++ b/gcc/d/dmd/globals.h
@@ -14,7 +14,7 @@
 #include "root/ctfloat.h"
 #include "root/outbuffer.h"
 #include "root/filename.h"
-#include "compiler.h"
+#include "dcompiler.h"
 
 // Can't include arraytypes.h here, need to declare these directly.
 template <typename TYPE> struct Array;
diff --git a/gcc/diagnostic-color.c b/gcc/diagnostic-color.c
index 1fc5a9079c7..64f9601fba1 100644
--- a/gcc/diagnostic-color.c
+++ b/gcc/diagnostic-color.c
@@ -25,6 +25,90 @@
 #  include <windows.h>
 #endif
 
+/* Select Graphic Rendition (SGR, "\33[...m") strings.  */
+/* Also Erase in Line (EL) to Right ("\33[K") by default.  */
+/*    Why have EL to Right after SGR?
+	 -- The behavior of line-wrapping when at the bottom of the
+	    terminal screen and at the end of the current line is often
+	    such that a new line is introduced, entirely cleared with
+	    the current background color which may be different from the
+	    default one (see the boolean back_color_erase terminfo(5)
+	    capability), thus scrolling the display by one line.
+	    The end of this new line will stay in this background color
+	    even after reverting to the default background color with
+	    "\33[m', unless it is explicitly cleared again with "\33[K"
+	    (which is the behavior the user would instinctively expect
+	    from the whole thing).  There may be some unavoidable
+	    background-color flicker at the end of this new line because
+	    of this (when timing with the monitor's redraw is just right).
+	 -- The behavior of HT (tab, "\t") is usually the same as that of
+	    Cursor Forward Tabulation (CHT) with a default parameter
+	    of 1 ("\33[I"), i.e., it performs pure movement to the next
+	    tab stop, without any clearing of either content or screen
+	    attributes (including background color); try
+	       printf 'asdfqwerzxcv\rASDF\tZXCV\n'
+	    in a bash(1) shell to demonstrate this.  This is not what the
+	    user would instinctively expect of HT (but is ok for CHT).
+	    The instinctive behavior would include clearing the terminal
+	    cells that are skipped over by HT with blank cells in the
+	    current screen attributes, including background color;
+	    the boolean dest_tabs_magic_smso terminfo(5) capability
+	    indicates this saner behavior for HT, but only some rare
+	    terminals have it (although it also indicates a special
+	    glitch with standout mode in the Teleray terminal for which
+	    it was initially introduced).  The remedy is to add "\33K"
+	    after each SGR sequence, be it START (to fix the behavior
+	    of any HT after that before another SGR) or END (to fix the
+	    behavior of an HT in default background color that would
+	    follow a line-wrapping at the bottom of the screen in another
+	    background color, and to complement doing it after START).
+	    Piping GCC's output through a pager such as less(1) avoids
+	    any HT problems since the pager performs tab expansion.
+
+      Generic disadvantages of this remedy are:
+	 -- Some very rare terminals might support SGR but not EL (nobody
+	    will use "gcc -fdiagnostics-color" on a terminal that does not
+	    support SGR in the first place).
+	 -- Having these extra control sequences might somewhat complicate
+	    the task of any program trying to parse "gcc -fdiagnostics-color"
+	    output in order to extract structuring information from it.
+      A specific disadvantage to doing it after SGR START is:
+	 -- Even more possible background color flicker (when timing
+	    with the monitor's redraw is just right), even when not at the
+	    bottom of the screen.
+      There are no additional disadvantages specific to doing it after
+      SGR END.
+
+      It would be impractical for GCC to become a full-fledged
+      terminal program linked against ncurses or the like, so it will
+      not detect terminfo(5) capabilities.  */
+#define COLOR_SEPARATOR		";"
+#define COLOR_NONE		"00"
+#define COLOR_BOLD		"01"
+#define COLOR_UNDERSCORE	"04"
+#define COLOR_BLINK		"05"
+#define COLOR_REVERSE		"07"
+#define COLOR_FG_BLACK		"30"
+#define COLOR_FG_RED		"31"
+#define COLOR_FG_GREEN		"32"
+#define COLOR_FG_YELLOW		"33"
+#define COLOR_FG_BLUE		"34"
+#define COLOR_FG_MAGENTA	"35"
+#define COLOR_FG_CYAN		"36"
+#define COLOR_FG_WHITE		"37"
+#define COLOR_BG_BLACK		"40"
+#define COLOR_BG_RED		"41"
+#define COLOR_BG_GREEN		"42"
+#define COLOR_BG_YELLOW		"43"
+#define COLOR_BG_BLUE		"44"
+#define COLOR_BG_MAGENTA	"45"
+#define COLOR_BG_CYAN		"46"
+#define COLOR_BG_WHITE		"47"
+#define SGR_START		"\33["
+#define SGR_END			"m\33[K"
+#define SGR_SEQ(str)		SGR_START str SGR_END
+#define SGR_RESET		SGR_SEQ("")
+
 #include "color-macros.h"
 
 /* The context and logic for choosing default --color screen attributes
diff --git a/gcc/expr.c b/gcc/expr.c
index eae9c023cb7..d075d99c15d 100644
--- a/gcc/expr.c
+++ b/gcc/expr.c
@@ -4519,7 +4519,11 @@ emit_push_insn (rtx x, machine_mode mode, tree type, rtx size,
 	  size = gen_int_mode (GET_MODE_SIZE (mode), Pmode);
 	  if (!MEM_P (xinner))
 	    {
-	      temp = assign_temp (type, 1, 1);
+	      tree atype = type;
+
+	      if (atype == NULL)
+		atype = lang_hooks.types.type_for_mode (mode, 0);
+	      temp = assign_temp (atype, 1, 1);
 	      emit_move_insn (temp, xinner);
 	      xinner = temp;
 	    }
diff --git a/gcc/file-find.c b/gcc/file-find.c
index d82a4a187da..6f1d94513c1 100644
--- a/gcc/file-find.c
+++ b/gcc/file-find.c
@@ -22,6 +22,20 @@ along with GCC; see the file COPYING3.  If not see
 #include "filenames.h"
 #include "file-find.h"
 
+/*
+ * these are from xm-mingw32.h, but this is only included
+ * for the target; we need those definitions here also
+ * when using MinGW as host for a cross-compiler
+ */
+#if defined(__MSDOS__) || defined(_WIN32) || defined(__OS2__) || defined (__CYGWIN__)
+#undef HOST_EXECUTABLE_SUFFIX
+#define HOST_EXECUTABLE_SUFFIX ".exe"
+#endif
+#if defined(__MSDOS__) || defined(_WIN32) || defined(__OS2__)
+#undef PATH_SEPARATOR
+#define PATH_SEPARATOR ';'
+#endif
+
 static bool debug = false;
 
 void
diff --git a/gcc/fortran/Make-lang.in b/gcc/fortran/Make-lang.in
index 63195a9c7ed..7499edd48c3 100644
--- a/gcc/fortran/Make-lang.in
+++ b/gcc/fortran/Make-lang.in
@@ -85,7 +85,7 @@ gfortran$(exeext): $(GFORTRAN_D_OBJS) $(EXTRA_GCC_OBJS) libcommon-target.a \
 	$(LIBDEPS)
 	+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \
 	  $(GFORTRAN_D_OBJS) $(EXTRA_GCC_OBJS) libcommon-target.a \
-	  $(EXTRA_GCC_LIBS) $(LIBS)
+	  $(EXTRA_GCC_LIBS) $(LIBS) $(GLIBC_SO)
 
 # Create a version of the gfortran driver which calls the cross-compiler.
 gfortran-cross$(exeext): gfortran$(exeext)
@@ -97,7 +97,7 @@ f951$(exeext): $(F95_OBJS) $(BACKEND) $(LIBDEPS) attribs.o $(fortran.prev)
 	@$(call LINK_PROGRESS,$(INDEX.fortran),start)
 	+$(LLINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \
 		$(F95_OBJS) $(BACKEND) $(ZLIB) $(LIBS) attribs.o \
-		$(BACKENDLIBS)
+		$(BACKENDLIBS) $(GLIBC_SO)
 	@$(call LINK_PROGRESS,$(INDEX.fortran),end)
 
 gt-fortran-trans.h    : s-gtype; @true
diff --git a/gcc/gcc-ar.c b/gcc/gcc-ar.c
index e76d4525e0c..6671e2295ba 100644
--- a/gcc/gcc-ar.c
+++ b/gcc/gcc-ar.c
@@ -122,6 +122,8 @@ setup_prefixes (const char *exec_path)
   prefix_from_env ("PATH", &path);
 }
 
+#include "libcmain.h"
+
 int 
 main (int ac, char **av)
 {
diff --git a/gcc/gcc-main.c b/gcc/gcc-main.c
index b12a6660401..4dceab3e238 100644
--- a/gcc/gcc-main.c
+++ b/gcc/gcc-main.c
@@ -38,6 +38,8 @@ along with GCC; see the file COPYING3.  If not see
 
 extern int main (int, char **);
 
+#include "libcmain.h"
+
 int
 main (int argc, char **argv)
 {
diff --git a/gcc/gcc.c b/gcc/gcc.c
index 20a649ea08e..aea6b9c2051 100644
--- a/gcc/gcc.c
+++ b/gcc/gcc.c
@@ -43,9 +43,31 @@ compilation is specified by a string called a "spec".  */
 #include "flags.h"
 #include "opts.h"
 #include "filenames.h"
+#include "common/common-target.h"
 #include "spellcheck.h"
 #include "opts-jobserver.h"
 
+/*
+ * these are from xm-mingw32.h, but this is only included
+ * for the target; we need those definitions here also
+ * when using MinGW as host for a cross-compiler
+ */
+#ifdef __MINGW32__
+#undef HOST_BIT_BUCKET
+#undef HOST_BIT_BUCKET2
+#undef HOST_EXECUTABLE_SUFFIX
+/* This is the name of the null device on windows.  */
+#define HOST_BIT_BUCKET "nul"
+#define HOST_BIT_BUCKET2 "/dev/null"
+#define HOST_EXECUTABLE_SUFFIX ".exe"
+#endif
+
+#if defined(__MSDOS__) || defined(_WIN32) || defined(__OS2__)
+#  define HOST_LACKS_INODE_NUMBERS 1
+#  undef PATH_SEPARATOR
+#  define PATH_SEPARATOR ';'
+#endif
+
 
 
 /* Manage the manipulation of env vars.
@@ -4851,7 +4873,8 @@ process_command (unsigned int decoded_options_count,
 
   if (output_file
       && strcmp (output_file, "-") != 0
-      && strcmp (output_file, HOST_BIT_BUCKET) != 0)
+      && strcmp (output_file, HOST_BIT_BUCKET) != 0
+      && strcmp (output_file, HOST_BIT_BUCKET2) != 0)
     {
       int i;
       for (i = 0; i < n_infiles; i++)
@@ -7462,6 +7485,13 @@ print_configuration (FILE *file)
 #endif
 
   fnotice (file, "Thread model: %s\n", thrmod);
+  enum unwind_info_type unwind_info = targetm_common.except_unwind_info (&global_options);
+  fnotice (file, "Exceptions: %s\n",
+    unwind_info == UI_NONE ? "none" :
+    unwind_info == UI_SJLJ ? "SJLJ" :
+    unwind_info == UI_DWARF2 ? "Dwarf2" :
+    unwind_info == UI_SEH ? "SEH" :
+    "target");
   fnotice (file, "Supported LTO compression algorithms: zlib");
 #ifdef HAVE_ZSTD_H
   fnotice (file, " zstd");
diff --git a/gcc/gcov-dump.c b/gcc/gcov-dump.c
index f1489fe0214..c9a814be634 100644
--- a/gcc/gcov-dump.c
+++ b/gcc/gcov-dump.c
@@ -76,6 +76,8 @@ static const tag_format_t tag_table[] =
   {0, NULL, NULL}
 };
 
+#include "libcmain.h"
+
 int
 main (int argc ATTRIBUTE_UNUSED, char **argv)
 {
diff --git a/gcc/gcov-tool.c b/gcc/gcov-tool.c
index 71bdfdaa1f0..17089c94f98 100644
--- a/gcc/gcov-tool.c
+++ b/gcc/gcov-tool.c
@@ -52,7 +52,7 @@ extern void gcov_set_verbose (void);
 /* Set to verbose output mode.  */
 static bool verbose;
 
-#if HAVE_FTW_H
+#if defined(HAVE_FTW_H) && defined(FTW_DEPTH)
 
 /* Remove file NAME if it has a gcda suffix. */
 
@@ -81,7 +81,7 @@ unlink_gcda_file (const char *name,
 static int
 unlink_profile_dir (const char *path ATTRIBUTE_UNUSED)
 {
-#if HAVE_FTW_H
+#if defined(HAVE_FTW_H) && defined(FTW_DEPTH)
     return nftw(path, unlink_gcda_file, 64, FTW_DEPTH | FTW_PHYS);
 #else
     return -1;
@@ -568,6 +568,8 @@ process_args (int argc, char **argv)
   return optind;
 }
 
+#include "libcmain.h"
+
 /* Main function for gcov-tool.  */
 
 int
diff --git a/gcc/gcov.c b/gcc/gcov.c
index cf0a49d8c30..76234d69390 100644
--- a/gcc/gcov.c
+++ b/gcc/gcov.c
@@ -858,6 +858,8 @@ get_cycles_count (line_info &linfo)
   return count;
 }
 
+#include "libcmain.h"
+
 int
 main (int argc, char **argv)
 {
diff --git a/gcc/ggc-common.c b/gcc/ggc-common.c
index 357bda13f97..cd4d9cde3ce 100644
--- a/gcc/ggc-common.c
+++ b/gcc/ggc-common.c
@@ -591,7 +591,9 @@ gt_pch_restore (FILE *f)
   size_t i;
   struct mmap_info mmi;
   int result;
-
+  long pch_tabs_off;
+  long pch_data_off;
+  
   /* Delete any deletable objects.  This makes ggc_pch_read much
      faster, as it can be sure that no GCable objects remain other
      than the ones just read in.  */
@@ -599,20 +601,24 @@ gt_pch_restore (FILE *f)
     for (rti = *rt; rti->base != NULL; rti++)
       memset (rti->base, 0, rti->stride);
 
-  /* Read in all the scalar variables.  */
+  /* We need to read tables after mapping, or fatal_error will
+     segfault when gt_pch_use_address returns -1. Skip them for now. */
+  pch_tabs_off = ftell(f);
+     
+  /* Skip all the scalar variables. */
   for (rt = gt_pch_scalar_rtab; *rt; rt++)
     for (rti = *rt; rti->base != NULL; rti++)
-      if (fread (rti->base, rti->stride, 1, f) != 1)
-	fatal_error (input_location, "cannot read PCH file: %m");
+      if (fseek (f, rti->stride, SEEK_CUR) != 0)
+        fatal_error (input_location, "cannot read PCH file: %m");
 
-  /* Read in all the global pointers, in 6 easy loops.  */
+  /* Skip all the global pointers. */
   for (rt = gt_ggc_rtab; *rt; rt++)
     for (rti = *rt; rti->base != NULL; rti++)
       for (i = 0; i < rti->nelt; i++)
-	if (fread ((char *)rti->base + rti->stride * i,
-		   sizeof (void *), 1, f) != 1)
-	  fatal_error (input_location, "cannot read PCH file: %m");
-
+        if (fseek (f, sizeof (void *), SEEK_CUR) != 0)
+          fatal_error (input_location, "cannot read PCH file: %m");
+          
+  /* mmi still has to be read now. */          
   if (fread (&mmi, sizeof (mmi), 1, f) != 1)
     fatal_error (input_location, "cannot read PCH file: %m");
 
@@ -623,12 +629,36 @@ gt_pch_restore (FILE *f)
   if (result == 0)
     {
       if (fseek (f, mmi.offset, SEEK_SET) != 0
-	  || fread (mmi.preferred_base, mmi.size, 1, f) != 1)
-	fatal_error (input_location, "cannot read PCH file: %m");
+          || fread (mmi.preferred_base, mmi.size, 1, f) != 1)
+        fatal_error (input_location, "cannot read PCH file: %m");
     }
   else if (fseek (f, mmi.offset + mmi.size, SEEK_SET) != 0)
     fatal_error (input_location, "cannot read PCH file: %m");
 
+    
+  /* File mapping done, read tables now. */
+  pch_data_off = ftell(f);
+  
+  if (fseek (f, pch_tabs_off, SEEK_SET) != 0)
+    fatal_error (input_location, "cannot read PCH file: %m");
+
+  /* Read in all the scalar variables.  */
+  for (rt = gt_pch_scalar_rtab; *rt; rt++)
+    for (rti = *rt; rti->base != NULL; rti++)
+      if (fread (rti->base, rti->stride, 1, f) != 1)
+        fatal_error (input_location, "cannot read PCH file: %m");
+
+  /* Read in all the global pointers, in 6 easy loops.  */
+  for (rt = gt_ggc_rtab; *rt; rt++)
+    for (rti = *rt; rti->base != NULL; rti++)
+      for (i = 0; i < rti->nelt; i++)
+        if (fread ((char *)rti->base + rti->stride * i,
+            sizeof (void *), 1, f) != 1)
+          fatal_error (input_location, "cannot read PCH file: %m");
+
+  if (fseek (f, pch_data_off, SEEK_SET) != 0)
+    fatal_error (input_location, "cannot read PCH file: %m");
+            
   ggc_pch_read (f, mmi.preferred_base);
 
   gt_pch_restore_stringpool ();
diff --git a/gcc/glibc.so b/gcc/glibc.so
new file mode 100644
index 00000000000..408ef8ba856
--- /dev/null
+++ b/gcc/glibc.so
@@ -0,0 +1,3 @@
+/* GNU ld script  */
+OUTPUT_FORMAT(elf64-x86-64)
+GROUP ( /lib64/libdl.so.2 /lib64/libc.so.6 /usr/lib64/libc_nonshared.a AS_NEEDED ( /lib64/ld-linux-x86-64.so.2 ) )
diff --git a/gcc/incpath.c b/gcc/incpath.c
index 446d280321d..17bd57d1b66 100644
--- a/gcc/incpath.c
+++ b/gcc/incpath.c
@@ -27,6 +27,12 @@
 #include "incpath.h"
 #include "cppdefault.h"
 
+#if defined(__MSDOS__) || defined(_WIN32) || defined(__OS2__)
+#  define HOST_LACKS_INODE_NUMBERS 1
+#  undef PATH_SEPARATOR
+#  define PATH_SEPARATOR ';'
+#endif
+
 /* Microsoft Windows does not natively support inodes.
    VMS has non-numeric inodes.  */
 #ifdef VMS
@@ -179,10 +185,17 @@ add_standard_paths (const char *sysroot, const char *iprefix,
 	    {
 	      char *sysroot_no_trailing_dir_separator = xstrdup (sysroot);
 	      size_t sysroot_len = strlen (sysroot);
+	      const char *fname;
 
 	      if (sysroot_len > 0 && sysroot[sysroot_len - 1] == DIR_SEPARATOR)
 		sysroot_no_trailing_dir_separator[sysroot_len - 1] = '\0';
-	      str = concat (sysroot_no_trailing_dir_separator, p->fname, NULL);
+	      fname = p->fname;
+#if defined(__MSDOS__) || defined(_WIN32) || defined(__OS2__)
+	      /* skip the C:/msys64/ part of p->fname */
+	      if (HAS_DRIVE_SPEC(fname))
+		fname = strchr(fname + 3, DIR_SEPARATOR);
+#endif
+	      str = concat (sysroot_no_trailing_dir_separator, fname, NULL);
 	      free (sysroot_no_trailing_dir_separator);
 	    }
 	  else if (!p->add_sysroot && relocated
diff --git a/gcc/libcmain.h b/gcc/libcmain.h
new file mode 100644
index 00000000000..0e3157bfb58
--- /dev/null
+++ b/gcc/libcmain.h
@@ -0,0 +1,39 @@
+#if defined(__LINUX_GLIBC_WRAP_H)
+
+/* ugly hack to get __libc_start_main versioned */
+
+#if __GLIBC_PREREQ(2, 34)
+
+#define STR_(s) #s
+#define STR(s)  STR_(s)
+#include <dlfcn.h>
+
+#ifdef __UCLIBC__
+#define __libc_start_main       __uClibc_main
+#endif
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+int __libc_start_main(
+        int (*main)(int,char**,char**), int ac, char **av,
+        int (*init)(void), void (*fini)(void),
+        void (*rtld_fini)(void), void *stack_end);
+int __libc_start_main(
+        int (*main)(int,char**,char**), int ac, char **av,
+        int (*init)(void), void (*fini)(void),
+        void (*rtld_fini)(void), void *stack_end)
+{
+	typeof(__libc_start_main) *real_lsm;
+	if ((*(void**)&real_lsm = dlsym(RTLD_NEXT, STR(__libc_start_main))) != 0)
+		return real_lsm(main, ac, av, init, fini, rtld_fini, stack_end);
+	fputs("BUG: dlsym error\n", stderr);
+	return 1;
+}
+#ifdef __cplusplus
+}
+#endif
+#undef STR
+#undef STR_
+#endif
+#endif
diff --git a/gcc/libcwrap.h b/gcc/libcwrap.h
new file mode 100644
index 00000000000..990c44c0d7d
--- /dev/null
+++ b/gcc/libcwrap.h
@@ -0,0 +1,1548 @@
+/* glibc bindings for target ABI version glibc 2.14 */
+#if defined(__linux__) && !defined (__LIBC_CUSTOM_BINDINGS_H__) && !defined(__ANDROID__)
+
+#if defined(__x86_64__)
+
+#define __LINUX_GLIBC_WRAP_H
+
+#if defined (__cplusplus)
+extern "C" {
+#endif
+
+#undef SYMVER
+#undef SYMVER1
+#ifdef __ASSEMBLER__
+#define SYMVER1(name, ver) .symver name, name##@##ver
+#else
+#define SYMVER1(name, ver) __asm__(".symver " #name ", " #name "@" #ver );
+#endif
+#define SYMVER(name, ver) SYMVER1(name, ver)
+
+
+/* Symbols redirected to earlier glibc versions */
+SYMVER(__libc_start_main, GLIBC_2.2.5)
+SYMVER(__libpthread_version_placeholder, GLIBC_2.12)
+SYMVER(__mq_open_2, GLIBC_2.7)
+SYMVER(__pthread_cleanup_routine, GLIBC_2.3.3)
+SYMVER(__pthread_key_create, GLIBC_2.2.5)
+SYMVER(__pthread_register_cancel, GLIBC_2.3.3)
+SYMVER(__pthread_register_cancel_defer, GLIBC_2.3.3)
+SYMVER(__pthread_unregister_cancel, GLIBC_2.3.3)
+SYMVER(__pthread_unregister_cancel_restore, GLIBC_2.3.3)
+SYMVER(__pthread_unwind_next, GLIBC_2.3.3)
+SYMVER(_pthread_cleanup_pop, GLIBC_2.2.5)
+SYMVER(_pthread_cleanup_push, GLIBC_2.2.5)
+SYMVER(aio_cancel, GLIBC_2.2.5)
+SYMVER(aio_cancel64, GLIBC_2.2.5)
+SYMVER(aio_error, GLIBC_2.2.5)
+SYMVER(aio_error64, GLIBC_2.2.5)
+SYMVER(aio_fsync, GLIBC_2.2.5)
+SYMVER(aio_fsync64, GLIBC_2.2.5)
+SYMVER(aio_init, GLIBC_2.2.5)
+SYMVER(aio_read, GLIBC_2.2.5)
+SYMVER(aio_read64, GLIBC_2.2.5)
+SYMVER(aio_return, GLIBC_2.2.5)
+SYMVER(aio_return64, GLIBC_2.2.5)
+SYMVER(aio_suspend, GLIBC_2.2.5)
+SYMVER(aio_suspend64, GLIBC_2.2.5)
+SYMVER(aio_write, GLIBC_2.2.5)
+SYMVER(aio_write64, GLIBC_2.2.5)
+SYMVER(clock_adjtime, GLIBC_2.14)
+SYMVER(clock_getcpuclockid, GLIBC_2.2.5)
+SYMVER(clock_getres, GLIBC_2.2.5)
+SYMVER(clock_gettime, GLIBC_2.2.5)
+SYMVER(clock_nanosleep, GLIBC_2.2.5)
+SYMVER(clock_settime, GLIBC_2.2.5)
+SYMVER(dladdr, GLIBC_2.2.5)
+SYMVER(dladdr1, GLIBC_2.3.3)
+SYMVER(dlclose, GLIBC_2.2.5)
+SYMVER(dlerror, GLIBC_2.2.5)
+SYMVER(dlinfo, GLIBC_2.3.3)
+SYMVER(dlmopen, GLIBC_2.3.4)
+SYMVER(dlopen, GLIBC_2.2.5)
+SYMVER(dlsym, GLIBC_2.2.5)
+SYMVER(dlvsym, GLIBC_2.2.5)
+SYMVER(exp, GLIBC_2.2.5)
+SYMVER(exp10f, GLIBC_2.2.5)
+SYMVER(exp2, GLIBC_2.2.5)
+SYMVER(exp2f, GLIBC_2.2.5)
+SYMVER(expf, GLIBC_2.2.5)
+SYMVER(fmemopen, GLIBC_2.2.5)
+SYMVER(forkpty, GLIBC_2.2.5)
+SYMVER(gai_cancel, GLIBC_2.2.5)
+SYMVER(gai_error, GLIBC_2.2.5)
+SYMVER(gai_suspend, GLIBC_2.2.5)
+SYMVER(getaddrinfo_a, GLIBC_2.2.5)
+SYMVER(glob, GLIBC_2.2.5)
+SYMVER(glob64, GLIBC_2.2.5)
+SYMVER(hypot, GLIBC_2.2.5)
+SYMVER(hypotf, GLIBC_2.2.5)
+SYMVER(lgamma, GLIBC_2.2.5)
+SYMVER(lgammaf, GLIBC_2.2.5)
+SYMVER(lgammal, GLIBC_2.2.5)
+SYMVER(lio_listio, GLIBC_2.4)
+SYMVER(lio_listio64, GLIBC_2.4)
+SYMVER(log, GLIBC_2.2.5)
+SYMVER(log2, GLIBC_2.2.5)
+SYMVER(log2f, GLIBC_2.2.5)
+SYMVER(logf, GLIBC_2.2.5)
+SYMVER(login, GLIBC_2.2.5)
+SYMVER(login_tty, GLIBC_2.2.5)
+SYMVER(logout, GLIBC_2.2.5)
+SYMVER(logwtmp, GLIBC_2.2.5)
+SYMVER(memcpy, GLIBC_2.14)
+SYMVER(mq_close, GLIBC_2.3.4)
+SYMVER(mq_getattr, GLIBC_2.3.4)
+SYMVER(mq_notify, GLIBC_2.3.4)
+SYMVER(mq_open, GLIBC_2.3.4)
+SYMVER(mq_receive, GLIBC_2.3.4)
+SYMVER(mq_send, GLIBC_2.3.4)
+SYMVER(mq_setattr, GLIBC_2.3.4)
+SYMVER(mq_timedreceive, GLIBC_2.3.4)
+SYMVER(mq_timedsend, GLIBC_2.3.4)
+SYMVER(mq_unlink, GLIBC_2.3.4)
+SYMVER(name_to_handle_at, GLIBC_2.14)
+SYMVER(ns_name_compress, GLIBC_2.9)
+SYMVER(ns_name_ntop, GLIBC_2.9)
+SYMVER(ns_name_pack, GLIBC_2.9)
+SYMVER(ns_name_pton, GLIBC_2.9)
+SYMVER(ns_name_skip, GLIBC_2.9)
+SYMVER(ns_name_uncompress, GLIBC_2.9)
+SYMVER(ns_name_unpack, GLIBC_2.9)
+SYMVER(open_by_handle_at, GLIBC_2.14)
+SYMVER(openpty, GLIBC_2.2.5)
+SYMVER(posix_spawn, GLIBC_2.2.5)
+SYMVER(posix_spawnp, GLIBC_2.2.5)
+SYMVER(pow, GLIBC_2.2.5)
+SYMVER(powf, GLIBC_2.2.5)
+SYMVER(pthread_attr_getaffinity_np, GLIBC_2.3.4)
+SYMVER(pthread_attr_getguardsize, GLIBC_2.2.5)
+SYMVER(pthread_attr_getstack, GLIBC_2.2.5)
+SYMVER(pthread_attr_getstackaddr, GLIBC_2.2.5)
+SYMVER(pthread_attr_getstacksize, GLIBC_2.2.5)
+SYMVER(pthread_attr_setaffinity_np, GLIBC_2.3.4)
+SYMVER(pthread_attr_setguardsize, GLIBC_2.2.5)
+SYMVER(pthread_attr_setstack, GLIBC_2.2.5)
+SYMVER(pthread_attr_setstackaddr, GLIBC_2.2.5)
+SYMVER(pthread_attr_setstacksize, GLIBC_2.2.5)
+SYMVER(pthread_barrier_destroy, GLIBC_2.2.5)
+SYMVER(pthread_barrier_init, GLIBC_2.2.5)
+SYMVER(pthread_barrier_wait, GLIBC_2.2.5)
+SYMVER(pthread_barrierattr_destroy, GLIBC_2.2.5)
+SYMVER(pthread_barrierattr_getpshared, GLIBC_2.3.3)
+SYMVER(pthread_barrierattr_init, GLIBC_2.2.5)
+SYMVER(pthread_barrierattr_setpshared, GLIBC_2.2.5)
+SYMVER(pthread_cancel, GLIBC_2.2.5)
+SYMVER(pthread_condattr_getclock, GLIBC_2.3.3)
+SYMVER(pthread_condattr_getpshared, GLIBC_2.2.5)
+SYMVER(pthread_condattr_setclock, GLIBC_2.3.3)
+SYMVER(pthread_condattr_setpshared, GLIBC_2.2.5)
+SYMVER(pthread_create, GLIBC_2.2.5)
+SYMVER(pthread_detach, GLIBC_2.2.5)
+SYMVER(pthread_getaffinity_np, GLIBC_2.3.4)
+SYMVER(pthread_getattr_np, GLIBC_2.2.5)
+SYMVER(pthread_getconcurrency, GLIBC_2.2.5)
+SYMVER(pthread_getcpuclockid, GLIBC_2.2.5)
+SYMVER(pthread_getname_np, GLIBC_2.12)
+SYMVER(pthread_getspecific, GLIBC_2.2.5)
+SYMVER(pthread_join, GLIBC_2.2.5)
+SYMVER(pthread_key_create, GLIBC_2.2.5)
+SYMVER(pthread_key_delete, GLIBC_2.2.5)
+SYMVER(pthread_kill, GLIBC_2.2.5)
+SYMVER(pthread_mutex_consistent, GLIBC_2.12)
+SYMVER(pthread_mutex_getprioceiling, GLIBC_2.4)
+SYMVER(pthread_mutex_setprioceiling, GLIBC_2.4)
+SYMVER(pthread_mutex_timedlock, GLIBC_2.2.5)
+SYMVER(pthread_mutex_trylock, GLIBC_2.2.5)
+SYMVER(pthread_mutexattr_destroy, GLIBC_2.2.5)
+SYMVER(pthread_mutexattr_getprioceiling, GLIBC_2.4)
+SYMVER(pthread_mutexattr_getprotocol, GLIBC_2.4)
+SYMVER(pthread_mutexattr_getpshared, GLIBC_2.2.5)
+SYMVER(pthread_mutexattr_getrobust, GLIBC_2.12)
+SYMVER(pthread_mutexattr_gettype, GLIBC_2.2.5)
+SYMVER(pthread_mutexattr_init, GLIBC_2.2.5)
+SYMVER(pthread_mutexattr_setprioceiling, GLIBC_2.4)
+SYMVER(pthread_mutexattr_setprotocol, GLIBC_2.4)
+SYMVER(pthread_mutexattr_setpshared, GLIBC_2.2.5)
+SYMVER(pthread_mutexattr_setrobust, GLIBC_2.12)
+SYMVER(pthread_mutexattr_settype, GLIBC_2.2.5)
+SYMVER(pthread_once, GLIBC_2.2.5)
+SYMVER(pthread_rwlock_destroy, GLIBC_2.2.5)
+SYMVER(pthread_rwlock_init, GLIBC_2.2.5)
+SYMVER(pthread_rwlock_rdlock, GLIBC_2.2.5)
+SYMVER(pthread_rwlock_timedrdlock, GLIBC_2.2.5)
+SYMVER(pthread_rwlock_timedwrlock, GLIBC_2.2.5)
+SYMVER(pthread_rwlock_tryrdlock, GLIBC_2.2.5)
+SYMVER(pthread_rwlock_trywrlock, GLIBC_2.2.5)
+SYMVER(pthread_rwlock_unlock, GLIBC_2.2.5)
+SYMVER(pthread_rwlock_wrlock, GLIBC_2.2.5)
+SYMVER(pthread_rwlockattr_destroy, GLIBC_2.2.5)
+SYMVER(pthread_rwlockattr_getkind_np, GLIBC_2.2.5)
+SYMVER(pthread_rwlockattr_getpshared, GLIBC_2.2.5)
+SYMVER(pthread_rwlockattr_init, GLIBC_2.2.5)
+SYMVER(pthread_rwlockattr_setkind_np, GLIBC_2.2.5)
+SYMVER(pthread_rwlockattr_setpshared, GLIBC_2.2.5)
+SYMVER(pthread_setaffinity_np, GLIBC_2.3.4)
+SYMVER(pthread_setconcurrency, GLIBC_2.2.5)
+SYMVER(pthread_setname_np, GLIBC_2.12)
+SYMVER(pthread_setschedprio, GLIBC_2.3.4)
+SYMVER(pthread_setspecific, GLIBC_2.2.5)
+SYMVER(pthread_sigmask, GLIBC_2.2.5)
+SYMVER(pthread_sigqueue, GLIBC_2.11)
+SYMVER(pthread_spin_destroy, GLIBC_2.2.5)
+SYMVER(pthread_spin_init, GLIBC_2.2.5)
+SYMVER(pthread_spin_lock, GLIBC_2.2.5)
+SYMVER(pthread_spin_trylock, GLIBC_2.2.5)
+SYMVER(pthread_spin_unlock, GLIBC_2.2.5)
+SYMVER(pthread_testcancel, GLIBC_2.2.5)
+SYMVER(pthread_timedjoin_np, GLIBC_2.3.3)
+SYMVER(pthread_tryjoin_np, GLIBC_2.3.3)
+SYMVER(quick_exit, GLIBC_2.10)
+SYMVER(sem_close, GLIBC_2.2.5)
+SYMVER(sem_destroy, GLIBC_2.2.5)
+SYMVER(sem_getvalue, GLIBC_2.2.5)
+SYMVER(sem_init, GLIBC_2.2.5)
+SYMVER(sem_open, GLIBC_2.2.5)
+SYMVER(sem_post, GLIBC_2.2.5)
+SYMVER(sem_timedwait, GLIBC_2.2.5)
+SYMVER(sem_trywait, GLIBC_2.2.5)
+SYMVER(sem_unlink, GLIBC_2.2.5)
+SYMVER(sem_wait, GLIBC_2.2.5)
+SYMVER(sendmmsg, GLIBC_2.14)
+SYMVER(setns, GLIBC_2.14)
+SYMVER(shm_open, GLIBC_2.2.5)
+SYMVER(shm_unlink, GLIBC_2.2.5)
+SYMVER(syncfs, GLIBC_2.14)
+SYMVER(timer_create, GLIBC_2.3.3)
+SYMVER(timer_delete, GLIBC_2.3.3)
+SYMVER(timer_getoverrun, GLIBC_2.3.3)
+SYMVER(timer_gettime, GLIBC_2.3.3)
+SYMVER(timer_settime, GLIBC_2.3.3)
+
+/* Symbols introduced in newer glibc versions, which must not be used */
+SYMVER(_Fork, GLIBC_DONT_USE_THIS_VERSION_2.34)
+SYMVER(_ZGVbN2v_acos, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN2v_acosh, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN2v_asin, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN2v_asinh, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN2v_atan, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN2v_atanh, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN2v_cbrt, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN2v_cos, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVbN2v_cosh, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN2v_erf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN2v_erfc, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN2v_exp, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVbN2v_exp10, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN2v_exp2, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN2v_expm1, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN2v_log, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVbN2v_log10, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN2v_log1p, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN2v_log2, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN2v_sin, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVbN2v_sinh, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN2v_tan, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN2v_tanh, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN2vv_atan2, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN2vv_hypot, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN2vv_pow, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVbN2vvv_sincos, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVbN4v_acosf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN4v_acoshf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN4v_asinf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN4v_asinhf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN4v_atanf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN4v_atanhf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN4v_cbrtf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN4v_cosf, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVbN4v_coshf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN4v_erfcf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN4v_erff, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN4v_exp10f, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN4v_exp2f, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN4v_expf, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVbN4v_expm1f, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN4v_log10f, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN4v_log1pf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN4v_log2f, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN4v_logf, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVbN4v_sinf, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVbN4v_sinhf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN4v_tanf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN4v_tanhf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN4vv_atan2f, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN4vv_hypotf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVbN4vv_powf, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVbN4vvv_sincosf, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVcN4v_acos, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN4v_acosh, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN4v_asin, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN4v_asinh, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN4v_atan, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN4v_atanh, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN4v_cbrt, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN4v_cos, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVcN4v_cosh, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN4v_erf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN4v_erfc, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN4v_exp, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVcN4v_exp10, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN4v_exp2, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN4v_expm1, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN4v_log, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVcN4v_log10, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN4v_log1p, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN4v_log2, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN4v_sin, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVcN4v_sinh, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN4v_tan, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN4v_tanh, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN4vv_atan2, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN4vv_hypot, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN4vv_pow, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVcN4vvv_sincos, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVcN8v_acosf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN8v_acoshf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN8v_asinf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN8v_asinhf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN8v_atanf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN8v_atanhf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN8v_cbrtf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN8v_cosf, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVcN8v_coshf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN8v_erfcf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN8v_erff, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN8v_exp10f, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN8v_exp2f, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN8v_expf, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVcN8v_expm1f, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN8v_log10f, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN8v_log1pf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN8v_log2f, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN8v_logf, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVcN8v_sinf, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVcN8v_sinhf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN8v_tanf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN8v_tanhf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN8vv_atan2f, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN8vv_hypotf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVcN8vv_powf, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVcN8vvv_sincosf, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVdN4v_acos, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN4v_acosh, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN4v_asin, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN4v_asinh, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN4v_atan, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN4v_atanh, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN4v_cbrt, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN4v_cos, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVdN4v_cosh, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN4v_erf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN4v_erfc, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN4v_exp, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVdN4v_exp10, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN4v_exp2, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN4v_expm1, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN4v_log, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVdN4v_log10, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN4v_log1p, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN4v_log2, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN4v_sin, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVdN4v_sinh, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN4v_tan, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN4v_tanh, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN4vv_atan2, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN4vv_hypot, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN4vv_pow, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVdN4vvv_sincos, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVdN8v_acosf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN8v_acoshf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN8v_asinf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN8v_asinhf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN8v_atanf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN8v_atanhf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN8v_cbrtf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN8v_cosf, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVdN8v_coshf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN8v_erfcf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN8v_erff, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN8v_exp10f, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN8v_exp2f, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN8v_expf, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVdN8v_expm1f, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN8v_log10f, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN8v_log1pf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN8v_log2f, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN8v_logf, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVdN8v_sinf, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVdN8v_sinhf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN8v_tanf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN8v_tanhf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN8vv_atan2f, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN8vv_hypotf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVdN8vv_powf, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVdN8vvv_sincosf, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVeN16v_acosf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN16v_acoshf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN16v_asinf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN16v_asinhf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN16v_atanf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN16v_atanhf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN16v_cbrtf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN16v_cosf, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVeN16v_coshf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN16v_erfcf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN16v_erff, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN16v_exp10f, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN16v_exp2f, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN16v_expf, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVeN16v_expm1f, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN16v_log10f, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN16v_log1pf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN16v_log2f, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN16v_logf, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVeN16v_sinf, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVeN16v_sinhf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN16v_tanf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN16v_tanhf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN16vv_atan2f, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN16vv_hypotf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN16vv_powf, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVeN16vvv_sincosf, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVeN8v_acos, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN8v_acosh, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN8v_asin, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN8v_asinh, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN8v_atan, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN8v_atanh, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN8v_cbrt, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN8v_cos, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVeN8v_cosh, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN8v_erf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN8v_erfc, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN8v_exp, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVeN8v_exp10, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN8v_exp2, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN8v_expm1, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN8v_log, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVeN8v_log10, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN8v_log1p, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN8v_log2, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN8v_sin, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVeN8v_sinh, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN8v_tan, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN8v_tanh, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN8vv_atan2, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN8vv_hypot, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(_ZGVeN8vv_pow, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(_ZGVeN8vvv_sincos, GLIBC_DONT_USE_THIS_VERSION_2.22)
+SYMVER(__acos_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__acosf128_finite, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__acosf_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__acosh_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__acoshf128_finite, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__acoshf_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__acoshl_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__acosl_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__asin_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__asinf128_finite, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__asinf_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__asinl_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__atan2_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__atan2f128_finite, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__atan2f_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__atan2l_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__atanh_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__atanhf128_finite, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__atanhf_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__atanhl_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__cosh_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__coshf128_finite, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__coshf_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__coshl_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__cxa_thread_atexit_impl, GLIBC_DONT_USE_THIS_VERSION_2.18)
+SYMVER(__exp10_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__exp10f128_finite, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__exp10f_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__exp10l_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__exp2_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__exp2f128_finite, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__exp2f_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__exp2l_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__exp_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__expf128_finite, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__expf_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__expl_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__explicit_bzero_chk, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(__fdelt_chk, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__fdelt_warn, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__finitef128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__fmod_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__fmodf128_finite, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__fmodf_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__fmodl_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__fpclassifyf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__gamma_r_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__gammaf128_r_finite, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__gammaf_r_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__gammal_r_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__getauxval, GLIBC_DONT_USE_THIS_VERSION_2.16)
+SYMVER(__hypot_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__hypotf128_finite, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__hypotf_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__hypotl_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__iscanonicall, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(__iseqsig, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(__iseqsigf, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(__iseqsigf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__iseqsigl, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(__isinff128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__isnanf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__issignaling, GLIBC_DONT_USE_THIS_VERSION_2.18)
+SYMVER(__issignalingf, GLIBC_DONT_USE_THIS_VERSION_2.18)
+SYMVER(__issignalingf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__issignalingl, GLIBC_DONT_USE_THIS_VERSION_2.18)
+SYMVER(__j0_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__j0f128_finite, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__j0f_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__j0l_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__j1_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__j1f128_finite, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__j1f_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__j1l_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__jn_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__jnf128_finite, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__jnf_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__jnl_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__lgamma_r_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__lgammaf128_r_finite, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__lgammaf_r_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__lgammal_r_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__libc_single_threaded, GLIBC_DONT_USE_THIS_VERSION_2.32)
+SYMVER(__log10_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__log10f128_finite, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__log10f_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__log10l_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__log2_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__log2f128_finite, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__log2f_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__log2l_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__log_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__logf128_finite, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__logf_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__logl_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__memcmpeq, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(__poll_chk, GLIBC_DONT_USE_THIS_VERSION_2.16)
+SYMVER(__pow_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__powf128_finite, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__powf_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__powl_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__ppoll_chk, GLIBC_DONT_USE_THIS_VERSION_2.16)
+SYMVER(__remainder_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__remainderf128_finite, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__remainderf_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__remainderl_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__rseq_flags, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(__rseq_offset, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(__rseq_size, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(__rtld_version_placeholder, GLIBC_DONT_USE_THIS_VERSION_2.34)
+SYMVER(__scalb_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__scalbf_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__scalbl_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__signbitf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__signgam, GLIBC_DONT_USE_THIS_VERSION_2.23)
+SYMVER(__sinh_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__sinhf128_finite, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__sinhf_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__sinhl_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__sqrt_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__sqrtf128_finite, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__sqrtf_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__sqrtl_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__strtof128_internal, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__wcstof128_internal, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__x86_get_cpuid_feature_leaf, GLIBC_DONT_USE_THIS_VERSION_2.33)
+SYMVER(__y0_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__y0f128_finite, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__y0f_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__y0l_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__y1_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__y1f128_finite, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__y1f_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__y1l_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__yn_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__ynf128_finite, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(__ynf_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(__ynl_finite, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(_dl_find_object, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(acosf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(acosf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(acosf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(acosf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(acosf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(acoshf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(acoshf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(acoshf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(acoshf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(acoshf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(aligned_alloc, GLIBC_DONT_USE_THIS_VERSION_2.16)
+SYMVER(arc4random, GLIBC_DONT_USE_THIS_VERSION_2.36)
+SYMVER(arc4random_buf, GLIBC_DONT_USE_THIS_VERSION_2.36)
+SYMVER(arc4random_uniform, GLIBC_DONT_USE_THIS_VERSION_2.36)
+SYMVER(asinf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(asinf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(asinf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(asinf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(asinf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(asinhf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(asinhf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(asinhf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(asinhf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(asinhf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(atan2f128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(atan2f32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(atan2f32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(atan2f64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(atan2f64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(atanf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(atanf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(atanf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(atanf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(atanf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(atanhf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(atanhf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(atanhf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(atanhf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(atanhf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(c16rtomb, GLIBC_DONT_USE_THIS_VERSION_2.16)
+SYMVER(c32rtomb, GLIBC_DONT_USE_THIS_VERSION_2.16)
+SYMVER(c8rtomb, GLIBC_DONT_USE_THIS_VERSION_2.36)
+SYMVER(cabsf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(cabsf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cabsf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cabsf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cabsf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cacosf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(cacosf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cacosf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cacosf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cacosf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cacoshf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(cacoshf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cacoshf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cacoshf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cacoshf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(call_once, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(canonicalize, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(canonicalizef, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(canonicalizef128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(canonicalizef32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(canonicalizef32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(canonicalizef64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(canonicalizef64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(canonicalizel, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(cargf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(cargf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cargf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cargf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cargf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(casinf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(casinf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(casinf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(casinf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(casinf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(casinhf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(casinhf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(casinhf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(casinhf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(casinhf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(catanf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(catanf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(catanf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(catanf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(catanf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(catanhf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(catanhf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(catanhf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(catanhf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(catanhf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cbrtf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(cbrtf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cbrtf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cbrtf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cbrtf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ccosf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(ccosf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ccosf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ccosf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ccosf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ccoshf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(ccoshf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ccoshf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ccoshf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ccoshf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ceilf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(ceilf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ceilf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ceilf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ceilf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cexpf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(cexpf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cexpf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cexpf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cexpf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cimagf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(cimagf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cimagf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cimagf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cimagf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(clog10f128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(clog10f32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(clog10f32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(clog10f64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(clog10f64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(clogf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(clogf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(clogf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(clogf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(clogf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(close_range, GLIBC_DONT_USE_THIS_VERSION_2.34)
+SYMVER(closefrom, GLIBC_DONT_USE_THIS_VERSION_2.34)
+SYMVER(cnd_broadcast, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(cnd_destroy, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(cnd_init, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(cnd_signal, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(cnd_timedwait, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(cnd_wait, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(conjf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(conjf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(conjf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(conjf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(conjf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(copy_file_range, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(copysignf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(copysignf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(copysignf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(copysignf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(copysignf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cosf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(cosf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cosf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cosf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cosf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(coshf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(coshf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(coshf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(coshf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(coshf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cpowf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(cpowf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cpowf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cpowf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cpowf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cprojf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(cprojf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cprojf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cprojf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(cprojf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(crealf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(crealf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(crealf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(crealf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(crealf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(csinf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(csinf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(csinf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(csinf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(csinf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(csinhf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(csinhf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(csinhf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(csinhf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(csinhf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(csqrtf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(csqrtf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(csqrtf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(csqrtf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(csqrtf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ctanf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(ctanf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ctanf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ctanf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ctanf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ctanhf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(ctanhf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ctanhf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ctanhf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ctanhf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(daddl, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(ddivl, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(dfmal, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(dmull, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(dn_comp, GLIBC_DONT_USE_THIS_VERSION_2.34)
+SYMVER(dn_expand, GLIBC_DONT_USE_THIS_VERSION_2.34)
+SYMVER(dn_skipname, GLIBC_DONT_USE_THIS_VERSION_2.34)
+SYMVER(dsqrtl, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(dsubl, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(epoll_pwait2, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(erfcf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(erfcf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(erfcf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(erfcf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(erfcf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(erff128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(erff32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(erff32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(erff64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(erff64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(execveat, GLIBC_DONT_USE_THIS_VERSION_2.34)
+SYMVER(exp10f128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(exp10f32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(exp10f32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(exp10f64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(exp10f64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(exp2f128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(exp2f32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(exp2f32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(exp2f64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(exp2f64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(expf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(expf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(expf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(expf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(expf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(explicit_bzero, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(expm1f128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(expm1f32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(expm1f32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(expm1f64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(expm1f64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(f32addf128, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f32addf32x, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f32addf64, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f32addf64x, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f32divf128, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f32divf32x, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f32divf64, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f32divf64x, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f32fmaf128, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(f32fmaf32x, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(f32fmaf64, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(f32fmaf64x, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(f32mulf128, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f32mulf32x, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f32mulf64, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f32mulf64x, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f32sqrtf128, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(f32sqrtf32x, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(f32sqrtf64, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(f32sqrtf64x, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(f32subf128, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f32subf32x, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f32subf64, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f32subf64x, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f32xaddf128, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f32xaddf64, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f32xaddf64x, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f32xdivf128, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f32xdivf64, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f32xdivf64x, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f32xfmaf128, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(f32xfmaf64, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(f32xfmaf64x, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(f32xmulf128, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f32xmulf64, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f32xmulf64x, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f32xsqrtf128, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(f32xsqrtf64, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(f32xsqrtf64x, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(f32xsubf128, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f32xsubf64, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f32xsubf64x, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f64addf128, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f64addf64x, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f64divf128, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f64divf64x, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f64fmaf128, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(f64fmaf64x, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(f64mulf128, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f64mulf64x, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f64sqrtf128, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(f64sqrtf64x, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(f64subf128, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f64subf64x, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f64xaddf128, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f64xdivf128, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f64xfmaf128, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(f64xmulf128, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(f64xsqrtf128, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(f64xsubf128, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(fabsf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(fabsf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fabsf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fabsf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fabsf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fadd, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(faddl, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(fcntl64, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(fdimf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(fdimf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fdimf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fdimf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fdimf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fdiv, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(fdivl, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(fegetmode, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(fesetexcept, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(fesetmode, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(fetestexceptflag, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(ffma, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(ffmal, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(floorf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(floorf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(floorf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(floorf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(floorf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fmaf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(fmaf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fmaf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fmaf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fmaf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fmaxf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(fmaxf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fmaxf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fmaxf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fmaxf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fmaximum, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximum_mag, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximum_mag_num, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximum_mag_numf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximum_mag_numf128, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximum_mag_numf32, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximum_mag_numf32x, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximum_mag_numf64, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximum_mag_numf64x, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximum_mag_numl, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximum_magf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximum_magf128, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximum_magf32, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximum_magf32x, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximum_magf64, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximum_magf64x, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximum_magl, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximum_num, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximum_numf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximum_numf128, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximum_numf32, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximum_numf32x, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximum_numf64, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximum_numf64x, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximum_numl, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximumf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximumf128, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximumf32, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximumf32x, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximumf64, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximumf64x, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaximuml, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fmaxmag, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(fmaxmagf, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(fmaxmagf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(fmaxmagf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fmaxmagf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fmaxmagf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fmaxmagf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fmaxmagl, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(fminf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(fminf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fminf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fminf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fminf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fminimum, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimum_mag, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimum_mag_num, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimum_mag_numf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimum_mag_numf128, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimum_mag_numf32, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimum_mag_numf32x, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimum_mag_numf64, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimum_mag_numf64x, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimum_mag_numl, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimum_magf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimum_magf128, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimum_magf32, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimum_magf32x, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimum_magf64, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimum_magf64x, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimum_magl, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimum_num, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimum_numf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimum_numf128, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimum_numf32, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimum_numf32x, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimum_numf64, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimum_numf64x, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimum_numl, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimumf, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimumf128, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimumf32, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimumf32x, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimumf64, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimumf64x, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminimuml, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fminmag, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(fminmagf, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(fminmagf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(fminmagf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fminmagf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fminmagf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fminmagf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fminmagl, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(fmodf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(fmodf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fmodf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fmodf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fmodf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fmul, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(fmull, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(frexpf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(frexpf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(frexpf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(frexpf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(frexpf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fromfp, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(fromfpf, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(fromfpf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(fromfpf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fromfpf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fromfpf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fromfpf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fromfpl, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(fromfpx, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(fromfpxf, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(fromfpxf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(fromfpxf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fromfpxf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fromfpxf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fromfpxf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(fromfpxl, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(fsconfig, GLIBC_DONT_USE_THIS_VERSION_2.36)
+SYMVER(fsmount, GLIBC_DONT_USE_THIS_VERSION_2.36)
+SYMVER(fsopen, GLIBC_DONT_USE_THIS_VERSION_2.36)
+SYMVER(fspick, GLIBC_DONT_USE_THIS_VERSION_2.36)
+SYMVER(fsqrt, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fsqrtl, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(fstat, GLIBC_DONT_USE_THIS_VERSION_2.33)
+SYMVER(fstat64, GLIBC_DONT_USE_THIS_VERSION_2.33)
+SYMVER(fstatat, GLIBC_DONT_USE_THIS_VERSION_2.33)
+SYMVER(fstatat64, GLIBC_DONT_USE_THIS_VERSION_2.33)
+SYMVER(fsub, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(fsubl, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(fts64_children, GLIBC_DONT_USE_THIS_VERSION_2.23)
+SYMVER(fts64_close, GLIBC_DONT_USE_THIS_VERSION_2.23)
+SYMVER(fts64_open, GLIBC_DONT_USE_THIS_VERSION_2.23)
+SYMVER(fts64_read, GLIBC_DONT_USE_THIS_VERSION_2.23)
+SYMVER(fts64_set, GLIBC_DONT_USE_THIS_VERSION_2.23)
+SYMVER(getauxval, GLIBC_DONT_USE_THIS_VERSION_2.16)
+SYMVER(getcpu, GLIBC_DONT_USE_THIS_VERSION_2.29)
+SYMVER(getdents64, GLIBC_DONT_USE_THIS_VERSION_2.30)
+SYMVER(getentropy, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(getpayload, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(getpayloadf, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(getpayloadf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(getpayloadf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(getpayloadf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(getpayloadf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(getpayloadf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(getpayloadl, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(getrandom, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(gettid, GLIBC_DONT_USE_THIS_VERSION_2.30)
+SYMVER(hypotf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(hypotf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(hypotf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(hypotf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(hypotf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ilogbf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(ilogbf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ilogbf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ilogbf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ilogbf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(j0f128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(j0f32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(j0f32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(j0f64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(j0f64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(j1f128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(j1f32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(j1f32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(j1f64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(j1f64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(jnf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(jnf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(jnf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(jnf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(jnf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ldexpf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(ldexpf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ldexpf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ldexpf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ldexpf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(lgammaf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(lgammaf128_r, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(lgammaf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(lgammaf32_r, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(lgammaf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(lgammaf32x_r, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(lgammaf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(lgammaf64_r, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(lgammaf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(lgammaf64x_r, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(llogb, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(llogbf, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(llogbf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(llogbf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(llogbf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(llogbf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(llogbf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(llogbl, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(llrintf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(llrintf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(llrintf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(llrintf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(llrintf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(llroundf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(llroundf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(llroundf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(llroundf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(llroundf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(log10f128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(log10f32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(log10f32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(log10f64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(log10f64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(log1pf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(log1pf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(log1pf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(log1pf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(log1pf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(log2f128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(log2f32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(log2f32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(log2f64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(log2f64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(logbf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(logbf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(logbf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(logbf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(logbf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(logf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(logf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(logf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(logf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(logf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(lrintf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(lrintf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(lrintf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(lrintf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(lrintf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(lroundf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(lroundf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(lroundf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(lroundf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(lroundf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(lstat, GLIBC_DONT_USE_THIS_VERSION_2.33)
+SYMVER(lstat64, GLIBC_DONT_USE_THIS_VERSION_2.33)
+SYMVER(mallinfo2, GLIBC_DONT_USE_THIS_VERSION_2.33)
+SYMVER(mbrtoc16, GLIBC_DONT_USE_THIS_VERSION_2.16)
+SYMVER(mbrtoc32, GLIBC_DONT_USE_THIS_VERSION_2.16)
+SYMVER(mbrtoc8, GLIBC_DONT_USE_THIS_VERSION_2.36)
+SYMVER(memfd_create, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(mknod, GLIBC_DONT_USE_THIS_VERSION_2.33)
+SYMVER(mknodat, GLIBC_DONT_USE_THIS_VERSION_2.33)
+SYMVER(mlock2, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(modff128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(modff32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(modff32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(modff64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(modff64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(mount_setattr, GLIBC_DONT_USE_THIS_VERSION_2.36)
+SYMVER(move_mount, GLIBC_DONT_USE_THIS_VERSION_2.36)
+SYMVER(mtx_destroy, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(mtx_init, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(mtx_lock, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(mtx_timedlock, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(mtx_trylock, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(mtx_unlock, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(nanf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(nanf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(nanf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(nanf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(nanf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(nearbyintf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(nearbyintf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(nearbyintf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(nearbyintf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(nearbyintf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(nextafterf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(nextafterf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(nextafterf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(nextafterf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(nextafterf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(nextdown, GLIBC_DONT_USE_THIS_VERSION_2.24)
+SYMVER(nextdownf, GLIBC_DONT_USE_THIS_VERSION_2.24)
+SYMVER(nextdownf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(nextdownf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(nextdownf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(nextdownf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(nextdownf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(nextdownl, GLIBC_DONT_USE_THIS_VERSION_2.24)
+SYMVER(nextup, GLIBC_DONT_USE_THIS_VERSION_2.24)
+SYMVER(nextupf, GLIBC_DONT_USE_THIS_VERSION_2.24)
+SYMVER(nextupf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(nextupf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(nextupf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(nextupf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(nextupf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(nextupl, GLIBC_DONT_USE_THIS_VERSION_2.24)
+SYMVER(open_tree, GLIBC_DONT_USE_THIS_VERSION_2.36)
+SYMVER(pidfd_getfd, GLIBC_DONT_USE_THIS_VERSION_2.36)
+SYMVER(pidfd_open, GLIBC_DONT_USE_THIS_VERSION_2.36)
+SYMVER(pidfd_send_signal, GLIBC_DONT_USE_THIS_VERSION_2.36)
+SYMVER(pkey_alloc, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(pkey_free, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(pkey_get, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(pkey_mprotect, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(pkey_set, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(posix_spawn_file_actions_addchdir_np, GLIBC_DONT_USE_THIS_VERSION_2.29)
+SYMVER(posix_spawn_file_actions_addclosefrom_np, GLIBC_DONT_USE_THIS_VERSION_2.34)
+SYMVER(posix_spawn_file_actions_addfchdir_np, GLIBC_DONT_USE_THIS_VERSION_2.29)
+SYMVER(posix_spawn_file_actions_addtcsetpgrp_np, GLIBC_DONT_USE_THIS_VERSION_2.35)
+SYMVER(powf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(powf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(powf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(powf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(powf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(preadv2, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(preadv64v2, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(process_madvise, GLIBC_DONT_USE_THIS_VERSION_2.36)
+SYMVER(process_mrelease, GLIBC_DONT_USE_THIS_VERSION_2.36)
+SYMVER(process_vm_readv, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(process_vm_writev, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(pthread_attr_getsigmask_np, GLIBC_DONT_USE_THIS_VERSION_2.32)
+SYMVER(pthread_attr_setsigmask_np, GLIBC_DONT_USE_THIS_VERSION_2.32)
+SYMVER(pthread_clockjoin_np, GLIBC_DONT_USE_THIS_VERSION_2.31)
+SYMVER(pthread_cond_clockwait, GLIBC_DONT_USE_THIS_VERSION_2.30)
+SYMVER(pthread_getattr_default_np, GLIBC_DONT_USE_THIS_VERSION_2.18)
+SYMVER(pthread_mutex_clocklock, GLIBC_DONT_USE_THIS_VERSION_2.30)
+SYMVER(pthread_rwlock_clockrdlock, GLIBC_DONT_USE_THIS_VERSION_2.30)
+SYMVER(pthread_rwlock_clockwrlock, GLIBC_DONT_USE_THIS_VERSION_2.30)
+SYMVER(pthread_setattr_default_np, GLIBC_DONT_USE_THIS_VERSION_2.18)
+SYMVER(pwritev2, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(pwritev64v2, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(reallocarray, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(remainderf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(remainderf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(remainderf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(remainderf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(remainderf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(remquof128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(remquof32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(remquof32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(remquof64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(remquof64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(renameat2, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(res_dnok, GLIBC_DONT_USE_THIS_VERSION_2.34)
+SYMVER(res_hnok, GLIBC_DONT_USE_THIS_VERSION_2.34)
+SYMVER(res_mailok, GLIBC_DONT_USE_THIS_VERSION_2.34)
+SYMVER(res_mkquery, GLIBC_DONT_USE_THIS_VERSION_2.34)
+SYMVER(res_nmkquery, GLIBC_DONT_USE_THIS_VERSION_2.34)
+SYMVER(res_nquery, GLIBC_DONT_USE_THIS_VERSION_2.34)
+SYMVER(res_nquerydomain, GLIBC_DONT_USE_THIS_VERSION_2.34)
+SYMVER(res_nsearch, GLIBC_DONT_USE_THIS_VERSION_2.34)
+SYMVER(res_nsend, GLIBC_DONT_USE_THIS_VERSION_2.34)
+SYMVER(res_ownok, GLIBC_DONT_USE_THIS_VERSION_2.34)
+SYMVER(res_query, GLIBC_DONT_USE_THIS_VERSION_2.34)
+SYMVER(res_querydomain, GLIBC_DONT_USE_THIS_VERSION_2.34)
+SYMVER(res_search, GLIBC_DONT_USE_THIS_VERSION_2.34)
+SYMVER(res_send, GLIBC_DONT_USE_THIS_VERSION_2.34)
+SYMVER(rintf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(rintf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(rintf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(rintf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(rintf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(roundeven, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(roundevenf, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(roundevenf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(roundevenf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(roundevenf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(roundevenf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(roundevenf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(roundevenl, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(roundf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(roundf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(roundf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(roundf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(roundf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(scalblnf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(scalblnf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(scalblnf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(scalblnf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(scalblnf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(scalbnf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(scalbnf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(scalbnf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(scalbnf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(scalbnf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(scandirat, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(scandirat64, GLIBC_DONT_USE_THIS_VERSION_2.15)
+SYMVER(secure_getenv, GLIBC_DONT_USE_THIS_VERSION_2.17)
+SYMVER(sem_clockwait, GLIBC_DONT_USE_THIS_VERSION_2.30)
+SYMVER(setpayload, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(setpayloadf, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(setpayloadf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(setpayloadf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(setpayloadf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(setpayloadf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(setpayloadf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(setpayloadl, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(setpayloadsig, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(setpayloadsigf, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(setpayloadsigf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(setpayloadsigf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(setpayloadsigf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(setpayloadsigf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(setpayloadsigf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(setpayloadsigl, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(sigabbrev_np, GLIBC_DONT_USE_THIS_VERSION_2.32)
+SYMVER(sigdescr_np, GLIBC_DONT_USE_THIS_VERSION_2.32)
+SYMVER(sincosf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(sincosf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(sincosf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(sincosf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(sincosf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(sinf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(sinf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(sinf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(sinf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(sinf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(sinhf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(sinhf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(sinhf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(sinhf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(sinhf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(sqrtf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(sqrtf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(sqrtf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(sqrtf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(sqrtf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(stat, GLIBC_DONT_USE_THIS_VERSION_2.33)
+SYMVER(stat64, GLIBC_DONT_USE_THIS_VERSION_2.33)
+SYMVER(statx, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(strerrordesc_np, GLIBC_DONT_USE_THIS_VERSION_2.32)
+SYMVER(strerrorname_np, GLIBC_DONT_USE_THIS_VERSION_2.32)
+SYMVER(strfromd, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(strfromf, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(strfromf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(strfromf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(strfromf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(strfromf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(strfromf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(strfroml, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(strtof128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(strtof128_l, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(strtof32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(strtof32_l, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(strtof32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(strtof32x_l, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(strtof64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(strtof64_l, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(strtof64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(strtof64x_l, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(tanf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(tanf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(tanf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(tanf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(tanf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(tanhf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(tanhf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(tanhf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(tanhf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(tanhf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(tgammaf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(tgammaf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(tgammaf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(tgammaf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(tgammaf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(tgkill, GLIBC_DONT_USE_THIS_VERSION_2.30)
+SYMVER(thrd_create, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(thrd_current, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(thrd_detach, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(thrd_equal, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(thrd_exit, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(thrd_join, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(thrd_sleep, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(thrd_yield, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(timespec_get, GLIBC_DONT_USE_THIS_VERSION_2.16)
+SYMVER(timespec_getres, GLIBC_DONT_USE_THIS_VERSION_2.34)
+SYMVER(totalorder, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(totalorderf, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(totalorderf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(totalorderf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(totalorderf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(totalorderf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(totalorderf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(totalorderl, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(totalordermag, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(totalordermagf, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(totalordermagf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(totalordermagf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(totalordermagf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(totalordermagf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(totalordermagf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(totalordermagl, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(truncf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(truncf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(truncf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(truncf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(truncf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(tss_create, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(tss_delete, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(tss_get, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(tss_set, GLIBC_DONT_USE_THIS_VERSION_2.28)
+SYMVER(twalk_r, GLIBC_DONT_USE_THIS_VERSION_2.30)
+SYMVER(ufromfp, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(ufromfpf, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(ufromfpf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(ufromfpf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ufromfpf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ufromfpf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ufromfpf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ufromfpl, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(ufromfpx, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(ufromfpxf, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(ufromfpxf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(ufromfpxf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ufromfpxf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ufromfpxf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ufromfpxf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ufromfpxl, GLIBC_DONT_USE_THIS_VERSION_2.25)
+SYMVER(wcstof128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(wcstof128_l, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(wcstof32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(wcstof32_l, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(wcstof32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(wcstof32x_l, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(wcstof64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(wcstof64_l, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(wcstof64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(wcstof64x_l, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(y0f128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(y0f32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(y0f32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(y0f64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(y0f64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(y1f128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(y1f32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(y1f32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(y1f64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(y1f64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ynf128, GLIBC_DONT_USE_THIS_VERSION_2.26)
+SYMVER(ynf32, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ynf32x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ynf64, GLIBC_DONT_USE_THIS_VERSION_2.27)
+SYMVER(ynf64x, GLIBC_DONT_USE_THIS_VERSION_2.27)
+
+#undef SYMVER
+#undef SYMVER1
+
+#ifndef _GNU_SOURCE
+#define _GNU_SOURCE
+#endif
+#include <sys/stat.h>
+
+#if __GLIBC_PREREQ(2, 33)
+
+/*
+ * avoid references to stat/lstat/fstat, which are only available in glibc >= 2.33
+ */
+
+extern int __fxstat(int __ver, int __fildes, struct stat *__stat_buf)
+     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3)));
+extern int __xstat(int __ver, const char *__filename,
+      struct stat *__stat_buf) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 3)));
+extern int __lxstat(int __ver, const char *__filename,
+       struct stat *__stat_buf) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 3)));
+extern int __fxstatat (int __ver, int __fildes, const char *__filename,
+         struct stat *__stat_buf, int __flag)
+     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4)));
+#ifdef __USE_LARGEFILE64
+extern int __xstat64(int __ver, const char *__filename,
+      struct stat64 *__stat_buf) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 3)));
+extern int __lxstat64(int __ver, const char *__filename,
+       struct stat64 *__stat_buf) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 3)));
+extern int __fxstat64(int __ver, int __fildes, struct stat64 *__stat_buf)
+     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3)));
+#endif
+
+extern __inline __attribute__((__gnu_inline__))
+__attribute__((__nothrow__))
+int stat(const char *__path, struct stat *__statbuf)
+{
+	return __xstat(1, __path, __statbuf);
+}
+
+extern __inline __attribute__((__gnu_inline__))
+__attribute__((__nothrow__)) 
+int lstat (const char *__path, struct stat *__statbuf)
+{
+	return __lxstat(1, __path, __statbuf);
+}
+
+extern __inline __attribute__((__gnu_inline__))
+__attribute__((__nothrow__)) 
+int fstat(int __fd, struct stat *__statbuf)
+{
+	return __fxstat(1, __fd, __statbuf);
+}
+
+extern __inline __attribute__((__gnu_inline__))
+__attribute__((__nothrow__)) 
+int fstatat(int __fd, const char *__filename, struct stat *__statbuf, int __flag)
+{
+	return __fxstatat(1, __fd, __filename, __statbuf, __flag);
+}
+
+#ifdef __USE_LARGEFILE64
+extern __inline __attribute__((__gnu_inline__))
+__attribute__((__nothrow__))
+int stat64(const char *__path, struct stat64 *__statbuf)
+{
+	return __xstat64(1, __path, __statbuf);
+}
+
+extern __inline __attribute__((__gnu_inline__))
+__attribute__((__nothrow__)) 
+int lstat64 (const char *__path, struct stat64 *__statbuf)
+{
+	return __lxstat64(1, __path, __statbuf);
+}
+
+extern __inline __attribute__((__gnu_inline__))
+__attribute__((__nothrow__)) 
+int fstat64(int __fd, struct stat64 *__statbuf)
+{
+	return __fxstat64(1, __fd, __statbuf);
+}
+
+#endif /* __USE_LARGEFILE64 */
+
+#endif /* __GLIBC_PREREQ */
+
+#if defined (__cplusplus)
+}
+#endif
+
+
+#endif /* __x86_64__ */
+#endif /* __linux__ */
diff --git a/gcc/lto-wrapper.c b/gcc/lto-wrapper.c
index 038784ca2dc..48bfc5a44f5 100644
--- a/gcc/lto-wrapper.c
+++ b/gcc/lto-wrapper.c
@@ -1581,7 +1581,8 @@ run_gcc (unsigned argc, char *argv[])
   if (!dumppfx)
     {
       if (!linker_output
-	  || strcmp (linker_output, HOST_BIT_BUCKET) == 0)
+	  || strcmp (linker_output, HOST_BIT_BUCKET) == 0
+	  || strcmp (linker_output, HOST_BIT_BUCKET2) == 0)
 	dumppfx = "a.";
       else
 	{
@@ -2036,6 +2037,8 @@ cont:
 
 /* Entry point.  */
 
+#include "libcmain.h"
+
 int
 main (int argc, char *argv[])
 {
diff --git a/gcc/main.c b/gcc/main.c
index ab0244b1851..5681e45aa55 100644
--- a/gcc/main.c
+++ b/gcc/main.c
@@ -24,6 +24,8 @@ along with GCC; see the file COPYING3.  If not see
 #include "diagnostic-core.h"
 #include "toplev.h"
 
+#include "libcmain.h"
+
 int main (int argc, char **argv);
 
 /* We define main() to call toplev::main(), which is defined in toplev.c.
diff --git a/gcc/params.opt b/gcc/params.opt
index 5f03a386c37..d958602d908 100644
--- a/gcc/params.opt
+++ b/gcc/params.opt
@@ -599,7 +599,7 @@ Common Joined UInteger Var(param_max_modulo_backtrack_attempts) Init(40) Param O
 The maximum number of backtrack attempts the scheduler should make when modulo scheduling a loop.
 
 -param=min-pagesize=
-Common Joined UInteger Var(param_min_pagesize) Init(4096) Param Optimization
+Common Joined UInteger Var(param_min_pagesize) Init(0) Param Optimization
 Minimum page size for warning purposes.
 
 -param=max-partial-antic-length=
diff --git a/gcc/pretty-print.c b/gcc/pretty-print.c
index ade1933f86a..dabeda8678f 100644
--- a/gcc/pretty-print.c
+++ b/gcc/pretty-print.c
@@ -43,6 +43,13 @@ along with GCC; see the file COPYING3.  If not see
 #define WIN32_LEAN_AND_MEAN 1
 #include <windows.h>
 
+#ifndef COMMON_LVB_REVERSE_VIDEO
+#define COMMON_LVB_REVERSE_VIDEO 0x4000
+#endif
+#ifndef COMMON_LVB_UNDERSCORE
+#define COMMON_LVB_UNDERSCORE 0x8000
+#endif
+
 /* Write all bytes in [s,s+n) into the specified stream.
    Errors are ignored.  */
 static void
diff --git a/gcc/system.h b/gcc/system.h
index 28c721565a4..0d462c53a2d 100644
--- a/gcc/system.h
+++ b/gcc/system.h
@@ -709,6 +709,9 @@ extern int vsnprintf (char *, size_t, const char *, va_list);
 #ifndef HOST_BIT_BUCKET
 #define HOST_BIT_BUCKET "/dev/null"
 #endif
+#ifndef HOST_BIT_BUCKET2
+#define HOST_BIT_BUCKET2 ""
+#endif
 
 #ifndef offsetof
 #define offsetof(TYPE, MEMBER)	((size_t) &((TYPE *) 0)->MEMBER)
diff --git a/gcc/testsuite/g++.old-deja/g++.other/lookup3.C b/gcc/testsuite/g++.old-deja/g++.other/lookup3.C
index a2946b7b07c..f0a158b262e 100644
--- a/gcc/testsuite/g++.old-deja/g++.other/lookup3.C
+++ b/gcc/testsuite/g++.old-deja/g++.other/lookup3.C
@@ -8,10 +8,10 @@ int main ()
    ({
      union
      {
-       __typeof__ (stat_loc) __in;
+       __typeof__ (stat_loc) ___in;
        int 		__i;
      } __u;
-     __u.__in = (stat_loc);
+     __u.___in = (stat_loc);
      __u.__i;
    })
    );
diff --git a/gcc/toplev.c b/gcc/toplev.c
index d8cc254adef..95b1183bcb8 100644
--- a/gcc/toplev.c
+++ b/gcc/toplev.c
@@ -102,6 +102,14 @@ along with GCC; see the file COPYING3.  If not see
 #include <isl/version.h>
 #endif
 
+#ifdef __MINGW32__
+#undef HOST_BIT_BUCKET
+#undef HOST_BIT_BUCKET2
+/* This is the name of the null device on windows.  */
+#define HOST_BIT_BUCKET "nul"
+#define HOST_BIT_BUCKET2 "/dev/null"
+#endif
+
 static void general_init (const char *, bool);
 static void do_compile ();
 static void process_options (void);
@@ -710,7 +718,8 @@ init_asm_output (const char *name)
       if (!strcmp (asm_file_name, "-"))
 	asm_out_file = stdout;
       else if (!canonical_filename_eq (asm_file_name, name)
-	       || !strcmp (asm_file_name, HOST_BIT_BUCKET))
+	       || !strcmp (asm_file_name, HOST_BIT_BUCKET)
+	       || !strcmp (asm_file_name, HOST_BIT_BUCKET2))
 	asm_out_file = fopen (asm_file_name, "w");
       else
 	/* Use UNKOWN_LOCATION to prevent gcc from printing the first
diff --git a/gcc/tree-data-ref.c b/gcc/tree-data-ref.c
index 53c73bd5ba0..1d569c8b536 100644
--- a/gcc/tree-data-ref.c
+++ b/gcc/tree-data-ref.c
@@ -101,6 +101,10 @@ along with GCC; see the file COPYING3.  If not see
 #include "range-op.h"
 #include "vr-values.h"
 
+#ifdef __mc68000__
+#pragma GCC optimize "-Os"
+#endif
+
 static struct datadep_stats
 {
   int num_dependence_tests;
diff --git a/gcc/tree-loop-distribution.c b/gcc/tree-loop-distribution.c
index 947326ab1e7..e3a0414a001 100644
--- a/gcc/tree-loop-distribution.c
+++ b/gcc/tree-loop-distribution.c
@@ -1703,6 +1703,7 @@ classify_builtin_st (loop_p loop, partition *partition, data_reference_p dr)
   gimple *stmt = DR_STMT (dr);
   tree base, size, rhs = gimple_assign_rhs1 (stmt);
 
+  return;
   if (const_with_all_bytes_same (rhs) == -1
       && (!INTEGRAL_TYPE_P (TREE_TYPE (rhs))
 	  || (TYPE_MODE (TREE_TYPE (rhs))
diff --git a/gcc/varasm.c b/gcc/varasm.c
index 8e456576010..5c73733473f 100644
--- a/gcc/varasm.c
+++ b/gcc/varasm.c
@@ -1101,9 +1101,15 @@ align_variable (tree decl, bool dont_output_data)
      In particular, a.out format supports a maximum alignment of 4.  */
   if (align > MAX_OFILE_ALIGNMENT)
     {
+#if 0
       error ("alignment of %q+D is greater than maximum object "
 	     "file alignment %d", decl,
 	     MAX_OFILE_ALIGNMENT/BITS_PER_UNIT);
+#else
+      warning (OPT_Wattributes, "alignment of %q+D is greater than maximum object "
+	     "file alignment %d", decl,
+	     MAX_OFILE_ALIGNMENT/BITS_PER_UNIT);
+#endif
       align = MAX_OFILE_ALIGNMENT;
     }
 
@@ -1268,7 +1274,7 @@ get_variable_section (tree decl, bool prefer_noswitch_p)
       && !(prefer_noswitch_p && targetm.have_switchable_bss_sections)
       && bss_initializer_p (decl))
     {
-      if (!TREE_PUBLIC (decl)
+      if (!TREE_PUBLIC (decl) && !flag_no_common
 	  && !((flag_sanitize & SANITIZE_ADDRESS)
 	       && asan_protect_global (decl)))
 	return lcomm_section;
diff --git a/gnattools/Makefile.in b/gnattools/Makefile.in
index b0860eaf96d..ebe2aaf88c9 100644
--- a/gnattools/Makefile.in
+++ b/gnattools/Makefile.in
@@ -197,7 +197,7 @@ gnattools-native: $(GCC_DIR)/stamp-tools $(GCC_DIR)/stamp-gnatlib-rts
 	  ../../gnatmake$(exeext) ../../gnatlink$(exeext)
 	# gnattools2
 	$(MAKE) -C $(GCC_DIR)/ada/tools -f ../Makefile \
-	  $(TOOLS_FLAGS_TO_PASS_NATIVE) common-tools
+	  $(TOOLS_FLAGS_TO_PASS_NATIVE) common-tools $(EXTRA_GNATTOOLS)
 
 # gnatmake/link can be built with recent gnatmake/link if they are available.
 # This is especially convenient for building cross tools or for rebuilding
@@ -209,7 +209,7 @@ regnattools: $(GCC_DIR)/stamp-gnatlib-rts
 	  gnatmake-re gnatlink-re
 	# gnattools2
 	$(MAKE) -C $(GCC_DIR)/ada/tools -f ../Makefile \
-	  $(TOOLS_FLAGS_TO_PASS_NATIVE) common-tools
+	  $(TOOLS_FLAGS_TO_PASS_NATIVE) common-tools $(EXTRA_GNATTOOLS)
 
 gnattools-cross: $(GCC_DIR)/stamp-tools
 	# gnattools1-re
diff --git a/gnattools/configure b/gnattools/configure
index 6cdfbe67af2..2532afee51d 100755
--- a/gnattools/configure
+++ b/gnattools/configure
@@ -2075,7 +2075,7 @@ case "${target}" in
   *-*-vxworks*)
     TOOLS_TARGET_PAIRS="indepsw.adb<indepsw-gnu.adb"
     ;;
-  *-*-cygwin32* | *-*-mingw32* | *-*-pe)
+  *-*-cygwin32* | *-*-mingw* | *-*-pe)
     TOOLS_TARGET_PAIRS="indepsw.adb<indepsw-gnu.adb"
     EXTRA_GNATTOOLS='../../gnatdll$(exeext)'
     ;;
diff --git a/intl/Makefile.in b/intl/Makefile.in
index ec8c648b7a9..978f314dbdd 100644
--- a/intl/Makefile.in
+++ b/intl/Makefile.in
@@ -53,6 +53,7 @@ DEFS = -DHAVE_CONFIG_H
 COMPILE = $(CC) -c $(CPPFLAGS) $(CFLAGS) $(DEFS) $(DEFS-$@) $(INCLUDES)
 
 HEADERS = \
+  canonicalize.h \
   gmo.h \
   gettextP.h \
   hash-string.h \
@@ -62,6 +63,7 @@ HEADERS = \
   eval-plural.h \
   localcharset.h \
   relocatable.h \
+  relocatex.h \
   libgnuintl.h
 SOURCES = \
   bindtextdom.c \
@@ -82,6 +84,8 @@ SOURCES = \
   plural-exp.c \
   localcharset.c \
   relocatable.c \
+  relocatex.c \
+  canonicalize.c \
   localename.c \
   log.c \
   osdep.c \
@@ -105,6 +109,8 @@ OBJECTS = \
   plural-exp.o \
   localcharset.o \
   relocatable.o \
+  relocatex.o \
+  canonicalize.o \
   localename.o \
   log.o \
   osdep.o \
@@ -165,7 +171,7 @@ install-info install-dvi install-ps install-pdf install-html:
 $(OBJECTS): config.h libintl.h
 bindtextdom.o dcgettext.o dcigettext.o dcngettext.o dgettext.o \
 dngettext.o finddomain.o gettext.o intl-compat.o loadmsgcat.o \
-localealias.o ngettext.o textdomain.o: gettextP.h gmo.h loadinfo.h
+localealias.o ngettext.o textdomain.o: gettextP.h gmo.h loadinfo.h relocatex.h
 dcigettext.o loadmsgcat.o: hash-string.h
 explodename.o l10nflist.o: loadinfo.h
 dcigettext.o loadmsgcat.o plural.o plural-exp.o: plural-exp.h plural-config.h
diff --git a/intl/bindtextdom.c b/intl/bindtextdom.c
index 6faac5756a3..9b81fc45db0 100644
--- a/intl/bindtextdom.c
+++ b/intl/bindtextdom.c
@@ -23,6 +23,7 @@
 #include <stddef.h>
 #include <stdlib.h>
 #include <string.h>
+#include <unistd.h>
 
 #ifdef _LIBC
 # include <libintl.h>
@@ -91,6 +92,12 @@ static void set_binding_values PARAMS ((const char *domainname,
 					const char **dirnamep,
 					const char **codesetp));
 
+#if ENABLE_RELOCATABLE
+# include "relocatex.h"
+#else
+# define relocatex(installdir, pathname) (pathname)
+#endif
+
 /* Specifies the directory name *DIRNAMEP and the output codeset *CODESETP
    to be used for the DOMAINNAME message catalog.
    If *DIRNAMEP or *CODESETP is NULL, the corresponding attribute is not
@@ -352,8 +359,23 @@ BINDTEXTDOMAIN (domainname, dirname)
      const char *domainname;
      const char *dirname;
 {
+/*
   set_binding_values (domainname, &dirname, NULL);
   return (char *) dirname;
+*/
+  if (!access (dirname, R_OK)) {
+	  set_binding_values (domainname, &dirname, NULL);
+	  return (char *) dirname;
+  } else {
+	  char *locale_dirname, *installdir = strdup (dirname), *s;
+	  if ((s = strrchr (installdir, '/'))) *s = '\0';
+	  if ((s = strrchr (installdir, '/'))) *s = '\0';
+	  locale_dirname = relocatex (installdir, dirname);
+	  set_binding_values (domainname, (const char **) &locale_dirname, NULL);
+	  if (installdir)
+	  	free (installdir);
+	  return (char *) locale_dirname;
+  }	  
 }
 
 /* Specify the character encoding in which the messages from the
diff --git a/intl/canonicalize.c b/intl/canonicalize.c
new file mode 100644
index 00000000000..5217f304540
--- /dev/null
+++ b/intl/canonicalize.c
@@ -0,0 +1,343 @@
+/* Return the canonical absolute name of a given file.
+   Copyright (C) 1996, 1997, 1998, 1999, 2000 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, write to the Free
+   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
+   02111-1307 USA.  */
+
+#include <stdlib.h>
+#include <string.h>
+#include <unistd.h>
+#include <limits.h>
+#include <sys/param.h>
+#include <sys/stat.h>
+#include <errno.h>
+#include <stddef.h>
+#include <malloc.h>
+#ifdef __WIN32__
+# include <stdio.h>
+# include <windows.h>
+//# include <gw32.h>
+#endif /* __WIN32__ */
+#include "canonicalize.h"
+
+#ifndef MAXSYMLINKS
+# define MAXSYMLINKS 20
+#endif
+
+#ifndef __set_errno
+# define __set_errno(Val) errno = (Val)
+#endif
+
+#  ifdef VMS
+    /* We want the directory in Unix syntax, not in VMS syntax.  */
+#   define __getcwd(buf, max) getcwd (buf, max, 0)
+#  else
+#   define __getcwd getcwd
+#  endif
+
+#define weak_alias(local, symbol)
+
+#if defined _WIN32 || defined __WIN32__ || defined __CYGWIN__ || defined __EMX__ || defined __DJGPP__
+  /* Win32, Cygwin, OS/2, DOS */
+# define ISDIRSEP(C) ((C) == '/' || (C) == '\\')
+#else
+  /* Unix */
+# define ISDIRSEP(C) ((C) == '/')
+#endif
+
+#ifdef __WIN32__
+char *win2unixpath (char *FileName)
+{
+	char *s = FileName;
+	while (*s) {
+		if (*s == '\\')
+			*s = '/';
+		*s++;
+	}
+	return FileName;
+}
+#endif
+
+/* Return the canonical absolute name of file NAME.  A canonical name
+   does not contain any `.', `..' components nor any repeated path
+   separators ('/') or symlinks.  All path components must exist.  If
+   RESOLVED is null, the result is malloc'd; otherwise, if the
+   canonical name is PATH_MAX chars or more, returns null with `errno'
+   set to ENAMETOOLONG; if the name fits in fewer than PATH_MAX chars,
+   returns the name in RESOLVED.  If the name cannot be resolved and
+   RESOLVED is non-NULL, it contains the path of the first component
+   that cannot be resolved.  If the path can be resolved, RESOLVED
+   holds the same value as the value returned.
+   RESOLVED must be at least PATH_MAX long */
+
+static char *
+canonicalize (const char *name, char *resolved)
+{
+  char *rpath, *dest, *extra_buf = NULL;
+  const char *start, *end, *rpath_limit;
+  long int path_max;
+  int num_links = 0, old_errno;
+
+  if (name == NULL)
+    {
+      /* As per Single Unix Specification V2 we must return an error if
+	 either parameter is a null pointer.  We extend this to allow
+	 the RESOLVED parameter to be NULL in case the we are expected to
+	 allocate the room for the return value.  */
+      __set_errno (EINVAL);
+      return NULL;
+    }
+
+  if (name[0] == '\0')
+    {
+      /* As per Single Unix Specification V2 we must return an error if
+	 the name argument points to an empty string.  */
+      __set_errno (ENOENT);
+      return NULL;
+    }
+#ifdef __WIN32__
+	{
+	char *lpFilePart;
+	int len;
+//  fprintf(stderr, "name: %s\n", name);
+	rpath = resolved ? __builtin_alloca (MAX_PATH) : malloc (MAX_PATH);
+//	unix2winpath (name);
+//  fprintf(stderr, "name: %s\n", name);
+len = GetFullPathName(name, MAX_PATH, rpath, &lpFilePart);
+/* GetFullPathName returns bogus paths for *nix-style paths, like
+ * /foo/bar - it just prepends current drive to them. Keep them
+ * intact (they need to be for relocation to work!).
+ */
+if (name[0] == '/') {
+  strncpy (rpath, name, MAX_PATH - 1);
+  rpath[MAX_PATH - 1] = '\0';
+  len = strlen (rpath);
+}
+//  fprintf(stderr, "rpath: %s\n", rpath);
+	if (len == 0) {
+		//set_werrno;
+		return NULL;
+	}
+	if (len > MAX_PATH)	{
+		if (resolved)
+			__set_errno(ENAMETOOLONG);
+		else {
+			rpath = realloc(rpath, len + 2);
+			GetFullPathName(name, len, rpath, &lpFilePart);
+//  fprintf(stderr, "rpath: %s\n", rpath);
+		}
+	}
+//	if ( ISDIRSEP(name[strlen(name)]) && !ISDIRSEP(rpath[len]) ) {
+//		rpath[len] = '\\';
+//		rpath[len + 1] = 0;
+//	}
+	old_errno = errno;
+	//if (!access (rpath, D_OK) && !ISDIRSEP(rpath[len - 1]) ){
+	if (!access (rpath, R_OK) && !ISDIRSEP(rpath[len - 1]) ){
+		rpath[len] = '\\';
+		rpath[len + 1] = 0;
+	}
+	errno = old_errno;
+	win2unixpath (rpath);
+//  fprintf(stderr, "rpath: %s\n", rpath);
+	return resolved ? strcpy(resolved, rpath) : rpath ;
+	}
+#else /* __WIN32__ */
+
+#ifdef PATH_MAX
+  path_max = PATH_MAX;
+#else
+  path_max = pathconf (name, _PC_PATH_MAX);
+  if (path_max <= 0)
+    path_max = 1024;
+#endif
+
+  rpath = resolved ? __builtin_alloca (path_max) : malloc (path_max);
+  rpath_limit = rpath + path_max;
+
+  if (name[0] != '/')
+    {
+      if (!__getcwd (rpath, path_max))
+	{
+	  rpath[0] = '\0';
+	  goto error;
+	}
+      dest = strchr (rpath, '\0');
+    }
+  else
+    {
+      rpath[0] = '/';
+      dest = rpath + 1;
+    }
+
+  for (start = end = name; *start; start = end)
+    {
+#ifdef _LIBC
+      struct stat64 st;
+#else
+      struct stat st;
+#endif
+      int n;
+
+      /* Skip sequence of multiple path-separators.  */
+      while (*start == '/')
+	++start;
+
+      /* Find end of path component.  */
+      for (end = start; *end && *end != '/'; ++end)
+	/* Nothing.  */;
+
+      if (end - start == 0)
+	break;
+      else if (end - start == 1 && start[0] == '.')
+	/* nothing */;
+      else if (end - start == 2 && start[0] == '.' && start[1] == '.')
+	{
+	  /* Back up to previous component, ignore if at root already.  */
+	  if (dest > rpath + 1)
+	    while ((--dest)[-1] != '/');
+	}
+      else
+	{
+	  size_t new_size;
+
+	  if (dest[-1] != '/')
+	    *dest++ = '/';
+
+	  if (dest + (end - start) >= rpath_limit)
+	    {
+	      ptrdiff_t dest_offset = dest - rpath;
+
+	      if (resolved)
+		{
+		  __set_errno (ENAMETOOLONG);
+		  if (dest > rpath + 1)
+		    dest--;
+		  *dest = '\0';
+		  goto error;
+		}
+	      new_size = rpath_limit - rpath;
+	      if (end - start + 1 > path_max)
+		new_size += end - start + 1;
+	      else
+		new_size += path_max;
+	      rpath = realloc (rpath, new_size);
+	      rpath_limit = rpath + new_size;
+	      if (rpath == NULL)
+		return NULL;
+
+	      dest = rpath + dest_offset;
+	    }
+
+#ifdef _LIBC
+	  dest = __mempcpy (dest, start, end - start);
+#else
+	  memcpy (dest, start, end - start);
+	  dest += end - start;
+#endif
+	  *dest = '\0';
+
+#ifdef _LIBC
+	  if (__lxstat64 (_STAT_VER, rpath, &st) < 0)
+#else
+	  if (lstat (rpath, &st) < 0)
+#endif
+	    goto error;
+
+#if HAVE_READLINK
+	  if (S_ISLNK (st.st_mode))
+	    {
+	      char *buf = __builtin_alloca (path_max);
+	      size_t len;
+
+	      if (++num_links > MAXSYMLINKS)
+		{
+		  __set_errno (ELOOP);
+		  goto error;
+		}
+
+	      n = __readlink (rpath, buf, path_max);
+	      if (n < 0)
+		goto error;
+	      buf[n] = '\0';
+
+	      if (!extra_buf)
+		extra_buf = __builtin_alloca (path_max);
+
+	      len = strlen (end);
+	      if ((long int) (n + len) >= path_max)
+		{
+		  __set_errno (ENAMETOOLONG);
+		  goto error;
+		}
+
+	      /* Careful here, end may be a pointer into extra_buf... */
+	      memmove (&extra_buf[n], end, len + 1);
+	      name = end = memcpy (extra_buf, buf, n);
+
+	      if (buf[0] == '/')
+		dest = rpath + 1;	/* It's an absolute symlink */
+	      else
+		/* Back up to previous component, ignore if at root already: */
+		if (dest > rpath + 1)
+		  while ((--dest)[-1] != '/');
+	    }
+#endif
+	}
+    }
+  if (dest > rpath + 1 && dest[-1] == '/')
+    --dest;
+  *dest = '\0';
+
+  return resolved ? memcpy (resolved, rpath, dest - rpath + 1) : rpath;
+
+error:
+  if (resolved)
+    strcpy (resolved, rpath);
+  else
+    free (rpath);
+  return NULL;
+
+#endif /* __WIN32__ */
+}
+
+
+char *
+__realpath (const char *name, char *resolved)
+{
+  if (resolved == NULL)
+    {
+      __set_errno (EINVAL);
+      return NULL;
+    }
+
+  return canonicalize (name, resolved);
+}
+weak_alias (__realpath, realpath)
+
+
+char *
+__canonicalize_file_name (const char *name)
+{
+  return canonicalize (name, NULL);
+}
+weak_alias (__canonicalize_file_name, canonicalize_file_name)
+
+char *
+canonicalize_file_name (const char *name)
+{
+  return canonicalize (name, NULL);
+}
diff --git a/intl/canonicalize.h b/intl/canonicalize.h
new file mode 100644
index 00000000000..ea707bf1bdf
--- /dev/null
+++ b/intl/canonicalize.h
@@ -0,0 +1,18 @@
+#ifndef __CANONICALIZE_H__
+#define __CANONICALIZE_H__ 1
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+char *canonicalize_file_name (const char *name);
+
+#ifdef __WIN32__
+char *win2unixpath (char *path);
+#endif
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif /* __CANONICALIZE_H__ */
diff --git a/intl/configure b/intl/configure
index 1e100395369..6144c2b39b3 100755
--- a/intl/configure
+++ b/intl/configure
@@ -5042,7 +5042,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by GCC" >&5
 $as_echo_n "checking for ld used by GCC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
diff --git a/intl/relocatex.c b/intl/relocatex.c
new file mode 100644
index 00000000000..a2b7438fb43
--- /dev/null
+++ b/intl/relocatex.c
@@ -0,0 +1,284 @@
+/* Provide relocatable packages.
+   Copyright (C) 2003 Free Software Foundation, Inc.
+   Written by Bruno Haible <bruno@clisp.org>, 2003.
+
+   This program is free software; you can redistribute it and/or modify it
+   under the terms of the GNU Library General Public License as published
+   by the Free Software Foundation; either version 2, or (at your option)
+   any later version.
+
+   This program is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Library General Public License for more details.
+
+   You should have received a copy of the GNU Library General Public
+   License along with this program; if not, write to the Free Software
+   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307,
+   USA.  */
+
+
+/* Specification.  */
+#include <errno.h>
+#define _GNU_SOURCE
+#include <stdlib.h>
+#include <string.h>
+#include <stdio.h>
+#include <unistd.h>
+/* #include <path.h> */
+#include "relocatex.h"
+#include "canonicalize.h"
+/* #include <gw32.h> */
+
+
+#if defined _WIN32 || defined __WIN32__
+# define WIN32_LEAN_AND_MEAN
+# include <windows.h>
+//# define __GW32__
+//# include <winx/errnox.h>
+#endif
+#define set_werrno
+
+#if defined _WIN32 || defined __WIN32__ || defined __CYGWIN__ || defined __EMX__ || defined __DJGPP__
+  /* Win32, Cygwin, OS/2, DOS */
+# define ISDIRSEP(C) ((C) == '/' || (C) == '\\')
+#else
+  /* Unix */
+# define ISDIRSEP(C) ((C) == '/')
+#endif
+
+/* Original installation prefix.  */
+static char *orig_prefix = NULL;
+static size_t orig_prefix_len = 0;
+/* Current installation prefix.  */
+static char *curr_prefix = NULL;
+static size_t curr_prefix_len = 0;
+/* These prefixes do not end in a slash.  Anything that will be concatenated
+   to them must start with a slash.  */
+
+
+int win2posixpath (const char *winpath, char *posixpath)
+{
+	strcpy (posixpath, winpath);
+	win2unixpath (posixpath);
+	return 0;
+}
+
+
+/* Sets the original and the current installation prefix of this module.
+   Relocation simply replaces a pathname starting with the original prefix
+   by the corresponding pathname with the current prefix instead.  Both
+   prefixes should be directory names without trailing slash (i.e. use ""
+   instead of "/").  */
+static char *
+set_orig_prefix (const char *orig_prefix_arg)
+{
+      char *memory;
+//	  printf ("orig_prefix_arg: %s\n", orig_prefix_arg);
+	  if (!orig_prefix_arg) {
+		orig_prefix = NULL;
+		orig_prefix_len = 0;
+		return NULL;
+	  }
+	  if (orig_prefix)
+		  free (orig_prefix);
+
+	  memory = canonicalize_file_name (orig_prefix_arg);
+//	  printf ("memory: %s\n", memory);
+//	  memory = (char *) malloc (orig_prefix_len + 1);
+      if (!memory) {
+	  	set_werrno;
+		orig_prefix = NULL;
+		orig_prefix_len = 0;
+		return NULL;
+      }
+	  win2unixpath (memory);
+//	  win2posixpath (orig_prefix_arg, memory);
+	  orig_prefix = memory;
+	  orig_prefix_len = strlen (orig_prefix);
+//	  printf ("orig_prefix: %s\n", orig_prefix);
+	  if (ISDIRSEP (orig_prefix[orig_prefix_len-1])) {
+	  	orig_prefix[orig_prefix_len-1] = '\0';
+	  	orig_prefix_len--;
+	  }
+//	  printf ("orig_prefix: %s\n", orig_prefix);
+//	  printf ("orig_prefix_len: %d\n", orig_prefix_len);
+	  return orig_prefix;
+}
+
+#if defined __WIN32__
+static char *
+set_current_prefix (const char *ModuleName)
+{
+	LPTSTR curr_prefix_arg, q, lpFilePart;
+	DWORD len;
+	int nDIRSEP = 0;
+
+	if (curr_prefix)
+		free (curr_prefix);
+	curr_prefix_arg = malloc (MAX_PATH * sizeof (TCHAR));
+	if (!curr_prefix_arg) {
+		set_werrno;
+		curr_prefix = NULL;
+		curr_prefix_len = 0;
+		return NULL;
+	}		
+	if (ModuleName) {
+//		printf ("ModuleName:  %s\n", ModuleName);
+		len = SearchPath (NULL, ModuleName, ".DLL", MAX_PATH, curr_prefix_arg, &lpFilePart);
+		if (len) {
+//			printf ("ModulePath:  %s\n", curr_prefix_arg);
+//			printf ("FilePart:    %s\n", lpFilePart);
+		}
+	}
+	if (!ModuleName || !len) {
+		len = GetModuleFileName (NULL, curr_prefix_arg, MAX_PATH);
+		if (!len) {
+			set_werrno;
+			curr_prefix = NULL;
+			curr_prefix_len = 0;
+			return NULL;
+		}
+	}
+//		strncpy (curr_prefix_arg, ModuleName, MAX_PATH);
+//	  printf ("curr_prefix_arg: %s\n", curr_prefix_arg);
+	win2posixpath (curr_prefix_arg, curr_prefix_arg);
+	curr_prefix = curr_prefix_arg;
+	q = curr_prefix_arg + len - 1;
+	/* strip name of executable and its directory */
+	while (!ISDIRSEP (*q) && (q > curr_prefix_arg) && nDIRSEP < 2) {
+		q--;
+		if (ISDIRSEP (*q)) {
+			*q = '\0';
+			nDIRSEP++;
+		}
+	}
+	curr_prefix_len = q - curr_prefix_arg; 
+//	printf ("curr_prefix: %s\n", curr_prefix);
+//	printf ("curr_prefix_len: %d\n", curr_prefix_len);
+	return curr_prefix;
+}
+
+char *getshortpath (const char *longpath)
+{
+	char *shortpath = NULL;
+	DWORD len, res;
+	
+//	printf ("longpath: %s\n", longpath);
+	len = GetShortPathName(longpath, shortpath, 0);
+//	printf ("len: %ld\n", len);
+	if (!len) {
+//		WinErr ("getshortpath: len = 0");
+		set_werrno;
+		return (char *) longpath;
+	}
+	shortpath = (char *) malloc (len + 1);
+	if (!shortpath) {
+//		WinErr ("getshortpath: malloc");
+		set_werrno;
+		return (char *) longpath;
+	}
+	res = GetShortPathName(longpath, shortpath, len);
+//	printf ("res: %ld\n", res);
+	if (!res) {
+//		WinErr ("getshortpath: res = 0");
+		free (shortpath);
+		set_werrno;
+		return (char *) longpath;
+	}
+//	printf ("shortpath: %s\n", shortpath);
+	return shortpath;
+}
+
+char *relocaten (const char *ModuleName, const char *path)
+{
+	char *relative_path, *relocated_path, *relocated_short_path;
+	int relative_path_len;
+	
+	if (!curr_prefix)
+		set_current_prefix (ModuleName);
+//	printf ("path:                 %s\n", path);
+//	printf ("orig_prefix:          %s\n", orig_prefix);
+//	printf ("curr_prefix:          %s\n", curr_prefix);
+//	if (strncmp (orig_prefix, path, orig_prefix_len))
+//	if (strcmp (orig_prefix, path))
+//		return (char *) path;
+	relative_path = (char *) path + orig_prefix_len;
+//	printf ("relative_path:        %s\n", relative_path);
+	relative_path_len = strlen (relative_path);
+	relocated_path = malloc (curr_prefix_len + relative_path_len + 1);
+	strcpy (relocated_path, curr_prefix);
+	strcat (relocated_path, relative_path);
+//	printf ("relocated_path:       %s\n", relocated_path);
+	relocated_short_path = getshortpath (relocated_path);
+//	printf ("relocated_short_path: %s\n", relocated_short_path);
+	if (relocated_short_path) {
+		if (relocated_short_path != relocated_path)
+			free (relocated_path);
+		return relocated_short_path;
+	} else
+		return relocated_path;
+}
+
+#else // __WIN32__
+char *relocaten (const char *ModuleName, const char *path)
+{
+	// dummy function for Unix/Linux
+	return (char *)path;
+}
+#endif
+
+char *relocaten2 (const char *ModuleName, const char *installdir, const char *path)
+{
+	set_orig_prefix (installdir);
+	return relocaten (ModuleName, path);
+}
+
+char *relocatenx (const char *ModuleName, const char *installdir, const char *path)
+{
+	char *p;
+
+	set_orig_prefix (installdir);
+	if (access (path, R_OK))
+		p = relocaten (ModuleName, path);
+	else
+		p = (char *) path;
+//	printf ("relocatenx: %s\n", p);
+	return p;
+}
+
+char *relocate2 (const char *installdir, const char *path)
+{
+	return relocaten2 (NULL, installdir, path);
+}
+
+char *relocatex (const char *installdir, const char *path)
+{
+	return relocatenx (NULL, installdir, path);
+}
+
+char *relocatepx (const char *cprefix, const char *installdir, const char *path)
+{
+	if (curr_prefix)
+		free (curr_prefix);
+	curr_prefix = strdup (cprefix);
+	return relocatex (installdir, path);
+}
+
+static char *get_orig_prefix (void)
+{
+	return orig_prefix;
+}
+
+static char *get_curr_prefix (void)
+{
+	return curr_prefix;
+}
+
+static char *set_curr_prefix (const char *ModuleName)
+{
+	if (curr_prefix)
+		free (curr_prefix);
+	set_current_prefix (ModuleName);
+	return curr_prefix;
+}
diff --git a/intl/relocatex.h b/intl/relocatex.h
new file mode 100644
index 00000000000..5cc7c5174a9
--- /dev/null
+++ b/intl/relocatex.h
@@ -0,0 +1,41 @@
+/* 
+   Copyright (C) 2006 Free Software Foundation, Inc.
+   This file is part of the GnuWin C Library.
+
+   The GnuWin C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   The GnuWin C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GnuWin32 C Library; if not, write to the Free
+   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
+   02111-1307 USA.  */
+
+#ifndef __RELOCATE_H__
+#define __RELOCATE_H__ 1
+
+/* #include <libc-dll.h> */
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+char *relocaten (const char *ModuleName, const char *path);
+char *relocaten2 (const char *ModuleName, const char *installdir, const char *path);
+char *relocatenx (const char *ModuleName, const char *installdir, const char *path);
+char *relocate2 (const char *installdir, const char *path);
+char *relocatex (const char *installdir, const char *path);
+
+#ifdef __cplusplus
+}
+#endif
+
+//#endif /*  __GW32__ */
+
+#endif /* __RELOCATE_H__ */
diff --git a/libatomic/configure b/libatomic/configure
index 5867e69ac14..d312357848f 100755
--- a/libatomic/configure
+++ b/libatomic/configure
@@ -5317,7 +5317,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -9119,7 +9119,7 @@ _LT_EOF
       fi
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # _LT_TAGVAR(hardcode_libdir_flag_spec, ) is actually meaningless,
       # as there is no search path for DLLs.
       hardcode_libdir_flag_spec='-L$libdir'
@@ -9550,7 +9550,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
       export_dynamic_flag_spec=-rdynamic
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # When not using gcc, we currently assume that we are using
       # Microsoft Visual C++.
       # hardcode_libdir_flag_spec is actually meaningless, as there is
@@ -10451,14 +10451,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -10482,7 +10482,7 @@ cygwin* | mingw* | pw32* | cegcc*)
 
       sys_lib_search_path_spec="$sys_lib_search_path_spec /usr/lib/w32api"
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -11108,7 +11108,7 @@ else
     lt_cv_dlopen_self=yes
     ;;
 
-  mingw* | pw32* | cegcc*)
+  mingw* | msys* | pw32* | cegcc*)
     lt_cv_dlopen="LoadLibrary"
     lt_cv_dlopen_libs=
     ;;
@@ -11727,7 +11727,7 @@ CC="$lt_save_CC"
 
 
 case $host in
-  *-cygwin* | *-mingw*)
+  *-cygwin* | *-mingw* | *-msys*)
     # 'host' will be top-level target in the case of a target lib,
     # we must compare to with_cross_host to decide if this is a native
     # or cross-compiler and select where to install dlls appropriately.
@@ -15075,7 +15075,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
diff --git a/libbacktrace/configure b/libbacktrace/configure
index 9b66bf5563a..f6d899d49b4 100755
--- a/libbacktrace/configure
+++ b/libbacktrace/configure
@@ -5714,7 +5714,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -9248,7 +9248,7 @@ _LT_EOF
       fi
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # _LT_TAGVAR(hardcode_libdir_flag_spec, ) is actually meaningless,
       # as there is no search path for DLLs.
       hardcode_libdir_flag_spec='-L$libdir'
@@ -9679,7 +9679,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
       export_dynamic_flag_spec=-rdynamic
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # When not using gcc, we currently assume that we are using
       # Microsoft Visual C++.
       # hardcode_libdir_flag_spec is actually meaningless, as there is
@@ -10580,14 +10580,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -10611,7 +10611,7 @@ cygwin* | mingw* | pw32* | cegcc*)
 
       sys_lib_search_path_spec="$sys_lib_search_path_spec /usr/lib/w32api"
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -11237,7 +11237,7 @@ else
     lt_cv_dlopen_self=yes
     ;;
 
-  mingw* | pw32* | cegcc*)
+  mingw* | msys* | pw32* | cegcc*)
     lt_cv_dlopen="LoadLibrary"
     lt_cv_dlopen_libs=
     ;;
@@ -13342,7 +13342,7 @@ fi
 # Check for the fcntl function.
 if test -n "${with_target_subdir}"; then
    case "${host}" in
-   *-*-mingw*) have_fcntl=no ;;
+   *-*-mingw* | *-*-msys*) have_fcntl=no ;;
    *) have_fcntl=yes ;;
    esac
 else
diff --git a/libbacktrace/configure.ac b/libbacktrace/configure.ac
index 43a33a66b82..e21ad2b0e48 100644
--- a/libbacktrace/configure.ac
+++ b/libbacktrace/configure.ac
@@ -376,7 +376,7 @@ fi
 # Check for the fcntl function.
 if test -n "${with_target_subdir}"; then
    case "${host}" in
-   *-*-mingw*) have_fcntl=no ;;
+   *-*-mingw* | *-*-msys*) have_fcntl=no ;;
    *) have_fcntl=yes ;;
    esac
 else
diff --git a/libcc1/configure b/libcc1/configure
index 021ec265526..acc0daf703c 100755
--- a/libcc1/configure
+++ b/libcc1/configure
@@ -4983,7 +4983,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -8516,7 +8516,7 @@ _LT_EOF
       fi
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # _LT_TAGVAR(hardcode_libdir_flag_spec, ) is actually meaningless,
       # as there is no search path for DLLs.
       hardcode_libdir_flag_spec='-L$libdir'
@@ -8947,7 +8947,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
       export_dynamic_flag_spec=-rdynamic
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # When not using gcc, we currently assume that we are using
       # Microsoft Visual C++.
       # hardcode_libdir_flag_spec is actually meaningless, as there is
@@ -9848,14 +9848,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -9879,7 +9879,7 @@ cygwin* | mingw* | pw32* | cegcc*)
 
       sys_lib_search_path_spec="$sys_lib_search_path_spec /usr/lib/w32api"
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -10505,7 +10505,7 @@ else
     lt_cv_dlopen_self=yes
     ;;
 
-  mingw* | pw32* | cegcc*)
+  mingw* | msys* | pw32* | cegcc*)
     lt_cv_dlopen="LoadLibrary"
     lt_cv_dlopen_libs=
     ;;
@@ -11785,7 +11785,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -12138,7 +12138,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
         esac
         ;;
 
-      cygwin* | mingw* | pw32* | cegcc*)
+      cygwin* | mingw* | msys* | pw32* | cegcc*)
         # _LT_TAGVAR(hardcode_libdir_flag_spec, CXX) is actually meaningless,
         # as there is no search path for DLLs.
         hardcode_libdir_flag_spec_CXX='-L$libdir'
@@ -13911,14 +13911,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -13941,7 +13941,7 @@ cygwin* | mingw* | pw32* | cegcc*)
       soname_spec='`echo ${libname} | sed -e 's/^lib/cyg/'``echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
 
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
diff --git a/libcody/cody.hh b/libcody/cody.hh
index 789ce9e70b7..8f5b30ab5f1 100644
--- a/libcody/cody.hh
+++ b/libcody/cody.hh
@@ -9,7 +9,7 @@
 // generally only good for requesting no networking
 #if !defined (CODY_NETWORKING)
 // Have a known-good list of networking systems
-#if defined (__unix__) || defined (__MACH__)
+#if (defined (__unix__) || defined (__MACH__)) && !defined(__MINT__)
 #define CODY_NETWORKING 1
 #else
 #define CODY_NETWORKING 0
@@ -792,10 +792,12 @@ int OpenLocal (char const **, char const *name);
 int ListenLocal (char const **, char const *name, unsigned backlog = 0);
 
 // ipv6 socket
+#ifdef AF_INET6
 int OpenInet6 (char const **e, char const *name, int port);
 int ListenInet6 (char const **, char const *name, int port,
 		 unsigned backlog = 0);
 #endif
+#endif
 
 // FIXME: Mapping file utilities?
 
diff --git a/libcody/netclient.cc b/libcody/netclient.cc
index 7f81dd91810..3871bf81ff7 100644
--- a/libcody/netclient.cc
+++ b/libcody/netclient.cc
@@ -69,6 +69,7 @@ int OpenLocal (char const **e, char const *name)
   return OpenSocket (e, (sockaddr *)&addr, sizeof (addr));
 }
 
+#ifdef AF_INET6
 int OpenInet6 (char const **e, char const *name, int port)
 {
   addrinfo *addrs = nullptr;
@@ -135,6 +136,7 @@ int OpenInet6 (char const **e, char const *name, int port)
 
   return fd;
 }
+#endif
 
 }
 
diff --git a/libcody/netserver.cc b/libcody/netserver.cc
index 30202c5106a..26bb6e1a141 100644
--- a/libcody/netserver.cc
+++ b/libcody/netserver.cc
@@ -76,6 +76,7 @@ int ListenLocal (char const **e, char const *name, unsigned backlog)
   return ListenSocket (e, (sockaddr *)&addr, sizeof (addr), backlog);
 }
 
+#ifdef AF_INET6
 int ListenInet6 (char const **e, char const *name, int port, unsigned backlog)
 {
   addrinfo *addrs = nullptr;
@@ -149,6 +150,7 @@ int ListenInet6 (char const **e, char const *name, int port, unsigned backlog)
 
   return fd;
 }
+#endif
 
 }
 #endif
diff --git a/libcody/resolver.cc b/libcody/resolver.cc
index 034fd63b9a8..480d9189fba 100644
--- a/libcody/resolver.cc
+++ b/libcody/resolver.cc
@@ -21,6 +21,10 @@
 #else
 #define HAVE_FSTATAT 0
 #endif
+#ifdef __MINT__
+#undef HAVE_FSTATAT
+#define HAVE_FSTATAT 0
+#endif
 
 // Resolver code
 
diff --git a/libcpp/configure b/libcpp/configure
index 7e28606f605..da66af013d5 100755
--- a/libcpp/configure
+++ b/libcpp/configure
@@ -6689,7 +6689,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by GCC" >&5
 $as_echo_n "checking for ld used by GCC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
diff --git a/libcpp/files.c b/libcpp/files.c
index 6e20fc5887f..04461712211 100644
--- a/libcpp/files.c
+++ b/libcpp/files.c
@@ -30,6 +30,13 @@ along with this program; see the file COPYING3.  If not see
 #include "md5.h"
 #include <dirent.h>
 
+/* Needed for stat_st_mode_symlink below */
+#if defined(_WIN32)
+#  include <windows.h>
+#  define S_IFLNK 0xF000
+#  define S_ISLNK(m) (((m) & S_IFMT) == S_IFLNK)
+#endif
+
 /* Variable length record files on VMS will have a stat size that includes
    record control characters that won't be included in the read size.  */
 #ifdef VMS
@@ -200,6 +207,49 @@ static int pchf_save_compare (const void *e1, const void *e2);
 static int pchf_compare (const void *d_p, const void *e_p);
 static bool check_file_against_entries (cpp_reader *, _cpp_file *, bool);
 
+#if defined(_WIN32)
+
+static int stat_st_mode_symlink (char const* path, struct stat* buf)
+{
+  WIN32_FILE_ATTRIBUTE_DATA attr;
+  memset(buf,0,sizeof(*buf));
+  int err = GetFileAttributesExA (path, GetFileExInfoStandard, &attr) ? 0 : 1;
+  if (!err)
+    {
+      WIN32_FIND_DATAA finddata;
+      HANDLE h = FindFirstFileA (path, &finddata);
+      if (h != INVALID_HANDLE_VALUE)
+        {
+          FindClose (h);
+          if ((finddata.dwFileAttributes & FILE_ATTRIBUTE_REPARSE_POINT) &&
+              (finddata.dwReserved0 == IO_REPARSE_TAG_SYMLINK))
+              buf->st_mode = S_IFLNK;
+          else if (finddata.dwFileAttributes & FILE_ATTRIBUTE_DIRECTORY)
+              buf->st_mode = S_IFDIR;
+          else if (finddata.dwFileAttributes & FILE_ATTRIBUTE_ARCHIVE)
+              buf->st_mode = S_IFDIR;
+          else
+              buf->st_mode = S_IFREG;
+          buf->st_mode |= S_IREAD;
+          if (!(finddata.dwFileAttributes & FILE_ATTRIBUTE_READONLY))
+              buf->st_mode |= S_IWRITE;
+        }
+      else
+        {
+          buf->st_mode = S_IFDIR;
+        }
+      return 0;
+    }
+  return -1;
+}
+
+#else
+
+#define stat_st_mode_symlink(_name, _buf) stat ((_name), (_buf))
+
+#endif
+
+
 /* Given a filename in FILE->PATH, with the empty string interpreted
    as <stdin>, open it.
 
@@ -229,6 +279,43 @@ open_file (_cpp_file *file)
     }
   else
     file->fd = open (file->path, O_RDONLY | O_NOCTTY | O_BINARY, 0666);
+#if defined(_WIN32) || defined(__CYGWIN__)
+  /* Windows and Posix differ in the face of paths of the form:
+     nonexistantdir/.. in that Posix will return ENOENT whereas
+     Windows won't care that we stepped into a non-existant dir
+     Only do these slow checks if ".." appears in file->path.
+     Cygwin also suffers from the same problem (but doesn't need
+     a new stat function):
+     http://cygwin.com/ml/cygwin/2013-05/msg00222.html
+  */
+  if (file->fd > 0)
+    {
+      char *filepath = xstrdup(file->path);
+      char* dirsep = filepath;
+      while ( (dirsep = strchr (dirsep, '\\')) != NULL)
+        *dirsep = '/';
+      if (strstr(file->path, "/../"))
+	{
+	  dirsep = filepath;
+	  char dirsepc;
+	  /* Check each directory in the chain. */
+	  while ( (dirsep = strpbrk (dirsep, "\\/")) != NULL)
+	    {
+	      dirsepc = *(++dirsep);
+	      *dirsep = '\0';
+	      if (stat_st_mode_symlink (filepath, &file->st) == -1)
+	        {
+	          free(filepath);
+	          close (file->fd);
+	          file->fd = -1;
+	          return false;
+	        }
+	      *dirsep++ = dirsepc;
+	    }
+	}
+	free(filepath);
+    }
+#endif
 
   if (file->fd != -1)
     {
diff --git a/libcpp/macro.c b/libcpp/macro.c
index 364d5adc651..43c598a5f31 100644
--- a/libcpp/macro.c
+++ b/libcpp/macro.c
@@ -3435,7 +3435,8 @@ parse_params (cpp_reader *pfile, unsigned *n_ptr, bool *varadic_ptr)
 		   ? N_("anonymous variadic macros were introduced in C++11")
 		   : N_("anonymous variadic macros were introduced in C99"));
 	      else if (CPP_OPTION (pfile, cpp_warn_c90_c99_compat) > 0
-		       && ! CPP_OPTION (pfile, cplusplus))
+		       && ! CPP_OPTION (pfile, cplusplus)
+		  && CPP_OPTION (pfile, warn_variadic_macros))
 		cpp_error (pfile, CPP_DL_WARNING,
 			   "anonymous variadic macros were introduced in C99");
 	    }
diff --git a/libdecnumber/decNumberLocal.h b/libdecnumber/decNumberLocal.h
index aec1e9c5c9f..12ad722769f 100644
--- a/libdecnumber/decNumberLocal.h
+++ b/libdecnumber/decNumberLocal.h
@@ -187,7 +187,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
   #if (DECNUMMAXE != DEC_MAX_EMAX)
     #error Maximum exponent mismatch
   #endif
-  #if (DECNUMMINE != DEC_MIN_EMIN)
+  #if !(DECNUMMINE == DEC_MIN_EMIN) /* gcc 2.95.3 has bug in '!=' operator for negative constants */
     #error Minimum exponent mismatch
   #endif
 
diff --git a/libffi/acinclude.m4 b/libffi/acinclude.m4
index b09be64f928..a07e63b9488 100644
--- a/libffi/acinclude.m4
+++ b/libffi/acinclude.m4
@@ -37,7 +37,7 @@ else
    # Systems known to be in this category are Windows (all variants),
    # VMS, and Darwin.
    case "$host_os" in
-     vms* | cygwin* | pe | mingw* | darwin* | ultrix* | hpux10* | hpux11.00)
+     vms* | cygwin* | pe | mingw* | msys* | darwin* | ultrix* | hpux10* | hpux11.00)
 	ac_cv_func_mmap_dev_zero=no ;;
      *)
 	ac_cv_func_mmap_dev_zero=yes;;
@@ -69,7 +69,7 @@ else
    # above for use of /dev/zero.
    # Systems known to be in this category are Windows, VMS, and SCO Unix.
    case "$host_os" in
-     vms* | cygwin* | pe | mingw* | sco* | udk* )
+     vms* | cygwin* | pe | mingw* | mwys* | sco* | udk* )
 	ac_cv_func_mmap_anon=no ;;
      *)
 	ac_cv_func_mmap_anon=yes;;
diff --git a/libffi/configure b/libffi/configure
index 8d52ec4f495..13bfc4e62d4 100755
--- a/libffi/configure
+++ b/libffi/configure
@@ -5489,7 +5489,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -5841,6 +5841,12 @@ else
     lt_cv_sys_max_cmd_len=8192;
     ;;
 
+  mint*)
+    # On MiNT this test can take minutes to run, and I'm not sure it's
+    # healthy for this platform. Let's restrict it to 8192.
+    lt_cv_sys_max_cmd_len=8192;
+    ;;
+
   amigaos*)
     # On AmigaOS with pdksh, this test takes hours, literally.
     # So we just punt and use a minimum line length of 8192.
@@ -9292,7 +9298,7 @@ _LT_EOF
       fi
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # _LT_TAGVAR(hardcode_libdir_flag_spec, ) is actually meaningless,
       # as there is no search path for DLLs.
       hardcode_libdir_flag_spec='-L$libdir'
@@ -9723,7 +9729,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
       export_dynamic_flag_spec=-rdynamic
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # When not using gcc, we currently assume that we are using
       # Microsoft Visual C++.
       # hardcode_libdir_flag_spec is actually meaningless, as there is
@@ -10624,14 +10630,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -10655,7 +10661,7 @@ cygwin* | mingw* | pw32* | cegcc*)
 
       sys_lib_search_path_spec="$sys_lib_search_path_spec /usr/lib/w32api"
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -11281,7 +11287,7 @@ else
     lt_cv_dlopen_self=yes
     ;;
 
-  mingw* | pw32* | cegcc*)
+  mingw* | msys* | pw32* | cegcc*)
     lt_cv_dlopen="LoadLibrary"
     lt_cv_dlopen_libs=
     ;;
@@ -12155,7 +12161,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -12508,7 +12514,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
         esac
         ;;
 
-      cygwin* | mingw* | pw32* | cegcc*)
+      cygwin* | mingw* | msys* | pw32* | cegcc*)
         # _LT_TAGVAR(hardcode_libdir_flag_spec, CXX) is actually meaningless,
         # as there is no search path for DLLs.
         hardcode_libdir_flag_spec_CXX='-L$libdir'
@@ -14281,14 +14287,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -14311,7 +14317,7 @@ cygwin* | mingw* | pw32* | cegcc*)
       soname_spec='`echo ${libname} | sed -e 's/^lib/cyg/'``echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
 
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -15063,7 +15069,7 @@ else
    # Systems known to be in this category are Windows (all variants),
    # VMS, and Darwin.
    case "$host_os" in
-     vms* | cygwin* | pe | mingw* | darwin* | ultrix* | hpux10* | hpux11.00)
+     vms* | cygwin* | pe | mingw* | msys* | darwin* | ultrix* | hpux10* | hpux11.00)
 	ac_cv_func_mmap_dev_zero=no ;;
      *)
 	ac_cv_func_mmap_dev_zero=yes;;
@@ -15120,7 +15126,7 @@ else
    # above for use of /dev/zero.
    # Systems known to be in this category are Windows, VMS, and SCO Unix.
    case "$host_os" in
-     vms* | cygwin* | pe | mingw* | sco* | udk* )
+     vms* | cygwin* | pe | mingw* | msys* | sco* | udk* )
 	ac_cv_func_mmap_anon=no ;;
      *)
 	ac_cv_func_mmap_anon=yes;;
@@ -16239,7 +16245,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
diff --git a/libffi/configure.host b/libffi/configure.host
index 786b32c5bb0..94ae7516a90 100644
--- a/libffi/configure.host
+++ b/libffi/configure.host
@@ -65,7 +65,7 @@ case "${host}" in
 	;;
 
   i?86-win32* | i?86-*-cygwin* | i?86-*-mingw* | i?86-*-os2* | i?86-*-interix* \
-  | x86_64-*-cygwin* | x86_64-*-mingw*)
+  | x86_64-*-cygwin* | x86_64-*-mingw* | *-*-msys*)
 	TARGETDIR=x86
 	if test $ac_cv_sizeof_size_t = 4; then
 	  TARGET=X86_WIN32
diff --git a/libgcc/Makefile.in b/libgcc/Makefile.in
index 2c8be561eb5..1a1ffd83d62 100644
--- a/libgcc/Makefile.in
+++ b/libgcc/Makefile.in
@@ -498,7 +498,7 @@ endif
 # Build lib2funcs.  For the static library also include LIB2FUNCS_ST.
 lib2funcs-o = $(patsubst %,%$(objext),$(lib2funcs) $(LIB2FUNCS_ST))
 $(lib2funcs-o): %$(objext): $(srcdir)/libgcc2.c
-	$(gcc_compile) -DL$* -c $< $(vis_hide)
+	$(gcc_compile) -fcommon -DL$* -c $< $(vis_hide)
 libgcc-objects += $(lib2funcs-o)
 
 ifeq ($(enable_shared),yes)
diff --git a/libgcc/config.host b/libgcc/config.host
index 45f8e19ada4..9bbbc0fb932 100644
--- a/libgcc/config.host
+++ b/libgcc/config.host
@@ -986,6 +986,13 @@ m68k-*-linux*)			# Motorola m68k's running GNU/Linux
 	fi
 	md_unwind_header=m68k/linux-unwind.h
 	;;
+m68k-*-mintelf*)
+	tmake_file="$tmake_file m68k/t-floatlib m68k/t-mint"
+	extra_parts="$extra_parts crtbegin.o crtend.o"
+	;;
+m68k-*-mint*)
+	tmake_file="$tmake_file m68k/t-floatlib m68k/t-mint"
+	;;
 m68k-*-rtems*)
 	tmake_file="$tmake_file m68k/t-floatlib"
 	extra_parts="$extra_parts crti.o crtn.o"
diff --git a/libgcc/config/m68k/addxf.S b/libgcc/config/m68k/addxf.S
new file mode 100644
index 00000000000..3cf97b1039f
--- /dev/null
+++ b/libgcc/config/m68k/addxf.S
@@ -0,0 +1,648 @@
+|=============================================================================
+|                              __addxf3
+|=============================================================================
+
+| long double __addxf3(long double, long double);
+	FUNC(__addxf3)
+SYM (__addxf3):
+	link	a6,IMM (-40)	| everything will be done in registers
+	moveml	d2-d7/a2-a5,sp@	| save all data registers and a2-a5 (but d0-d1)
+	moveml	a6@(8),d0-d1/a4	| get first operand into d0-d1/a4
+	clrw	d0
+	moveml	a6@(20),d2-d3/a5 | and second operand into d2-d3/a5
+	clrw	d2
+
+	movel	d0,d7		| get d0's sign bit in d7
+	bclr	IMM(31),d0
+	movel	a4,d4
+	orl		d0,d4
+	orl		d1,d4
+	beq	Laddxf$b	| if zero return second operand
+
+	movel	d2,d6		| save sign in d6
+	bclr	IMM(31),d2
+	movel	a5,d4
+	orl		d2,d4
+	orl		d3,d4
+	beq	Laddxf$a	| if zero return first operand
+
+	andl	IMM (0x80000000),d7 | isolate a's sign bit
+    swap	d6		| and also b's sign bit
+#ifndef __mcoldfire__
+	andw	IMM (0x8000),d6	|
+	orw	d6,d7		| and combine them into d7, so that a's sign
+				| bit is in the high word and b's is in the
+				| low word, so d6 is free to be used
+#else
+	andl	IMM (0x8000),d6
+	orl	d6,d7
+#endif
+	movel	d7,a0		| now save d7 into a0, so d7 is free to
+                		| be used also
+
+| Get the exponents and check for denormalized and/or infinity.
+
+	movel	IMM (0x7fffffff),d6 | mask for the fraction
+	movel	IMM (0x80000000),d7 | mask to put hidden bit back
+
+	andl	d6,d1		| get fraction in d1
+	movel	d0,d4		|
+	swap	d4			| get exponent in d4
+	beq	Laddxf$a$den	| branch if a is denormalized
+#ifndef __mcoldfire__
+	cmpw	IMM(X_MAX_EXP),d4		| check for INFINITY or NaN
+#else
+	cmpl	IMM(X_MAX_EXP),d4		| check for INFINITY or NaN
+#endif
+	beq	Laddxf$nf       |
+	orl	d7,d1		| and put hidden bit back
+Laddxf$1:
+	movel	d1,d0
+	movel	a4,d1
+| Now we have a's exponent in d4 and fraction in d0-d1
+
+	andl	d6,d3		| get fraction in d3
+	movel	d2,d5
+	swap	d5		| get exponent in d5
+	beq	Laddxf$b$den	| branch if b is denormalized
+#ifndef __mcoldfire__
+	cmpw	IMM(X_MAX_EXP),d5		| check for INFINITY or NaN
+#else
+	cmpl	IMM(X_MAX_EXP),d5		| check for INFINITY or NaN
+#endif
+	beq	Laddxf$nf
+	orl	d7,d3		| and put hidden bit back
+Laddxf$2:
+
+	movel	d3,d2
+	movel	a5,d3
+| Now we have b's exponent in d5 and fraction in d2-d3.
+
+| The situation now is as follows: the signs are combined in a0, the
+| numbers are in d0-d1 (a) and d2-d3 (b), and the exponents in d4 (a)
+| and d5 (b). To do the rounding correctly we need to keep all the
+| bits until the end, so we need to use d0-d1-d2-d3 for the first number
+| and d4-d5-d6-d7 for the second. To do this we store (temporarily) the
+| exponents in a2-a3.
+
+	movel	d4,a2		| save the exponents
+	movel	d5,a3		|
+
+	movel	IMM (0),d7	| and move the numbers around
+	movel	d7,d6		|
+	movel	d3,d5		|
+	movel	d2,d4		|
+	movel	d7,d3		|
+	movel	d7,d2		|
+
+| Here we shift the numbers until the exponents are the same, and put
+| the largest exponent in a2.
+#ifndef __mcoldfire__
+	exg	d4,a2		| get exponents back
+	exg	d5,a3		|
+	cmpw	d4,d5		| compare the exponents
+#else
+	movel	d4,a4		| get exponents back
+	movel	a2,d4
+	movel	a4,a2
+	movel	d5,a4
+	movel	a3,d5
+	movel	a4,a3
+	cmpl	d4,d5		| compare the exponents
+#endif
+	beq	Laddxf$3	| if equal don't shift
+	bhi	9f		| branch if second exponent is higher
+
+| Here we have a's exponent larger than b's, so we have to shift b. We do
+| this by using as counter d2:
+1:	movew	d4,d2		| move largest exponent to d2
+#ifndef __mcoldfire__
+	subw	d5,d2		| and subtract second exponent
+	exg	d4,a2		| get back the longs we saved
+	exg	d5,a3		|
+#else
+	subl	d5,d2		| and subtract second exponent
+	movel	d4,a4		| get back the longs we saved
+	movel	a2,d4
+	movel	a4,a2
+	movel	d5,a4
+	movel	a3,d5
+	movel	a4,a3
+#endif
+| if difference is too large we don't shift (actually, we can just exit)
+#ifndef __mcoldfire__
+	cmpw	IMM (LDBL_MANT_DIG),d2
+#else
+	cmpl	IMM (LDBL_MANT_DIG),d2
+#endif
+	bge	Laddxf$b$small
+#ifndef __mcoldfire__
+	cmpw	IMM (32),d2	| if difference >= 32, shift by longs
+#else
+	cmpl	IMM (32),d2	| if difference >= 32, shift by longs
+#endif
+	bge	5f
+2:
+#ifndef __mcoldfire__
+	cmpw	IMM (16),d2	| if difference >= 16, shift by words
+#else
+	cmpl	IMM (16),d2	| if difference >= 16, shift by words
+#endif
+	bge	6f
+	bra	3f		| enter dbra loop
+
+4:
+#ifndef __mcoldfire__
+	lsrl	IMM (1),d4
+	roxrl	IMM (1),d5
+	roxrl	IMM (1),d6
+	roxrl	IMM (1),d7
+#else
+	lsrl	IMM (1),d7
+	btst	IMM (0),d6
+	beq	10f
+	bset	IMM (31),d7
+10:	lsrl	IMM (1),d6
+	btst	IMM (0),d5
+	beq	11f
+	bset	IMM (31),d6
+11:	lsrl	IMM (1),d5
+	btst	IMM (0),d4
+	beq	12f
+	bset	IMM (31),d5
+12:	lsrl	IMM (1),d4
+#endif
+3:
+#ifndef __mcoldfire__
+	dbra	d2,4b
+#else
+	subql	IMM (1),d2
+	bpl	4b
+#endif
+	movel	IMM (0),d2
+	movel	d2,d3
+	bra	Laddxf$4
+5:
+	movel	d6,d7
+	movel	d5,d6
+	movel	d4,d5
+	movel	IMM (0),d4
+#ifndef __mcoldfire__
+	subw	IMM (32),d2
+#else
+	subl	IMM (32),d2
+#endif
+	bra	2b
+6:
+	movew	d6,d7
+	swap	d7
+	movew	d5,d6
+	swap	d6
+	movew	d4,d5
+	swap	d5
+	movew	IMM (0),d4
+	swap	d4
+#ifndef __mcoldfire__
+	subw	IMM (16),d2
+#else
+	subl	IMM (16),d2
+#endif
+	bra	3b
+
+9:
+#ifndef __mcoldfire__
+	exg	d4,d5
+	movew	d4,d6
+	subw	d5,d6		| keep d5 (largest exponent) in d4
+	exg	d4,a2
+	exg	d5,a3
+#else
+	movel	d5,d6
+	movel	d4,d5
+	movel	d6,d4
+	subl	d5,d6
+	movel	d4,a4
+	movel	a2,d4
+	movel	a4,a2
+	movel	d5,a4
+	movel	a3,d5
+	movel	a4,a3
+#endif
+| if difference is too large we don't shift (actually, we can just exit)
+#ifndef __mcoldfire__
+	cmpw	IMM (LDBL_MANT_DIG),d6
+#else
+	cmpl	IMM (LDBL_MANT_DIG),d6
+#endif
+	bge	Laddxf$a$small
+#ifndef __mcoldfire__
+	cmpw	IMM (32),d6	| if difference >= 32, shift by longs
+#else
+	cmpl	IMM (32),d6	| if difference >= 32, shift by longs
+#endif
+	bge	5f
+2:
+#ifndef __mcoldfire__
+	cmpw	IMM (16),d6	| if difference >= 16, shift by words
+#else
+	cmpl	IMM (16),d6	| if difference >= 16, shift by words
+#endif
+	bge	6f
+	bra	3f		| enter dbra loop
+
+4:
+#ifndef __mcoldfire__
+	lsrl	IMM (1),d0
+	roxrl	IMM (1),d1
+	roxrl	IMM (1),d2
+	roxrl	IMM (1),d3
+#else
+	lsrl	IMM (1),d3
+	btst	IMM (0),d2
+	beq	10f
+	bset	IMM (31),d3
+10:	lsrl	IMM (1),d2
+	btst	IMM (0),d1
+	beq	11f
+	bset	IMM (31),d2
+11:	lsrl	IMM (1),d1
+	btst	IMM (0),d0
+	beq	12f
+	bset	IMM (31),d1
+12:	lsrl	IMM (1),d0
+#endif
+3:
+#ifndef __mcoldfire__
+	dbra	d6,4b
+#else
+	subql	IMM (1),d6
+	bpl	4b
+#endif
+	movel	IMM (0),d7
+	movel	d7,d6
+	bra	Laddxf$4
+5:
+	movel	d2,d3
+	movel	d1,d2
+	movel	d0,d1
+	movel	IMM (0),d0
+#ifndef __mcoldfire__
+	subw	IMM (32),d6
+#else
+	subl	IMM (32),d6
+#endif
+	bra	2b
+6:
+	movew	d2,d3
+	swap	d3
+	movew	d1,d2
+	swap	d2
+	movew	d0,d1
+	swap	d1
+	movew	IMM (0),d0
+	swap	d0
+#ifndef __mcoldfire__
+	subw	IMM (16),d6
+#else
+	subl	IMM (16),d6
+#endif
+	bra	3b
+Laddxf$3:
+#ifndef __mcoldfire__
+	exg	d4,a2
+	exg	d5,a3
+#else
+	movel	d4,a4
+	movel	a2,d4
+	movel	a4,a2
+	movel	d5,a4
+	movel	a3,d5
+	movel	a4,a3
+#endif
+Laddxf$4:
+| Now we have the numbers in d0--d3 and d4--d7, the exponent in a2, and
+| the signs in a0.
+
+| Here we have to decide whether to add or subtract the numbers:
+#ifndef __mcoldfire__
+	exg	d7,a0		| get the signs
+	exg	d6,a3		| a3 is free to be used
+#else
+	movel	d7,a4
+	movel	a0,d7
+	movel	a4,a0
+	movel	d6,a4
+	movel	a3,d6
+	movel	a4,a3
+#endif
+	movel	d7,d6		|
+	movew	IMM (0),d7	| get a's sign in d7
+	swap	d6              |
+	movew	IMM (0),d6	| and b's sign in d6
+	eorl	d7,d6		| compare the signs
+	bmi	Lsubxf$0	| if the signs are different we have
+				| to subtract
+#ifndef __mcoldfire__
+	exg	d7,a0		| else we add the numbers
+	exg	d6,a3		|
+#else
+	movel	d7,a4
+	movel	a0,d7
+	movel	a4,a0
+	movel	d6,a4
+	movel	a3,d6
+	movel	a4,a3
+#endif
+	addl	d7,d3		|
+	addxl	d6,d2		|
+	addxl	d5,d1		|
+	addxl	d4,d0           |
+
+	movel	a2,d4		| return exponent to d4
+	movel	a0,d7		|
+	andl	IMM (0x80000000),d7 | d7 now has the sign
+
+| Before rounding normalize so bit #LDBL_MANT_DIG is set (we will consider
+| the case of denormalized numbers in the rounding routine itself).
+| As in the addition (not in the subtraction!) we could have set
+| one more bit we check this:
+	btst	IMM (LDBL_MANT_DIG-1-32),d0
+	beq	1f
+#ifndef __mcoldfire__
+	lsrl	IMM (1),d0
+	roxrl	IMM (1),d1
+	roxrl	IMM (1),d2
+	roxrl	IMM (1),d3
+	addw	IMM (1),d4
+#else
+	lsrl	IMM (1),d3
+	btst	IMM (0),d2
+	beq	10f
+	bset	IMM (31),d3
+10:	lsrl	IMM (1),d2
+	btst	IMM (0),d1
+	beq	11f
+	bset	IMM (31),d2
+11:	lsrl	IMM (1),d1
+	btst	IMM (0),d0
+	beq	12f
+	bset	IMM (31),d1
+12:	lsrl	IMM (1),d0
+	addl	IMM (1),d4
+#endif
+1:
+	PICLEA	SYM (_fpCCR),a0	| check the rounding mode
+#ifdef __mcoldfire__
+	clrl	d6
+#endif
+	movew	a0@(6),d6	| rounding mode in d6
+	lea	pc@(Laddxf$5),a0 | to return from rounding routine
+	beq	Lround$to$nearest
+#ifndef __mcoldfire__
+	cmpw	IMM (ROUND_TO_PLUS),d6
+#else
+	cmpl	IMM (ROUND_TO_PLUS),d6
+#endif
+	bhi	Lround$to$minus
+	blt	Lround$to$zero
+	bra	Lround$to$plus
+Laddxf$5:
+| Put back the exponent and check for overflow
+	movel	d2,a4
+#ifndef __mcoldfire__
+	cmpw	IMM (X_MAX_EXP),d4	| is the exponent big?
+#else
+	cmpl	IMM (X_MAX_EXP),d4	| is the exponent big?
+#endif
+	bcc	1f
+	bset	IMM (31),d0 | put hidden bit back
+	swap	d4	| put exponent back into position
+| Put back the numbers
+	movel	d2,a4
+	movel	d0,d1
+	movel	d4,d0
+	bra	Laddxf$ret
+1:
+	moveq	IMM (ADD),d5
+	bra	Lx$overflow
+
+Lsubxf$0:
+| Here we do the subtraction.
+#ifndef __mcoldfire__
+	exg	d7,a0		| put sign back in a0
+	exg	d6,a3		|
+#else
+	movel	d7,a4
+	movel	a0,d7
+	movel	a4,a0
+	movel	d6,a4
+	movel	a3,d6
+	movel	a4,a3
+#endif
+	subl	d7,d3		|
+	subxl	d6,d2		|
+	subxl	d5,d1		|
+	subxl	d4,d0		|
+	beq	Laddxf$ret$1	| if zero just exit
+	bpl	1f		| if positive skip the following
+	movel	a0,d7		|
+	bchg	IMM (31),d7	| change sign bit in d7
+	movel	d7,a0		|
+	negl	d3		|
+	negxl	d2		|
+	negxl	d1              | and negate result
+	negxl	d0              |
+1:
+	movel	a2,d4		| return exponent to d4
+	movel	a0,d7
+	andl	IMM (0x80000000),d7 | isolate sign bit
+
+| Before rounding normalize so bit #LDBL_MANT_DIG is set (we will consider
+| the case of denormalized numbers in the rounding routine itself).
+| As in the addition (not in the subtraction!) we could have set
+| one more bit we check this:
+	btst	IMM (LDBL_MANT_DIG-1-32),d0
+	beq	1f
+#ifndef __mcoldfire__
+	lsrl	IMM (1),d0
+	roxrl	IMM (1),d1
+	roxrl	IMM (1),d2
+	roxrl	IMM (1),d3
+	addw	IMM (1),d4
+#else
+	lsrl	IMM (1),d3
+	btst	IMM (0),d2
+	beq	10f
+	bset	IMM (31),d3
+10:	lsrl	IMM (1),d2
+	btst	IMM (0),d1
+	beq	11f
+	bset	IMM (31),d2
+11:	lsrl	IMM (1),d1
+	btst	IMM (0),d0
+	beq	12f
+	bset	IMM (31),d1
+12:	lsrl	IMM (1),d0
+	addl	IMM (1),d4
+#endif
+1:
+	lea	pc@(Lsubxf$1),a0 | to return from rounding routine
+	PICLEA	SYM (_fpCCR),a1	| check the rounding mode
+#ifdef __mcoldfire__
+	clrl	d6
+#endif
+	movew	a1@(6),d6	| rounding mode in d6
+	beq	Lround$to$nearest
+#ifndef __mcoldfire__
+	cmpw	IMM (ROUND_TO_PLUS),d6
+#else
+	cmpl	IMM (ROUND_TO_PLUS),d6
+#endif
+	bhi	Lround$to$minus
+	blt	Lround$to$zero
+	bra	Lround$to$plus
+Lsubxf$1:
+| Put back the exponent and sign (we don't have overflow).
+	bset	IMM (31),d0 | put hidden bit back
+	swap	d4	| put exponent back into position
+| Put back the numbers
+	movel	d2,a4
+	movel	d0,d1
+	movel	d4,d0
+	bra	Laddxf$ret
+
+| If one of the numbers was too small (difference of exponents >=
+| LDBL_MANT_DIG) we return the other (and now we don't have to
+| check for finiteness or zero).
+Laddxf$a$small:
+	moveml a6@(20),d0-d1/a4
+	bra Laddxf$retnorm
+
+Laddxf$b$small:
+	moveml a6@(8),d0-d1/a4
+	bra Laddxf$retnorm
+
+Laddxf$a$den:
+	movel	d7,d4		| d7 contains 0x00200000
+	bra	Laddxf$1
+
+Laddxf$b$den:
+	movel	d7,d5           | d7 contains 0x00200000
+	notl	d6
+	bra	Laddxf$2
+
+Laddxf$b:
+| Return b (if a is zero)
+	movel	d2,d0
+	movel	d3,d1
+	movel	a5,d5
+	bne	1f			| Check if b is -0
+	tstl	d1
+	bne	1f			| Check if b is -0
+	cmpl	IMM (0x80000000),d0
+	bne	1f
+	andl	IMM (0x80000000),d7	| Use the sign of a
+	clrl	d0
+	bra	Laddxf$ret
+Laddxf$a:
+	moveml	a6@(8),d0-d1/d5
+1:
+	movel	d5,a4
+	moveq	IMM (ADD),d5
+| Check for NaN and +/-INFINITY.
+	movel	d0,d7         		|
+	andl	IMM (0x80000000),d7	|
+	andl	IMM (0x7fff0000),d0		|
+	cmpl	IMM (0x7fff0000),d0	|
+	bge	2f			|
+	movel	a4,d4           	| check for zero, since we don't
+	orl		d0,d4		| want to return -0 by mistake
+	orl		d1,d4
+	bne	Laddxf$ret		| want to return -0 by mistake
+	bclr	IMM (31),d7		|
+	bra	Laddxf$ret		|
+2:
+	movel	a4,d0	| check for NaN (nonzero fraction)
+	orl	d1,d0			|
+	bne	Lx$inop         	|
+	bra	Lx$infty		|
+
+Laddxf$ret$1:
+	movel	d0,a4
+	movel	d0,d1
+
+Laddxf$ret:
+| Normal exit.
+	orl	d7,d0		| put sign bit back
+Laddxf$retnorm:
+	PICLEA	SYM (_fpCCR),a0
+	clrw	a0@
+	moveml	d0-d1/a4,a1@
+	movel	a1,d0
+	moveml	sp@,d2-d7/a2-a5
+	| XXX if frame pointer is ever removed, stack pointer must
+	| be adjusted here.
+	unlk	a6
+	rts
+
+Laddxf$ret$den:
+| Return a denormalized number.
+#ifndef __mcoldfire__
+	lsrl	IMM (1),d0	| shift right once more
+	roxrl	IMM (1),d1	|
+#else
+	lsrl	IMM (1),d1
+	btst	IMM (0),d0
+	beq	10f
+	bset	IMM (31),d1
+10:	lsrl	IMM (1),d0
+#endif
+	bra	Laddxf$ret
+
+Laddxf$nf:
+	moveq	IMM (ADD),d5
+| This could be faster but it is not worth the effort, since it is not
+| executed very often. We sacrifice speed for clarity here.
+	movel	a6@(8),d0	| get the numbers back (remember that we
+	movel	a6@(12),d1	| did some processing already)
+	movel	a6@(16),d2	|
+	movel	a6@(20),d3	|
+	movel	IMM (INFINITY),d4 | useful constant (INFINITY)
+	movel	d0,d7		| save sign bits
+	movel	d2,d6		|
+	bclr	IMM (31),d0	| clear sign bits
+	bclr	IMM (31),d2	|
+| We know that one of them is either NaN of +/-INFINITY
+| Check for NaN (if either one is NaN return NaN)
+	cmpl	d4,d0		| check first a (d0)
+	bhi	Lx$inop		| if d0 > 0x7ff00000 or equal and
+	bne	2f
+	tstl	d1		| d1 > 0, a is NaN
+	bne	Lx$inop		|
+2:	cmpl	d4,d2		| check now b (d1)
+	bhi	Lx$inop		|
+	bne	3f
+	tstl	d3		|
+	bne	Lx$inop		|
+3:
+| Now comes the check for +/-INFINITY. We know that both are (maybe not
+| finite) numbers, but we have to check if both are infinite whether we
+| are adding or subtracting them.
+	eorl	d7,d6		| to check sign bits
+	bmi	1f
+	andl	IMM (0x80000000),d7 | get (common) sign bit
+	bra	Lx$infty
+1:
+| We know one (or both) are infinite, so we test for equality between the
+| two numbers (if they are equal they have to be infinite both, so we
+| return NaN).
+	cmpl	d2,d0		| are both infinite?
+	bne	1f		| if d0 <> d2 they are not equal
+	cmpl	d3,d1		| if d0 == d2 test d3 and d1
+	beq	Lx$inop		| if equal return NaN
+1:
+	andl	IMM (0x80000000),d7 | get a's sign bit
+	cmpl	d4,d0		| test now for infinity
+	beq	Lx$infty	| if a is INFINITY return with this sign
+	bchg	IMM (31),d7	| else we know b is INFINITY and has
+	bra	Lx$infty	| the opposite sign
diff --git a/libgcc/config/m68k/addxf3.c b/libgcc/config/m68k/addxf3.c
new file mode 100644
index 00000000000..ef47667435f
--- /dev/null
+++ b/libgcc/config/m68k/addxf3.c
@@ -0,0 +1,5 @@
+#ifndef __mcoldfire__
+
+#include "soft-fp/addxf3.c"
+
+#endif
diff --git a/libgcc/config/m68k/crti.S b/libgcc/config/m68k/crti.S
index 06e368334a6..65fac88e2e8 100644
--- a/libgcc/config/m68k/crti.S
+++ b/libgcc/config/m68k/crti.S
@@ -42,3 +42,9 @@ _init:
 	.type   _fini,@function
 _fini:
 	linkw %fp,#0
+
+
+#if defined (__ELF__)
+	/* Make stack non-executable for ELF linux targets.  */
+	.section	.note.GNU-stack,"",@progbits
+#endif
diff --git a/libgcc/config/m68k/crtn.S b/libgcc/config/m68k/crtn.S
index 58fcaecb0f3..355d86d7afc 100644
--- a/libgcc/config/m68k/crtn.S
+++ b/libgcc/config/m68k/crtn.S
@@ -38,3 +38,9 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
 	.section .fini
 	unlk %fp
 	rts
+
+
+#if defined (__ELF__)
+	/* Make stack non-executable for ELF linux targets.  */
+	.section	.note.GNU-stack,"",@progbits
+#endif
diff --git a/libgcc/config/m68k/divxf3.c b/libgcc/config/m68k/divxf3.c
new file mode 100644
index 00000000000..a760c0f9d74
--- /dev/null
+++ b/libgcc/config/m68k/divxf3.c
@@ -0,0 +1,5 @@
+#ifndef __mcoldfire__
+
+#include "soft-fp/divxf3.c"
+
+#endif
diff --git a/libgcc/config/m68k/extenddfxf2.c b/libgcc/config/m68k/extenddfxf2.c
new file mode 100644
index 00000000000..9480b1d4806
--- /dev/null
+++ b/libgcc/config/m68k/extenddfxf2.c
@@ -0,0 +1,2 @@
+#define L_extenddfxf2
+#include "fpgnulib.c"
diff --git a/libgcc/config/m68k/extendsfdf2.c b/libgcc/config/m68k/extendsfdf2.c
new file mode 100644
index 00000000000..d323cf2fa35
--- /dev/null
+++ b/libgcc/config/m68k/extendsfdf2.c
@@ -0,0 +1,2 @@
+#define L_extendsfdf2
+#include "fpgnulib.c"
diff --git a/libgcc/config/m68k/extendsfxf2.c b/libgcc/config/m68k/extendsfxf2.c
new file mode 100644
index 00000000000..5bd4bea784f
--- /dev/null
+++ b/libgcc/config/m68k/extendsfxf2.c
@@ -0,0 +1,2 @@
+#define L_extendsfxf2
+#include "fpgnulib.c"
diff --git a/libgcc/config/m68k/fixdfsi.c b/libgcc/config/m68k/fixdfsi.c
new file mode 100644
index 00000000000..1d811017e2c
--- /dev/null
+++ b/libgcc/config/m68k/fixdfsi.c
@@ -0,0 +1,2 @@
+#define L_fixdfsi
+#include "fpgnulib.c"
diff --git a/libgcc/config/m68k/fixsfsi.c b/libgcc/config/m68k/fixsfsi.c
new file mode 100644
index 00000000000..c76353b3bd6
--- /dev/null
+++ b/libgcc/config/m68k/fixsfsi.c
@@ -0,0 +1,2 @@
+#define L_fixsfsi
+#include "fpgnulib.c"
diff --git a/libgcc/config/m68k/fixxfsi.c b/libgcc/config/m68k/fixxfsi.c
new file mode 100644
index 00000000000..ba166b14308
--- /dev/null
+++ b/libgcc/config/m68k/fixxfsi.c
@@ -0,0 +1,2 @@
+#define L_fixxfsi
+#include "fpgnulib.c"
diff --git a/libgcc/config/m68k/floatsidf.c b/libgcc/config/m68k/floatsidf.c
new file mode 100644
index 00000000000..0fe443ca183
--- /dev/null
+++ b/libgcc/config/m68k/floatsidf.c
@@ -0,0 +1,2 @@
+#define L_floatsidf
+#include "fpgnulib.c"
diff --git a/libgcc/config/m68k/floatsisf.c b/libgcc/config/m68k/floatsisf.c
new file mode 100644
index 00000000000..7ce07487f40
--- /dev/null
+++ b/libgcc/config/m68k/floatsisf.c
@@ -0,0 +1,2 @@
+#define L_floatsisf
+#include "fpgnulib.c"
diff --git a/libgcc/config/m68k/floatsixf.c b/libgcc/config/m68k/floatsixf.c
new file mode 100644
index 00000000000..5c10b8081ed
--- /dev/null
+++ b/libgcc/config/m68k/floatsixf.c
@@ -0,0 +1,2 @@
+#define L_floatsixf
+#include "fpgnulib.c"
diff --git a/libgcc/config/m68k/floatunsidf.c b/libgcc/config/m68k/floatunsidf.c
new file mode 100644
index 00000000000..f901056f428
--- /dev/null
+++ b/libgcc/config/m68k/floatunsidf.c
@@ -0,0 +1,2 @@
+#define L_floatunsidf
+#include "fpgnulib.c"
diff --git a/libgcc/config/m68k/floatunsisf.c b/libgcc/config/m68k/floatunsisf.c
new file mode 100644
index 00000000000..8a143a26cdc
--- /dev/null
+++ b/libgcc/config/m68k/floatunsisf.c
@@ -0,0 +1,2 @@
+#define L_floatunsisf
+#include "fpgnulib.c"
diff --git a/libgcc/config/m68k/floatunsixf.c b/libgcc/config/m68k/floatunsixf.c
new file mode 100644
index 00000000000..d67949bd696
--- /dev/null
+++ b/libgcc/config/m68k/floatunsixf.c
@@ -0,0 +1,2 @@
+#define L_floatunsixf
+#include "fpgnulib.c"
diff --git a/libgcc/config/m68k/fpgnulib.c b/libgcc/config/m68k/fpgnulib.c
index fe41edf26aa..e088bd3a5a5 100644
--- a/libgcc/config/m68k/fpgnulib.c
+++ b/libgcc/config/m68k/fpgnulib.c
@@ -1,10 +1,6 @@
 /* This is a stripped down version of floatlib.c.  It supplies only those
    functions which exist in libgcc, but for which there is not assembly
-   language versions in m68k/lb1sf68.S.
-
-   It also includes simplistic support for extended floats (by working in
-   double precision).  You must compile this file again with -DEXTFLOAT
-   to get this support.  */
+   language versions in m68k/lb1sf68.S.  */
 
 /*
 ** gnulib support for software floating point.
@@ -53,6 +49,7 @@
 #define EXCESS		126L
 #define SIGNBIT		0x80000000L
 #define HIDDEN		(1L << 23L)
+#define EXPFMASK	0xFFL
 #define SIGN(fp)	((fp) & SIGNBIT)
 #define EXP(fp)		(((fp) >> 23L) & 0xFF)
 #define MANT(fp)	(((fp) & 0x7FFFFFL) | HIDDEN)
@@ -102,23 +99,61 @@ union long_double_long
       unsigned long lower;
     } l;
 };
-
-#ifndef EXTFLOAT
 
+/* Prototypes for functions defined here in case we use them.  */
+int __unordsf2(float a, float b);
+int __unorddf2(double a, double b);
+double __floatunsidf (unsigned long a1);
+double __floatsidf (long a1);
+float __floatunsisf (unsigned long l);
+float __floatsisf (long l);
+double __extendsfdf2 (float a1);
+float __truncdfsf2 (double a1);
+long __fixdfsi (double a1);
+long __fixsfsi (float a1);
+long __cmpdf2 (double x1, double x2);
+
+#if !defined (__mcoldfire__)
+int __unordxf2(long double a, long double b);
+long double __extenddfxf2 (double d);
+double __truncxfdf2 (long double ld);
+long double __extendsfxf2 (float f);
+float __truncxfsf2 (long double ld);
+long double __floatsixf (long l);
+long double __floatunsixf (unsigned long l);
+long __fixxfsi (long double ld);
+long double __addxf3 (long double x1, long double x2);
+long double __subxf3 (long double x1, long double x2);
+long double __mulxf3 (long double x1, long double x2);
+long double __divxf3 (long double x1, long double x2);
+long double __negxf2 (long double x1);
+long __cmpxf2 (long double x1, long double x2);
+long __eqxf2 (long double x1, long double x2);
+long __nexf2 (long double x1, long double x2);
+long __ltxf2 (long double x1, long double x2);
+long __lexf2 (long double x1, long double x2);
+long __gtxf2 (long double x1, long double x2);
+long __gexf2 (long double x1, long double x2);
+#endif
+
+
+#ifdef L_unordsf2
 int
 __unordsf2(float a, float b)
 {
   union float_long fl;
 
   fl.f = a;
-  if (EXP(fl.l) == EXP(~0u) && (MANT(fl.l) & ~HIDDEN) != 0)
+  if (EXP(fl.l) == EXP(~0ul) && (MANT(fl.l) & ~HIDDEN) != 0)
     return 1;
   fl.f = b;
-  if (EXP(fl.l) == EXP(~0u) && (MANT(fl.l) & ~HIDDEN) != 0)
+  if (EXP(fl.l) == EXP(~0ul) && (MANT(fl.l) & ~HIDDEN) != 0)
     return 1;
   return 0;
 }
+#endif
 
+#ifdef L_unorddf2
 int
 __unorddf2(double a, double b)
 {
@@ -134,7 +169,9 @@ __unorddf2(double a, double b)
     return 1;
   return 0;
 }
+#endif
 
+#ifdef L_floatunsidf
 /* convert unsigned int to double */
 double
 __floatunsidf (unsigned long a1)
@@ -167,7 +204,9 @@ __floatunsidf (unsigned long a1)
 
   return dl.d;
 }
+#endif
 
+#ifdef L_floatsidf
 /* convert int to double */
 double
 __floatsidf (long a1)
@@ -213,7 +252,9 @@ __floatsidf (long a1)
 
   return dl.d;
 }
+#endif
 
+#ifdef L_floatunsisf
 /* convert unsigned int to float */
 float
 __floatunsisf (unsigned long l)
@@ -221,7 +262,9 @@ __floatunsisf (unsigned long l)
   double foo = __floatunsidf (l);
   return foo;
 }
+#endif
 
+#ifdef L_floatsisf
 /* convert int to float */
 float
 __floatsisf (long l)
@@ -229,15 +272,17 @@ __floatsisf (long l)
   double foo = __floatsidf (l);
   return foo;
 }
+#endif
 
+#ifdef L_extendsfdf2
 /* convert float to double */
 double
 __extendsfdf2 (float a1)
 {
-  register union float_long fl1;
-  register union double_long dl;
-  register long exp;
-  register long mant;
+  union float_long fl1;
+  union double_long dl;
+  long exp;
+  long mant;
 
   fl1.f = a1;
 
@@ -250,7 +295,7 @@ __extendsfdf2 (float a1)
 
   exp = EXP(fl1.l);
   mant = MANT (fl1.l) & ~HIDDEN;
-  if (exp == 0)
+  if (exp == 0) /* case of mant == 0 has already been catched above */
     {
       /* Denormal.  */
       exp = 1;
@@ -261,22 +306,27 @@ __extendsfdf2 (float a1)
 	}
       mant &= ~HIDDEN;
     }
-  exp = exp - EXCESS + EXCESSD;
+  if (exp == EXPFMASK)
+    exp = EXPDMASK;
+  else
+    exp = exp - EXCESS + EXCESSD;
   dl.l.upper |= exp << 20;
   dl.l.upper |= mant >> 3;
   dl.l.lower = mant << 29;
 	
   return dl.d;
 }
+#endif
 
+#ifdef L_truncdfsf2
 /* convert double to float */
 float
 __truncdfsf2 (double a1)
 {
-  register long exp;
-  register long mant;
-  register union float_long fl;
-  register union double_long dl1;
+  long exp;
+  long mant;
+  union float_long fl;
+  union double_long dl1;
   int sticky;
   int shift;
 
@@ -290,7 +340,7 @@ __truncdfsf2 (double a1)
 
   exp = EXPD (dl1) - EXCESSD + EXCESS;
 
-  sticky = dl1.l.lower & ((1 << 22) - 1);
+  sticky = dl1.l.lower & ((1L << 22) - 1);
   mant = MANTD (dl1);
   /* shift double mantissa 6 bits so we can round */
   sticky |= mant & ((1 << 6) - 1);
@@ -311,7 +361,15 @@ __truncdfsf2 (double a1)
 	}
       exp = 0;
     }
-  
+  else if (exp >= EXPFMASK)
+    {
+      if (exp == EXPDMASK - EXCESSD + EXCESS)
+        mant &= ~3; /* was already inf or nan; do not round */
+      else
+        mant = 0; /* just overflowed */
+      exp = EXPFMASK;
+    }
+
   /* now round */
   shift = 1;
   if ((mant & 1) && (sticky || (mant & 2)))
@@ -336,14 +394,16 @@ __truncdfsf2 (double a1)
   fl.l = PACK (SIGND (dl1), exp, mant);
   return (fl.f);
 }
+#endif
 
+#ifdef L_fixdfsi
 /* convert double to int */
 long
 __fixdfsi (double a1)
 {
-  register union double_long dl1;
-  register long exp;
-  register long l;
+  union double_long dl1;
+  long exp;
+  long l;
 
   dl1.d = a1;
 
@@ -368,7 +428,9 @@ __fixdfsi (double a1)
 
   return (SIGND (dl1) ? -l : l);
 }
+#endif
 
+#ifdef L_fixsfsi
 /* convert float to int */
 long
 __fixsfsi (float a1)
@@ -376,8 +438,7 @@ __fixsfsi (float a1)
   double foo = a1;
   return __fixdfsi (foo);
 }
-
-#else /* EXTFLOAT */
+#endif
 
 /* We do not need these routines for coldfire, as it has no extended
    float format. */
@@ -387,15 +448,7 @@ __fixsfsi (float a1)
 
    We assume all numbers are normalized, don't do any rounding, etc.  */
 
-/* Prototypes for the above in case we use them.  */
-double __floatunsidf (unsigned long);
-double __floatsidf (long);
-float __floatsisf (long);
-double __extendsfdf2 (float);
-float __truncdfsf2 (double);
-long __fixdfsi (double);
-long __fixsfsi (float);
-
+#ifdef L_unordxf2
 int
 __unordxf2(long double a, long double b)
 {
@@ -411,14 +464,16 @@ __unordxf2(long double a, long double b)
     return 1;
   return 0;
 }
+#endif
 
+#ifdef L_extenddfxf2
 /* convert double to long double */
 long double
 __extenddfxf2 (double d)
 {
-  register union double_long dl;
-  register union long_double_long ldl;
-  register long exp;
+  union double_long dl;
+  union long_double_long ldl;
+  long exp;
 
   dl.d = d;
   /*printf ("dfxf in: %g\n", d);*/
@@ -431,7 +486,11 @@ __extenddfxf2 (double d)
       return ldl.ld;
     }
 
-  exp = EXPD (dl) - EXCESSD + EXCESSX;
+  exp = EXPD (dl);
+  if (exp == EXPDMASK)
+    exp = EXPXMASK;
+  else
+    exp = exp - EXCESSD + EXCESSX;
   ldl.l.upper |= exp << 16;
   ldl.l.middle = HIDDENX;
   /* 31-20: # mantissa bits in ldl.l.middle - # mantissa bits in dl.l.upper */
@@ -444,39 +503,65 @@ __extenddfxf2 (double d)
   /*printf ("dfxf out: %s\n", dumpxf (ldl.ld));*/
   return ldl.ld;
 }
+#endif
 
+#ifdef L_truncxfdf2
 /* convert long double to double */
 double
 __truncxfdf2 (long double ld)
 {
-  register long exp;
-  register union double_long dl;
-  register union long_double_long ldl;
+  long exp;
+  union double_long dl;
+  union long_double_long ldl;
 
   ldl.ld = ld;
   /*printf ("xfdf in: %s\n", dumpxf (ld));*/
 
+  exp = EXPX (ldl);
   dl.l.upper = SIGNX (ldl);
-  if ((ldl.l.upper & ~SIGNBIT) == 0 && !ldl.l.middle && !ldl.l.lower)
+  if (exp == 0 && (ldl.l.middle & MANTXMASK) == 0 && !ldl.l.lower)
     {
       dl.l.lower = 0;
-      return dl.d;
     }
-
-  exp = EXPX (ldl) - EXCESSX + EXCESSD;
-  /* ??? quick and dirty: keep `exp' sane */
-  if (exp >= EXPDMASK)
-    exp = EXPDMASK - 1;
-  dl.l.upper |= exp << (32 - (EXPDBITS + 1));
-  /* +1-1: add one for sign bit, but take one off for explicit-integer-bit */
-  dl.l.upper |= (ldl.l.middle & MANTXMASK) >> (EXPDBITS + 1 - 1);
-  dl.l.lower = (ldl.l.middle & MANTXMASK) << (32 - (EXPDBITS + 1 - 1));
-  dl.l.lower |= ldl.l.lower >> (EXPDBITS + 1 - 1);
+  else
+    {
+      if (exp == EXPXMASK)
+        {
+          exp = EXPDMASK;
+          ldl.l.middle = 0;
+          ldl.l.lower = 0;
+        }
+      else
+        {
+          exp = exp - EXCESSX + EXCESSD;
+          /* ??? quick and dirty: keep `exp' sane */
+          if (exp >= EXPDMASK)
+          {
+          	/* overflow: return infinity */
+            exp = EXPDMASK;
+            ldl.l.middle = 0;
+            ldl.l.lower = 0;
+          } else if (exp <= 0)
+          {
+          	/* underflow */
+            exp = 0;
+            ldl.l.middle = 0;
+            ldl.l.lower = 0;
+          }
+        }
+      dl.l.upper |= exp << (32 - (EXPDBITS + 1));
+      /* +1-1: add one for sign bit, but take one off for explicit-integer-bit */
+      dl.l.upper |= (ldl.l.middle & MANTXMASK) >> (EXPDBITS + 1 - 1);
+      dl.l.lower = (ldl.l.middle & MANTXMASK) << (32 - (EXPDBITS + 1 - 1));
+      dl.l.lower |= ldl.l.lower >> (EXPDBITS + 1 - 1);
+	}
 
   /*printf ("xfdf out: %g\n", dl.d);*/
   return dl.d;
 }
+#endif
 
+#ifdef L_extendsfxf2
 /* convert a float to a long double */
 long double
 __extendsfxf2 (float f)
@@ -484,7 +569,9 @@ __extendsfxf2 (float f)
   long double foo = __extenddfxf2 (__extendsfdf2 (f));
   return foo;
 }
+#endif
 
+#ifdef L_truncxfsf2
 /* convert a long double to a float */
 float
 __truncxfsf2 (long double ld)
@@ -492,7 +579,9 @@ __truncxfsf2 (long double ld)
   float foo = __truncdfsf2 (__truncxfdf2 (ld));
   return foo;
 }
+#endif
 
+#ifdef L_floatsixf
 /* convert an int to a long double */
 long double
 __floatsixf (long l)
@@ -500,7 +589,9 @@ __floatsixf (long l)
   double foo = __floatsidf (l);
   return foo;
 }
+#endif
 
+#ifdef L_floatunsixf
 /* convert an unsigned int to a long double */
 long double
 __floatunsixf (unsigned long l)
@@ -508,7 +599,9 @@ __floatunsixf (unsigned long l)
   double foo = __floatunsidf (l);
   return foo;
 }
+#endif
 
+#ifdef L_fixxfsi
 /* convert a long double to an int */
 long
 __fixxfsi (long double ld)
@@ -516,80 +609,6 @@ __fixxfsi (long double ld)
   long foo = __fixdfsi ((double) ld);
   return foo;
 }
-
-/* The remaining provide crude math support by working in double precision.  */
-
-long double
-__addxf3 (long double x1, long double x2)
-{
-  return (double) x1 + (double) x2;
-}
-
-long double
-__subxf3 (long double x1, long double x2)
-{
-  return (double) x1 - (double) x2;
-}
-
-long double
-__mulxf3 (long double x1, long double x2)
-{
-  return (double) x1 * (double) x2;
-}
-
-long double
-__divxf3 (long double x1, long double x2)
-{
-  return (double) x1 / (double) x2;
-}
-
-long double
-__negxf2 (long double x1)
-{
-  return - (double) x1;
-}
-
-long
-__cmpxf2 (long double x1, long double x2)
-{
-  return __cmpdf2 ((double) x1, (double) x2);
-}
-
-long
-__eqxf2 (long double x1, long double x2)
-{
-  return __cmpdf2 ((double) x1, (double) x2);
-}
-
-long
-__nexf2 (long double x1, long double x2)
-{
-  return __cmpdf2 ((double) x1, (double) x2);
-}
-
-long
-__ltxf2 (long double x1, long double x2)
-{
-  return __cmpdf2 ((double) x1, (double) x2);
-}
-
-long
-__lexf2 (long double x1, long double x2)
-{
-  return __cmpdf2 ((double) x1, (double) x2);
-}
-
-long
-__gtxf2 (long double x1, long double x2)
-{
-  return __cmpdf2 ((double) x1, (double) x2);
-}
-
-long
-__gexf2 (long double x1, long double x2)
-{
-  return __cmpdf2 ((double) x1, (double) x2);
-}
+#endif
 
 #endif /* !__mcoldfire__ */
-#endif /* EXTFLOAT */
diff --git a/libgcc/config/m68k/lb1sf68.S b/libgcc/config/m68k/lb1sf68.S
index 86caf345a00..686f78b86d3 100644
--- a/libgcc/config/m68k/lb1sf68.S
+++ b/libgcc/config/m68k/lb1sf68.S
@@ -52,17 +52,17 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
 #define SYM(x) CONCAT1 (__USER_LABEL_PREFIX__, x)
 
 /* Note that X is a function.  */
-	
+
 #ifdef __ELF__
 #define FUNC(x) .type SYM(x),function
 #else
-/* The .proc pseudo-op is accepted, but ignored, by GAS.  We could just	
+/* The .proc pseudo-op is accepted, but ignored, by GAS.  We could just
    define this to the empty string for non-ELF systems, but defining it
    to .proc means that the information is available to the assembler if
    the need arises.  */
 #define FUNC(x) .proc
 #endif
-		
+
 /* Use the right prefix for registers.  */
 
 #define REG(x) CONCAT1 (__REGISTER_PREFIX__, x)
@@ -90,6 +90,10 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
 #define sp REG (sp)
 #define pc REG (pc)
 
+#ifndef M68K_STRUCT_VALUE_REGNUM
+#define M68K_STRUCT_VALUE_REGNUM a1
+#endif
+
 /* Provide a few macros to allow for PIC code support.
  * With PIC, data is stored A5 relative so we've got to take a bit of special
  * care to ensure that all loads of global data is via A5.  PIC also requires
@@ -223,9 +227,44 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
 #endif /* __PIC__ */
 
 
+| The following exception types are supported:
+INEXACT_RESULT 		= 0x0001
+UNDERFLOW 		= 0x0002
+OVERFLOW 		= 0x0004
+DIVIDE_BY_ZERO 		= 0x0008
+INVALID_OPERATION 	= 0x0010
+
+| The allowed rounding modes are:
+UNKNOWN           = -1
+ROUND_TO_NEAREST  = 0 | round result to nearest representable value
+ROUND_TO_ZERO     = 1 | round result towards zero
+ROUND_TO_PLUS     = 2 | round result towards plus infinity
+ROUND_TO_MINUS    = 3 | round result towards minus infinity
+
+| The allowed values of format are:
+NIL          = 0
+SINGLE_FLOAT = 1
+DOUBLE_FLOAT = 2
+LONG_FLOAT   = 3
+
+| The allowed values for the last operation are:
+NOOP         = 0
+ADD          = 1
+MULTIPLY     = 2
+DIVIDE       = 3
+NEGATE       = 4
+COMPARE      = 5
+EXTENDSFDF   = 6
+TRUNCDFSF    = 7
+
+| return values from __cmpdf2/__cmpsf2/__cmpxf2
+GREATER =  1
+LESS    = -1
+EQUAL   =  0
+
 #ifdef L_floatex
 
-| This is an attempt at a decent floating point (single, double and 
+| This is an attempt at a decent floating point (single, double and
 | extended double) code for the GNU C compiler. It should be easy to
 | adapt to other compilers (but beware of the local labels!).
 
@@ -234,10 +273,10 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
 | It is convenient to introduce the notation (s,e,f) for a floating point
 | number, where s=sign, e=exponent, f=fraction. We will call a floating
 | point number fpn to abbreviate, independently of the precision.
-| Let MAX_EXP be in each case the maximum exponent (255 for floats, 1023 
-| for doubles and 16383 for long doubles). We then have the following 
+| Let MAX_EXP be in each case the maximum exponent (255 for floats, 1023
+| for doubles and 16383 for long doubles). We then have the following
 | different cases:
-|  1. Normalized fpns have 0 < e < MAX_EXP. They correspond to 
+|  1. Normalized fpns have 0 < e < MAX_EXP. They correspond to
 |     (-1)^s x 1.f x 2^(e-bias-1).
 |  2. Denormalized fpns have e=0. They correspond to numbers of the form
 |     (-1)^s x 0.f x 2^(-bias).
@@ -252,8 +291,8 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
 | This is the floating point condition code register (_fpCCR):
 |
 | struct {
-|   short _exception_bits;	
-|   short _trap_enable_bits;	
+|   short _exception_bits;
+|   short _trap_enable_bits;
 |   short _sticky_bits;
 |   short _rounding_mode;
 |   short _format;
@@ -261,10 +300,12 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
 |   union {
 |     float sf;
 |     double df;
+|     long double xf;
 |   } _operand1;
 |   union {
 |     float sf;
 |     double df;
+|     long double xf;
 |   } _operand2;
 | } _fpCCR;
 
@@ -272,7 +313,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
 	.even
 
 	.globl	SYM (_fpCCR)
-	
+
 SYM (_fpCCR):
 __exception_bits:
 	.word	0
@@ -289,9 +330,11 @@ __last_operation:
 __operand1:
 	.long	0
 	.long	0
+	.long	0
 __operand2:
 	.long 	0
 	.long	0
+	.long	0
 
 | Offsets:
 EBITS  = __exception_bits - SYM (_fpCCR)
@@ -303,42 +346,12 @@ LASTO  = __last_operation - SYM (_fpCCR)
 OPER1  = __operand1 - SYM (_fpCCR)
 OPER2  = __operand2 - SYM (_fpCCR)
 
-| The following exception types are supported:
-INEXACT_RESULT 		= 0x0001
-UNDERFLOW 		= 0x0002
-OVERFLOW 		= 0x0004
-DIVIDE_BY_ZERO 		= 0x0008
-INVALID_OPERATION 	= 0x0010
-
-| The allowed rounding modes are:
-UNKNOWN           = -1
-ROUND_TO_NEAREST  = 0 | round result to nearest representable value
-ROUND_TO_ZERO     = 1 | round result towards zero
-ROUND_TO_PLUS     = 2 | round result towards plus infinity
-ROUND_TO_MINUS    = 3 | round result towards minus infinity
-
-| The allowed values of format are:
-NIL          = 0
-SINGLE_FLOAT = 1
-DOUBLE_FLOAT = 2
-LONG_FLOAT   = 3
-
-| The allowed values for the last operation are:
-NOOP         = 0
-ADD          = 1
-MULTIPLY     = 2
-DIVIDE       = 3
-NEGATE       = 4
-COMPARE      = 5
-EXTENDSFDF   = 6
-TRUNCDFSF    = 7
-
 |=============================================================================
 |                           __clear_sticky_bits
 |=============================================================================
 
-| The sticky bits are normally not cleared (thus the name), whereas the 
-| exception type and exception value reflect the last computation. 
+| The sticky bits are normally not cleared (thus the name), whereas the
+| exception type and exception value reflect the last computation.
 | This routine is provided to clear them (you can also write to _fpCCR,
 | since it is globally visible).
 
@@ -348,13 +361,9 @@ TRUNCDFSF    = 7
 	.even
 
 | void __clear_sticky_bits(void);
-SYM (__clear_sticky_bit):		
+SYM (__clear_sticky_bit):
 	PICLEA	SYM (_fpCCR),a0
-#ifndef __mcoldfire__
-	movew	IMM (0),a0@(STICK)
-#else
 	clr.w	a0@(STICK)
-#endif
 	rts
 
 |=============================================================================
@@ -370,13 +379,13 @@ SYM (__clear_sticky_bit):
 | NOTE: it is NOT callable from C!
 | It expects the exception type in d7, the format (SINGLE_FLOAT,
 | DOUBLE_FLOAT or LONG_FLOAT) in d6, and the last operation code in d5.
-| It sets the corresponding exception and sticky bits, and the format. 
-| Depending on the format if fills the corresponding slots for the 
+| It sets the corresponding exception and sticky bits, and the format.
+| Depending on the format if fills the corresponding slots for the
 | operands which produced the exception (all this information is provided
 | so if you write your own exception handlers you have enough information
 | to deal with the problem).
-| Then checks to see if the corresponding exception is trap-enabled, 
-| in which case it pushes the address of _fpCCR and traps through 
+| Then checks to see if the corresponding exception is trap-enabled,
+| in which case it pushes the address of _fpCCR and traps through
 | trap FPTRAP (15 for the moment).
 
 FPTRAP = 15
@@ -396,19 +405,33 @@ $_exception_handler:
 
 | Now put the operands in place:
 #ifndef __mcoldfire__
-	cmpw	IMM (SINGLE_FLOAT),d6
+	subqw	IMM (DOUBLE_FLOAT),d6
 #else
-	cmpl	IMM (SINGLE_FLOAT),d6
+	subql	IMM (DOUBLE_FLOAT),d6
 #endif
-	beq	1f
+	beq	2f
+	bmi	3f
+	moveml a6@(8),d0-d5
+	moveml d0-d5,a0@(OPER1)
+	| for cmpxf2, return value is int!
+#ifndef __mcoldfire__
+	subqw	IMM (2),d6
+#else
+	subql	IMM (2),d6
+#endif
+	beq		4f
+	moveml	d0-d2,M68K_STRUCT_VALUE_REGNUM@			| write return value for long double
+	movel	M68K_STRUCT_VALUE_REGNUM,d0
+	bra	4f
+2:
 	movel	a6@(8),a0@(OPER1)
 	movel	a6@(12),a0@(OPER1+4)
 	movel	a6@(16),a0@(OPER2)
 	movel	a6@(20),a0@(OPER2+4)
-	bra	2f
-1:	movel	a6@(8),a0@(OPER1)
+	bra	4f
+3:	movel	a6@(8),a0@(OPER1)
 	movel	a6@(12),a0@(OPER2)
-2:
+4:
 | And check whether the exception is trap-enabled:
 #ifndef __mcoldfire__
 	andw	a0@(TRAPE),d7	| is exception trap-enabled?
@@ -418,19 +441,22 @@ $_exception_handler:
 	andl	d6,d7
 #endif
 	beq	1f		| no, exit
-	PICPEA	SYM (_fpCCR),a1	| yes, push address of _fpCCR
+	pea		(a0)	| yes, push address of _fpCCR
 	trap	IMM (FPTRAP)	| and trap
-#ifndef __mcoldfire__
-1:	moveml	sp@+,d2-d7	| restore data registers
-#else
-1:	moveml	sp@,d2-d7
+1:
+	moveml	sp@,d2-d7/a2-a5	| restore data registers
 	| XXX if frame pointer is ever removed, stack pointer must
 	| be adjusted here.
-#endif
 	unlk	a6		| and return
 	rts
 #endif /* L_floatex */
 
+#ifdef __FASTCALL__
+
+#include "lb1sf68-fast.asm"
+
+#else
+
 #ifdef  L_mulsi3
 	.text
 	FUNC(__mulsi3)
@@ -516,11 +542,11 @@ L6:	movel	sp@+, d2
 	moveq	IMM (31),d4
 L1:	addl	d0,d0		| shift reg pair (p,a) one bit left
 	addxl	d2,d2
-	movl	d2,d3		| subtract b from p, store in tmp.
+	movel	d2,d3		| subtract b from p, store in tmp.
 	subl	d1,d3
 	jcs	L2		| if no carry,
 	bset	IMM (0),d0	| set the low order bit of a to 1,
-	movl	d3,d2		| and store tmp in p.
+	movel	d3,d2		| and store tmp in p.
 L2:	subql	IMM (1),d4
 	jcc	L1
 	moveml	sp@,d2-d4	| restore data registers
@@ -620,13 +646,35 @@ SYM (__modsi3):
 	rts
 #endif /* L_modsi3 */
 
+#endif /* __FASTCALL__ */
 
 #ifdef  L_double
 
+|=============================================================================
+|=============================================================================
+|                         double precision routines
+|=============================================================================
+|=============================================================================
+
+| A double precision floating point number (double) has the format:
+|
+| struct _double {
+|  unsigned int sign      : 1;  /* sign bit */
+|  unsigned int exponent  : 11; /* exponent, shifted by 1022 */
+|  unsigned int fraction  : 52; /* fraction */
+| } double;
+|
+| Thus sizeof(double) = 8 (64 bits).
+|
+| All the routines are callable from C programs, and return the result
+| in the register pair d0-d1. They also preserve all registers except
+| d0-d1 and a0-a1.
+
 	.globl	SYM (_fpCCR)
 	.globl  $_exception_handler
 
 QUIET_NaN      = 0xffffffff
+INFINITY       = 0x7ff00000
 
 D_MAX_EXP      = 0x07ff
 D_BIAS         = 1022
@@ -634,29 +682,6 @@ DBL_MAX_EXP    = D_MAX_EXP - D_BIAS
 DBL_MIN_EXP    = 1 - D_BIAS
 DBL_MANT_DIG   = 53
 
-INEXACT_RESULT 		= 0x0001
-UNDERFLOW 		= 0x0002
-OVERFLOW 		= 0x0004
-DIVIDE_BY_ZERO 		= 0x0008
-INVALID_OPERATION 	= 0x0010
-
-DOUBLE_FLOAT = 2
-
-NOOP         = 0
-ADD          = 1
-MULTIPLY     = 2
-DIVIDE       = 3
-NEGATE       = 4
-COMPARE      = 5
-EXTENDSFDF   = 6
-TRUNCDFSF    = 7
-
-UNKNOWN           = -1
-ROUND_TO_NEAREST  = 0 | round result to nearest representable value
-ROUND_TO_ZERO     = 1 | round result towards zero
-ROUND_TO_PLUS     = 2 | round result towards plus infinity
-ROUND_TO_MINUS    = 3 | round result towards minus infinity
-
 | Entry points:
 
 	.globl SYM (__adddf3)
@@ -666,12 +691,14 @@ ROUND_TO_MINUS    = 3 | round result towards minus infinity
 	.globl SYM (__negdf2)
 	.globl SYM (__cmpdf2)
 	.globl SYM (__cmpdf2_internal)
+#ifdef __ELF__
 	.hidden SYM (__cmpdf2_internal)
+#endif
 
 	.text
 	.even
 
-| These are common routines to return and signal exceptions.	
+| These are common routines to return and signal exceptions.
 
 Ld$den:
 | Return and signal a denormalized number
@@ -682,8 +709,8 @@ Ld$den:
 
 Ld$infty:
 Ld$overflow:
-| Return a properly signed INFINITY and set the exception flags 
-	movel	IMM (0x7ff00000),d0
+| Return a properly signed INFINITY and set the exception flags
+	movel	IMM (INFINITY),d0
 	movel	IMM (0),d1
 	orl	d7,d0
 	movew	IMM (INEXACT_RESULT+OVERFLOW),d7
@@ -691,7 +718,7 @@ Ld$overflow:
 	PICJUMP	$_exception_handler
 
 Ld$underflow:
-| Return 0 and set the exception flags 
+| Return 0 and set the exception flags
 	movel	IMM (0),d0
 	movel	d0,d1
 	movew	IMM (INEXACT_RESULT+UNDERFLOW),d7
@@ -708,33 +735,13 @@ Ld$inop:
 
 Ld$div$0:
 | Return a properly signed INFINITY and set the exception flags
-	movel	IMM (0x7ff00000),d0
+	movel	IMM (INFINITY),d0
 	movel	IMM (0),d1
 	orl	d7,d0
 	movew	IMM (INEXACT_RESULT+DIVIDE_BY_ZERO),d7
 	moveq	IMM (DOUBLE_FLOAT),d6
 	PICJUMP	$_exception_handler
 
-|=============================================================================
-|=============================================================================
-|                         double precision routines
-|=============================================================================
-|=============================================================================
-
-| A double precision floating point number (double) has the format:
-|
-| struct _double {
-|  unsigned int sign      : 1;  /* sign bit */ 
-|  unsigned int exponent  : 11; /* exponent, shifted by 126 */
-|  unsigned int fraction  : 52; /* fraction */
-| } double;
-| 
-| Thus sizeof(double) = 8 (64 bits). 
-|
-| All the routines are callable from C programs, and return the result 
-| in the register pair d0-d1. They also preserve all registers except 
-| d0-d1 and a0-a1.
-
 |=============================================================================
 |                              __subdf3
 |=============================================================================
@@ -744,6 +751,7 @@ Ld$div$0:
 SYM (__subdf3):
 	bchg	IMM (31),sp@(12) | change sign of second operand
 				| and fall through, so we always add
+
 |=============================================================================
 |                              __adddf3
 |=============================================================================
@@ -751,34 +759,26 @@ SYM (__subdf3):
 | double __adddf3(double, double);
 	FUNC(__adddf3)
 SYM (__adddf3):
-#ifndef __mcoldfire__
-	link	a6,IMM (0)	| everything will be done in registers
-	moveml	d2-d7,sp@-	| save all data registers and a2 (but d0-d1)
-#else
-	link	a6,IMM (-24)
-	moveml	d2-d7,sp@
-#endif
-	movel	a6@(8),d0	| get first operand
-	movel	a6@(12),d1	| 
-	movel	a6@(16),d2	| get second operand
-	movel	a6@(20),d3	| 
+	link	a6,IMM (-40)	| everything will be done in registers
+	moveml	d2-d7/a2-a5,sp@	| save all data registers and a2-a5 (but d0-d1)
+	moveml	a6@(8),d0-d3	| get first operand into d0-d1, and second operand into d2-d3
 
-	movel	d0,d7		| get d0's sign bit in d7 '
+	movel	d0,d7		| get d0's sign bit in d7
 	addl	d1,d1		| check and clear sign bit of a, and gain one
 	addxl	d0,d0		| bit of extra precision
 	beq	Ladddf$b	| if zero return second operand
 
-	movel	d2,d6		| save sign in d6 
+	movel	d2,d6		| save sign in d6
 	addl	d3,d3		| get rid of sign bit and gain one bit of
 	addxl	d2,d2		| extra precision
 	beq	Ladddf$a	| if zero return first operand
 
-	andl	IMM (0x80000000),d7 | isolate a's sign bit '
-        swap	d6		| and also b's sign bit '
+	andl	IMM (0x80000000),d7 | isolate a's sign bit
+	swap	d6		| and also b's sign bit
 #ifndef __mcoldfire__
 	andw	IMM (0x8000),d6	|
-	orw	d6,d7		| and combine them into d7, so that a's sign '
-				| bit is in the high word and b's is in the '
+	orw	d6,d7		| and combine them into d7, so that a's sign
+				| bit is in the high word and b's is in the
 				| low word, so d6 is free to be used
 #else
 	andl	IMM (0x8000),d6
@@ -792,13 +792,13 @@ SYM (__adddf3):
 	movel	IMM (0x001fffff),d6 | mask for the fraction
 	movel	IMM (0x00200000),d7 | mask to put hidden bit back
 
-	movel	d0,d4		| 
+	movel	d0,d4		|
 	andl	d6,d0		| get fraction in d0
 	notl	d6		| make d6 into mask for the exponent
 	andl	d6,d4		| get exponent in d4
 	beq	Ladddf$a$den	| branch if a is denormalized
 	cmpl	d6,d4		| check for INFINITY or NaN
-	beq	Ladddf$nf       | 
+	beq	Ladddf$nf       |
 	orl	d7,d0		| and put hidden bit back
 Ladddf$1:
 	swap	d4		| shift right exponent so that it starts
@@ -807,7 +807,7 @@ Ladddf$1:
 #else
 	lsrl	IMM (5),d4	| in bit 0 and not bit 20
 #endif
-| Now we have a's exponent in d4 and fraction in d0-d1 '
+| Now we have a's exponent in d4 and fraction in d0-d1
 	movel	d2,d5		| save b to get exponent
 	andl	d6,d5		| get exponent in d5
 	beq	Ladddf$b$den	| branch if b is denormalized
@@ -824,25 +824,17 @@ Ladddf$2:
 	lsrl	IMM (5),d5	| in bit 0 and not bit 20
 #endif
 
-| Now we have b's exponent in d5 and fraction in d2-d3. '
+| Now we have b's exponent in d5 and fraction in d2-d3.
 
-| The situation now is as follows: the signs are combined in a0, the 
+| The situation now is as follows: the signs are combined in a0, the
 | numbers are in d0-d1 (a) and d2-d3 (b), and the exponents in d4 (a)
 | and d5 (b). To do the rounding correctly we need to keep all the
 | bits until the end, so we need to use d0-d1-d2-d3 for the first number
 | and d4-d5-d6-d7 for the second. To do this we store (temporarily) the
 | exponents in a2-a3.
 
-#ifndef __mcoldfire__
-	moveml	a2-a3,sp@-	| save the address registers
-#else
-	movel	a2,sp@-	
-	movel	a3,sp@-	
-	movel	a4,sp@-	
-#endif
-
 	movel	d4,a2		| save the exponents
-	movel	d5,a3		| 
+	movel	d5,a3		|
 
 	movel	IMM (0),d7	| and move the numbers around
 	movel	d7,d6		|
@@ -851,7 +843,7 @@ Ladddf$2:
 	movel	d7,d3		|
 	movel	d7,d2		|
 
-| Here we shift the numbers until the exponents are the same, and put 
+| Here we shift the numbers until the exponents are the same, and put
 | the largest exponent in a2.
 #ifndef __mcoldfire__
 	exg	d4,a2		| get exponents back
@@ -866,10 +858,10 @@ Ladddf$2:
 	movel	a4,a3
 	cmpl	d4,d5		| compare the exponents
 #endif
-	beq	Ladddf$3	| if equal don't shift '
+	beq	Ladddf$3	| if equal don't shift
 	bhi	9f		| branch if second exponent is higher
 
-| Here we have a's exponent larger than b's, so we have to shift b. We do 
+| Here we have a's exponent larger than b's, so we have to shift b. We do
 | this by using as counter d2:
 1:	movew	d4,d2		| move largest exponent to d2
 #ifndef __mcoldfire__
@@ -885,7 +877,7 @@ Ladddf$2:
 	movel	a3,d5
 	movel	a4,a3
 #endif
-| if difference is too large we don't shift (actually, we can just exit) '
+| if difference is too large we don't shift (actually, we can just exit)
 #ifndef __mcoldfire__
 	cmpw	IMM (DBL_MANT_DIG+2),d2
 #else
@@ -900,9 +892,9 @@ Ladddf$2:
 	bge	5f
 2:
 #ifndef __mcoldfire__
-	cmpw	IMM (16),d2	| if difference >= 16, shift by words	
+	cmpw	IMM (16),d2	| if difference >= 16, shift by words
 #else
-	cmpl	IMM (16),d2	| if difference >= 16, shift by words	
+	cmpl	IMM (16),d2	| if difference >= 16, shift by words
 #endif
 	bge	6f
 	bra	3f		| enter dbra loop
@@ -933,10 +925,10 @@ Ladddf$2:
 	dbra	d2,4b
 #else
 	subql	IMM (1),d2
-	bpl	4b	
+	bpl	4b
 #endif
 	movel	IMM (0),d2
-	movel	d2,d3	
+	movel	d2,d3
 	bra	Ladddf$4
 5:
 	movel	d6,d7
@@ -964,7 +956,7 @@ Ladddf$2:
 	subl	IMM (16),d2
 #endif
 	bra	3b
-	
+
 9:
 #ifndef __mcoldfire__
 	exg	d4,d5
@@ -984,7 +976,7 @@ Ladddf$2:
 	movel	a3,d5
 	movel	a4,a3
 #endif
-| if difference is too large we don't shift (actually, we can just exit) '
+| if difference is too large we don't shift (actually, we can just exit)
 #ifndef __mcoldfire__
 	cmpw	IMM (DBL_MANT_DIG+2),d6
 #else
@@ -999,9 +991,9 @@ Ladddf$2:
 	bge	5f
 2:
 #ifndef __mcoldfire__
-	cmpw	IMM (16),d6	| if difference >= 16, shift by words	
+	cmpw	IMM (16),d6	| if difference >= 16, shift by words
 #else
-	cmpl	IMM (16),d6	| if difference >= 16, shift by words	
+	cmpl	IMM (16),d6	| if difference >= 16, shift by words
 #endif
 	bge	6f
 	bra	3f		| enter dbra loop
@@ -1065,7 +1057,7 @@ Ladddf$2:
 	bra	3b
 Ladddf$3:
 #ifndef __mcoldfire__
-	exg	d4,a2	
+	exg	d4,a2
 	exg	d5,a3
 #else
 	movel	d4,a4
@@ -1075,13 +1067,13 @@ Ladddf$3:
 	movel	a3,d5
 	movel	a4,a3
 #endif
-Ladddf$4:	
+Ladddf$4:
 | Now we have the numbers in d0--d3 and d4--d7, the exponent in a2, and
-| the signs in a4.
+| the signs in a0.
 
 | Here we have to decide whether to add or subtract the numbers:
 #ifndef __mcoldfire__
-	exg	d7,a0		| get the signs 
+	exg	d7,a0		| get the signs
 	exg	d6,a3		| a3 is free to be used
 #else
 	movel	d7,a4
@@ -1092,11 +1084,11 @@ Ladddf$4:
 	movel	a4,a3
 #endif
 	movel	d7,d6		|
-	movew	IMM (0),d7	| get a's sign in d7 '
+	movew	IMM (0),d7	| get a's sign in d7
 	swap	d6              |
-	movew	IMM (0),d6	| and b's sign in d6 '
+	movew	IMM (0),d6	| and b's sign in d6
 	eorl	d7,d6		| compare the signs
-	bmi	Lsubdf$0	| if the signs are different we have 
+	bmi	Lsubdf$0	| if the signs are different we have
 				| to subtract
 #ifndef __mcoldfire__
 	exg	d7,a0		| else we add the numbers
@@ -1111,26 +1103,18 @@ Ladddf$4:
 #endif
 	addl	d7,d3		|
 	addxl	d6,d2		|
-	addxl	d5,d1		| 
+	addxl	d5,d1		|
 	addxl	d4,d0           |
 
 	movel	a2,d4		| return exponent to d4
-	movel	a0,d7		| 
+	movel	a0,d7		|
 	andl	IMM (0x80000000),d7 | d7 now has the sign
 
-#ifndef __mcoldfire__
-	moveml	sp@+,a2-a3	
-#else
-	movel	sp@+,a4	
-	movel	sp@+,a3	
-	movel	sp@+,a2	
-#endif
-
 | Before rounding normalize so bit #DBL_MANT_DIG is set (we will consider
 | the case of denormalized numbers in the rounding routine itself).
-| As in the addition (not in the subtraction!) we could have set 
+| As in the addition (not in the subtraction!) we could have set
 | one more bit we check this:
-	btst	IMM (DBL_MANT_DIG+1),d0	
+	btst	IMM (DBL_MANT_DIG+1-32),d0
 	beq	1f
 #ifndef __mcoldfire__
 	lsrl	IMM (1),d0
@@ -1155,12 +1139,12 @@ Ladddf$4:
 	addl	IMM (1),d4
 #endif
 1:
-	lea	pc@(Ladddf$5),a0 | to return from rounding routine
-	PICLEA	SYM (_fpCCR),a1	| check the rounding mode
+	PICLEA	SYM (_fpCCR),a0	| check the rounding mode
 #ifdef __mcoldfire__
 	clrl	d6
 #endif
-	movew	a1@(6),d6	| rounding mode in d6
+	movew	a0@(6),d6	| rounding mode in d6
+	lea	pc@(Ladddf$5),a0 | to return from rounding routine
 	beq	Lround$to$nearest
 #ifndef __mcoldfire__
 	cmpw	IMM (ROUND_TO_PLUS),d6
@@ -1173,18 +1157,18 @@ Ladddf$4:
 Ladddf$5:
 | Put back the exponent and check for overflow
 #ifndef __mcoldfire__
-	cmpw	IMM (0x7ff),d4	| is the exponent big?
+	cmpw	IMM (D_MAX_EXP),d4	| is the exponent big?
 #else
-	cmpl	IMM (0x7ff),d4	| is the exponent big?
+	cmpl	IMM (D_MAX_EXP),d4	| is the exponent big?
 #endif
 	bge	1f
-	bclr	IMM (DBL_MANT_DIG-1),d0
+	bclr	IMM (DBL_MANT_DIG-1-32),d0
 #ifndef __mcoldfire__
 	lslw	IMM (4),d4	| put exponent back into position
 #else
 	lsll	IMM (4),d4	| put exponent back into position
 #endif
-	swap	d0		| 
+	swap	d0		|
 #ifndef __mcoldfire__
 	orw	d4,d0		|
 #else
@@ -1222,23 +1206,16 @@ Lsubdf$0:
 	negxl	d2		|
 	negxl	d1              | and negate result
 	negxl	d0              |
-1:	
+1:
 	movel	a2,d4		| return exponent to d4
 	movel	a0,d7
 	andl	IMM (0x80000000),d7 | isolate sign bit
-#ifndef __mcoldfire__
-	moveml	sp@+,a2-a3	|
-#else
-	movel	sp@+,a4
-	movel	sp@+,a3
-	movel	sp@+,a2
-#endif
 
 | Before rounding normalize so bit #DBL_MANT_DIG is set (we will consider
 | the case of denormalized numbers in the rounding routine itself).
-| As in the addition (not in the subtraction!) we could have set 
+| As in the addition (not in the subtraction!) we could have set
 | one more bit we check this:
-	btst	IMM (DBL_MANT_DIG+1),d0	
+	btst	IMM (DBL_MANT_DIG+1-32),d0
 	beq	1f
 #ifndef __mcoldfire__
 	lsrl	IMM (1),d0
@@ -1263,12 +1240,12 @@ Lsubdf$0:
 	addl	IMM (1),d4
 #endif
 1:
-	lea	pc@(Lsubdf$1),a0 | to return from rounding routine
-	PICLEA	SYM (_fpCCR),a1	| check the rounding mode
+	PICLEA	SYM (_fpCCR),a0	| check the rounding mode
 #ifdef __mcoldfire__
 	clrl	d6
 #endif
-	movew	a1@(6),d6	| rounding mode in d6
+	movew	a0@(6),d6	| rounding mode in d6
+	lea	pc@(Lsubdf$1),a0 | to return from rounding routine
 	beq	Lround$to$nearest
 #ifndef __mcoldfire__
 	cmpw	IMM (ROUND_TO_PLUS),d6
@@ -1279,14 +1256,14 @@ Lsubdf$0:
 	blt	Lround$to$zero
 	bra	Lround$to$plus
 Lsubdf$1:
-| Put back the exponent and sign (we don't have overflow). '
-	bclr	IMM (DBL_MANT_DIG-1),d0	
+| Put back the exponent and sign (we don't have overflow).
+	bclr	IMM (DBL_MANT_DIG-1-32),d0
 #ifndef __mcoldfire__
 	lslw	IMM (4),d4	| put exponent back into position
 #else
 	lsll	IMM (4),d4	| put exponent back into position
 #endif
-	swap	d0		| 
+	swap	d0		|
 #ifndef __mcoldfire__
 	orw	d4,d0		|
 #else
@@ -1295,50 +1272,28 @@ Lsubdf$1:
 	swap	d0		|
 	bra	Ladddf$ret
 
-| If one of the numbers was too small (difference of exponents >= 
-| DBL_MANT_DIG+1) we return the other (and now we don't have to '
+| If one of the numbers was too small (difference of exponents >=
+| DBL_MANT_DIG+1) we return the other (and now we don't have to
 | check for finiteness or zero).
 Ladddf$a$small:
-#ifndef __mcoldfire__
-	moveml	sp@+,a2-a3	
-#else
-	movel	sp@+,a4
-	movel	sp@+,a3
-	movel	sp@+,a2
-#endif
 	movel	a6@(16),d0
 	movel	a6@(20),d1
 	PICLEA	SYM (_fpCCR),a0
-	movew	IMM (0),a0@
-#ifndef __mcoldfire__
-	moveml	sp@+,d2-d7	| restore data registers
-#else
-	moveml	sp@,d2-d7
+	clrw	a0@
+	moveml	sp@,d2-d7/a2-a5	| restore data registers
 	| XXX if frame pointer is ever removed, stack pointer must
 	| be adjusted here.
-#endif
 	unlk	a6		| and return
 	rts
 
 Ladddf$b$small:
-#ifndef __mcoldfire__
-	moveml	sp@+,a2-a3	
-#else
-	movel	sp@+,a4	
-	movel	sp@+,a3	
-	movel	sp@+,a2	
-#endif
 	movel	a6@(8),d0
 	movel	a6@(12),d1
 	PICLEA	SYM (_fpCCR),a0
-	movew	IMM (0),a0@
-#ifndef __mcoldfire__
-	moveml	sp@+,d2-d7	| restore data registers
-#else
-	moveml	sp@,d2-d7
+	clrw	a0@
+	moveml	sp@,d2-d7/a2-a5
 	| XXX if frame pointer is ever removed, stack pointer must
 	| be adjusted here.
-#endif
 	unlk	a6		| and return
 	rts
 
@@ -1372,7 +1327,7 @@ Ladddf$a:
 	bclr	IMM (31),d0		|
 	cmpl	IMM (0x7ff00000),d0	|
 	bge	2f			|
-	movel	d0,d0           	| check for zero, since we don't  '
+	movel	d0,d0           	| check for zero, since we don't
 	bne	Ladddf$ret		| want to return -0 by mistake
 	bclr	IMM (31),d7		|
 	bra	Ladddf$ret		|
@@ -1381,28 +1336,17 @@ Ladddf$a:
 	orl	d1,d0			|
 	bne	Ld$inop         	|
 	bra	Ld$infty		|
-	
+
 Ladddf$ret$1:
-#ifndef __mcoldfire__
-	moveml	sp@+,a2-a3	| restore regs and exit
-#else
-	movel	sp@+,a4
-	movel	sp@+,a3
-	movel	sp@+,a2
-#endif
 
 Ladddf$ret:
 | Normal exit.
 	PICLEA	SYM (_fpCCR),a0
-	movew	IMM (0),a0@
+	clrw	a0@
 	orl	d7,d0		| put sign bit back
-#ifndef __mcoldfire__
-	moveml	sp@+,d2-d7
-#else
-	moveml	sp@,d2-d7
+	moveml	sp@,d2-d7/a2-a5
 	| XXX if frame pointer is ever removed, stack pointer must
 	| be adjusted here.
-#endif
 	unlk	a6
 	rts
 
@@ -1426,25 +1370,25 @@ Ladddf$nf:
 | executed very often. We sacrifice speed for clarity here.
 	movel	a6@(8),d0	| get the numbers back (remember that we
 	movel	a6@(12),d1	| did some processing already)
-	movel	a6@(16),d2	| 
-	movel	a6@(20),d3	| 
-	movel	IMM (0x7ff00000),d4 | useful constant (INFINITY)
+	movel	a6@(16),d2	|
+	movel	a6@(20),d3	|
+	movel	IMM (INFINITY),d4 | useful constant (INFINITY)
 	movel	d0,d7		| save sign bits
-	movel	d2,d6		| 
+	movel	d2,d6		|
 	bclr	IMM (31),d0	| clear sign bits
-	bclr	IMM (31),d2	| 
+	bclr	IMM (31),d2	|
 | We know that one of them is either NaN of +/-INFINITY
 | Check for NaN (if either one is NaN return NaN)
 	cmpl	d4,d0		| check first a (d0)
 	bhi	Ld$inop		| if d0 > 0x7ff00000 or equal and
 	bne	2f
 	tstl	d1		| d1 > 0, a is NaN
-	bne	Ld$inop		| 
+	bne	Ld$inop		|
 2:	cmpl	d4,d2		| check now b (d1)
-	bhi	Ld$inop		| 
+	bhi	Ld$inop		|
 	bne	3f
-	tstl	d3		| 
-	bne	Ld$inop		| 
+	tstl	d3		|
+	bne	Ld$inop		|
 3:
 | Now comes the check for +/-INFINITY. We know that both are (maybe not
 | finite) numbers, but we have to check if both are infinite whether we
@@ -1461,8 +1405,8 @@ Ladddf$nf:
 	bne	1f		| if d0 <> d2 they are not equal
 	cmpl	d3,d1		| if d0 == d2 test d3 and d1
 	beq	Ld$inop		| if equal return NaN
-1:	
-	andl	IMM (0x80000000),d7 | get a's sign bit '
+1:
+	andl	IMM (0x80000000),d7 | get a's sign bit
 	cmpl	d4,d0		| test now for infinity
 	beq	Ld$infty	| if a is INFINITY return with this sign
 	bchg	IMM (31),d7	| else we know b is INFINITY and has
@@ -1475,34 +1419,26 @@ Ladddf$nf:
 | double __muldf3(double, double);
 	FUNC(__muldf3)
 SYM (__muldf3):
-#ifndef __mcoldfire__
-	link	a6,IMM (0)
-	moveml	d2-d7,sp@-
-#else
-	link	a6,IMM (-24)
-	moveml	d2-d7,sp@
-#endif
-	movel	a6@(8),d0		| get a into d0-d1
-	movel	a6@(12),d1		| 
-	movel	a6@(16),d2		| and b into d2-d3
-	movel	a6@(20),d3		|
+	link	a6,IMM (-40)	| everything will be done in registers
+	moveml	d2-d7/a2-a5,sp@	| save all data registers and a2-a5 (but d0-d1)
+	moveml	a6@(8),d0-d3	| get a into d0-d1, and b into d2-d3
 	movel	d0,d7			| d7 will hold the sign of the product
 	eorl	d2,d7			|
 	andl	IMM (0x80000000),d7	|
-	movel	d7,a0			| save sign bit into a0 
-	movel	IMM (0x7ff00000),d7	| useful constant (+INFINITY)
+	movel	d7,a0			| save sign bit into a0
+	movel	IMM (INFINITY),d7	| useful constant (+INFINITY)
 	movel	d7,d6			| another (mask for fraction)
 	notl	d6			|
-	bclr	IMM (31),d0		| get rid of a's sign bit '
-	movel	d0,d4			| 
-	orl	d1,d4			| 
+	bclr	IMM (31),d0		| get rid of a's sign bit
+	movel	d0,d4			|
+	orl	d1,d4			|
 	beq	Lmuldf$a$0		| branch if a is zero
 	movel	d0,d4			|
-	bclr	IMM (31),d2		| get rid of b's sign bit '
+	bclr	IMM (31),d2		| get rid of b's sign bit
 	movel	d2,d5			|
-	orl	d3,d5			| 
+	orl	d3,d5			|
 	beq	Lmuldf$b$0		| branch if b is zero
-	movel	d2,d5			| 
+	movel	d2,d5			|
 	cmpl	d7,d0			| is a big?
 	bhi	Lmuldf$inop		| if a is NaN return NaN
 	beq	Lmuldf$a$nf		| we still have to check d1 and b ...
@@ -1517,11 +1453,11 @@ SYM (__muldf3):
 	orl	IMM (0x00100000),d0	| and put hidden bit back
 	swap	d4			| I like exponents in the first byte
 #ifndef __mcoldfire__
-	lsrw	IMM (4),d4		| 
+	lsrw	IMM (4),d4		|
 #else
-	lsrl	IMM (4),d4		| 
+	lsrl	IMM (4),d4		|
 #endif
-Lmuldf$1:			
+Lmuldf$1:
 	andl	d7,d5			|
 	beq	Lmuldf$b$den		|
 	andl	d6,d2			|
@@ -1542,8 +1478,8 @@ Lmuldf$2:				|
 #endif
 
 | We are now ready to do the multiplication. The situation is as follows:
-| both a and b have bit 52 ( bit 20 of d0 and d2) set (even if they were 
-| denormalized to start with!), which means that in the product bit 104 
+| both a and b have bit 52 ( bit 20 of d0 and d2) set (even if they were
+| denormalized to start with!), which means that in the product bit 104
 | (which will correspond to bit 8 of the fourth long) is set.
 
 | Here we have to do the product.
@@ -1551,13 +1487,6 @@ Lmuldf$2:				|
 | enough to keep everything in them. So we use the address registers to keep
 | some intermediate data.
 
-#ifndef __mcoldfire__
-	moveml	a2-a3,sp@-	| save a2 and a3 for temporary use
-#else
-	movel	a2,sp@-
-	movel	a3,sp@-
-	movel	a4,sp@-
-#endif
 	movel	IMM (0),a2	| a2 is a null register
 	movel	d4,a3		| and a3 will preserve the exponent
 
@@ -1591,8 +1520,8 @@ Lmuldf$2:				|
 	movel	d3,d1           |
 	movel	d3,d0	        |
 
-| We use a1 as counter:	
-	movel	IMM (DBL_MANT_DIG-1),a1		
+| We use a1 as counter:
+	movel	IMM (DBL_MANT_DIG-1),a1
 #ifndef __mcoldfire__
 	exg	d7,a1
 #else
@@ -1628,7 +1557,7 @@ Lmuldf$2:				|
 	addxl	d7,d1		|
 	addxl	d7,d0		|
 #ifndef __mcoldfire__
-	exg	d7,a2		| 
+	exg	d7,a2		|
 #else
 	movel	d7,a4
 	movel	a2,d7
@@ -1647,16 +1576,9 @@ Lmuldf$2:				|
 #endif
 
 	movel	a3,d4		| restore exponent
-#ifndef __mcoldfire__
-	moveml	sp@+,a2-a3
-#else
-	movel	sp@+,a4
-	movel	sp@+,a3
-	movel	sp@+,a2
-#endif
 
-| Now we have the product in d0-d1-d2-d3, with bit 8 of d0 set. The 
-| first thing to do now is to normalize it so bit 8 becomes bit 
+| Now we have the product in d0-d1-d2-d3, with bit 8 of d0 set. The
+| first thing to do now is to normalize it so bit 8 becomes bit
 | DBL_MANT_DIG-32 (to do the rounding); later we will shift right.
 	swap	d0
 	swap	d1
@@ -1695,7 +1617,7 @@ Lmuldf$2:				|
 	orl	d7,d1
 	lsrl	IMM (3),d0
 #endif
-	
+
 | Now round, check for over- and underflow, and exit.
 	movel	a0,d7		| get sign bit back into d7
 	moveq	IMM (MULTIPLY),d5
@@ -1757,18 +1679,14 @@ Lmuldf$a$0:
 1:	cmpl	IMM (0x7ff00000),d2 | check for non-finiteness
 	bge	Ld$inop		| in case NaN or +/-INFINITY return NaN
 	PICLEA	SYM (_fpCCR),a0
-	movew	IMM (0),a0@
-#ifndef __mcoldfire__
-	moveml	sp@+,d2-d7
-#else
-	moveml	sp@,d2-d7
+	clrw	a0@
+	moveml	sp@,d2-d7/a2-a5
 	| XXX if frame pointer is ever removed, stack pointer must
 	| be adjusted here.
-#endif
 	unlk	a6
 	rts
 
-| If a number is denormalized we put an exponent of 1 but do not put the 
+| If a number is denormalized we put an exponent of 1 but do not put the
 | hidden bit back into the fraction; instead we shift left until bit 21
 | (the hidden bit) is set, adjusting the exponent accordingly. We do this
 | to ensure that the product of the fractions is close to 1.
@@ -1808,30 +1726,22 @@ Lmuldf$b$den:
 | double __divdf3(double, double);
 	FUNC(__divdf3)
 SYM (__divdf3):
-#ifndef __mcoldfire__
-	link	a6,IMM (0)
-	moveml	d2-d7,sp@-
-#else
-	link	a6,IMM (-24)
-	moveml	d2-d7,sp@
-#endif
-	movel	a6@(8),d0	| get a into d0-d1
-	movel	a6@(12),d1	| 
-	movel	a6@(16),d2	| and b into d2-d3
-	movel	a6@(20),d3	|
+	link	a6,IMM (-40)	| everything will be done in registers
+	moveml	d2-d7/a2-a5,sp@	| save all data registers and a2-a5 (but d0-d1)
+	moveml	a6@(8),d0-d3	| get a into d0-d1, and b into d2-d3
 	movel	d0,d7		| d7 will hold the sign of the result
 	eorl	d2,d7		|
 	andl	IMM (0x80000000),d7
 	movel	d7,a0		| save sign into a0
-	movel	IMM (0x7ff00000),d7 | useful constant (+INFINITY)
+	movel	IMM (INFINITY),d7 | useful constant (+INFINITY)
 	movel	d7,d6		| another (mask for fraction)
 	notl	d6		|
-	bclr	IMM (31),d0	| get rid of a's sign bit '
+	bclr	IMM (31),d0	| get rid of a's sign bit
 	movel	d0,d4		|
 	orl	d1,d4		|
 	beq	Ldivdf$a$0	| branch if a is zero
 	movel	d0,d4		|
-	bclr	IMM (31),d2	| get rid of b's sign bit '
+	bclr	IMM (31),d2	| get rid of b's sign bit
 	movel	d2,d5		|
 	orl	d3,d5		|
 	beq	Ldivdf$b$0	| branch if b is zero
@@ -1839,7 +1749,7 @@ SYM (__divdf3):
 	cmpl	d7,d0		| is a big?
 	bhi	Ldivdf$inop	| if a is NaN return NaN
 	beq	Ldivdf$a$nf	| if d0 == 0x7ff00000 we check d1
-	cmpl	d7,d2		| now compare b with INFINITY 
+	cmpl	d7,d2		| now compare b with INFINITY
 	bhi	Ldivdf$inop	| if b is NaN return NaN
 	beq	Ldivdf$b$nf	| if d2 == 0x7ff00000 we check d3
 | Here we have both numbers finite and nonzero (and with no sign bit).
@@ -1854,11 +1764,11 @@ SYM (__divdf3):
 	orl	IMM (0x00100000),d0 | and put hidden bit back
 	swap	d4		| I like exponents in the first byte
 #ifndef __mcoldfire__
-	lsrw	IMM (4),d4	| 
+	lsrw	IMM (4),d4	|
 #else
-	lsrl	IMM (4),d4	| 
+	lsrl	IMM (4),d4	|
 #endif
-Ldivdf$1:			| 
+Ldivdf$1:			|
 	andl	d7,d5		|
 	beq	Ldivdf$b$den	|
 	andl	d6,d2		|
@@ -1881,7 +1791,7 @@ Ldivdf$2:			|
 | We are now ready to do the division. We have prepared things in such a way
 | that the ratio of the fractions will be less than 2 but greater than 1/2.
 | At this point the registers in use are:
-| d0-d1	hold a (first operand, bit DBL_MANT_DIG-32=0, bit 
+| d0-d1	hold a (first operand, bit DBL_MANT_DIG-32=0, bit
 | DBL_MANT_DIG-1-32=1)
 | d2-d3	hold b (second operand, bit DBL_MANT_DIG-32=1)
 | d4	holds the difference of the exponents, corrected by the bias
@@ -1890,19 +1800,19 @@ Ldivdf$2:			|
 | To do the rounding correctly we need to keep information about the
 | nonsignificant bits. One way to do this would be to do the division
 | using four registers; another is to use two registers (as originally
-| I did), but use a sticky bit to preserve information about the 
+| I did), but use a sticky bit to preserve information about the
 | fractional part. Note that we can keep that info in a1, which is not
 | used.
 	movel	IMM (0),d6	| d6-d7 will hold the result
-	movel	d6,d7		| 
+	movel	d6,d7		|
 	movel	IMM (0),a1	| and a1 will hold the sticky bit
 
-	movel	IMM (DBL_MANT_DIG-32+1),d5	
-	
+	movel	IMM (DBL_MANT_DIG-32+1),d5
+
 1:	cmpl	d0,d2		| is a < b?
 	bhi	3f		| if b > a skip the following
 	beq	4f		| if d0==d2 check d1 and d3
-2:	subl	d3,d1		| 
+2:	subl	d3,d1		|
 	subxl	d2,d0		| a <-- a - b
 	bset	d5,d6		| set the corresponding bit in d6
 3:	addl	d1,d1		| shift a by 1
@@ -1913,7 +1823,7 @@ Ldivdf$2:			|
 	subql	IMM (1), d5
 	bpl	1b
 #endif
-	bra	5f			
+	bra	5f
 4:	cmpl	d1,d3		| here d0==d2, so check d1 and d3
 	bhi	3b		| if d1 > d2 skip the subtraction
 	bra	2b		| else go do it
@@ -1924,7 +1834,7 @@ Ldivdf$2:			|
 1:	cmpl	d0,d2		| is a < b?
 	bhi	3f		| if b > a skip the following
 	beq	4f		| if d0==d2 check d1 and d3
-2:	subl	d3,d1		| 
+2:	subl	d3,d1		|
 	subxl	d2,d0		| a <-- a - b
 	bset	d5,d7		| set the corresponding bit in d7
 3:	addl	d1,d1		| shift a by 1
@@ -1935,7 +1845,7 @@ Ldivdf$2:			|
 	subql	IMM (1), d5
 	bpl	1b
 #endif
-	bra	5f			
+	bra	5f
 4:	cmpl	d1,d3		| here d0==d2, so check d1 and d3
 	bhi	3b		| if d1 > d2 skip the subtraction
 	bra	2b		| else go do it
@@ -1955,12 +1865,12 @@ Ldivdf$2:			|
 #endif
 	movel	IMM (0),d2	| here no sticky bit was found
 	movel	d2,d3
-	bra	5f			
+	bra	5f
 3:	cmpl	d1,d3		| here d0==d2, so check d1 and d3
 	bhi	2b		| if d1 > d2 go back
 4:
 | Here put the sticky bit in d2-d3 (in the position which actually corresponds
-| to it; if you don't do this the algorithm loses in some cases). '
+| to it; if you don't do this the algorithm loses in some cases).
 	movel	IMM (0),d2
 	movel	d2,d3
 #ifndef __mcoldfire__
@@ -2032,38 +1942,34 @@ Ldivdf$a$0:
 | return a properly signed zero.
 	moveq	IMM (DIVIDE),d5
 	bclr	IMM (31),d2	|
-	movel	d2,d4		| 
-	orl	d3,d4		| 
+	movel	d2,d4		|
+	orl	d3,d4		|
 	beq	Ld$inop		| if b is also zero return NaN
-	cmpl	IMM (0x7ff00000),d2 | check for NaN
-	bhi	Ld$inop		| 
+	cmpl	IMM (INFINITY),d2 | check for NaN
+	bhi	Ld$inop		|
 	blt	1f		|
 	tstl	d3		|
 	bne	Ld$inop		|
 1:	movel	a0,d0		| else return signed zero
-	moveq	IMM(0),d1	| 
+	moveq	IMM(0),d1	|
 	PICLEA	SYM (_fpCCR),a0	| clear exception flags
-	movew	IMM (0),a0@	|
-#ifndef __mcoldfire__
-	moveml	sp@+,d2-d7	| 
-#else
-	moveml	sp@,d2-d7	| 
+	clrw	a0@	|
+	moveml	sp@,d2-d7/a2-a5	|
 	| XXX if frame pointer is ever removed, stack pointer must
 	| be adjusted here.
-#endif
-	unlk	a6		| 
-	rts			| 	
+	unlk	a6		|
+	rts			|
 
 Ldivdf$b$0:
 	moveq	IMM (DIVIDE),d5
 | If we got here a is not zero. Check if a is NaN; in that case return NaN,
-| else return +/-INFINITY. Remember that a is in d0 with the sign bit 
+| else return +/-INFINITY. Remember that a is in d0 with the sign bit
 | cleared already.
-	movel	a0,d7		| put a's sign bit back in d7 '
-	cmpl	IMM (0x7ff00000),d0 | compare d0 with INFINITY
+	movel	a0,d7		| put a's sign bit back in d7
+	cmpl	IMM (INFINITY),d0 | compare d0 with INFINITY
 	bhi	Ld$inop		| if larger it is NaN
-	tstl	d1		| 
-	bne	Ld$inop		| 
+	tstl	d1		|
+	bne	Ld$inop		|
 	bra	Ld$div$0	| else signal DIVIDE_BY_ZERO
 
 Ldivdf$b$nf:
@@ -2079,13 +1985,13 @@ Ldivdf$a$nf:
 	tstl	d1		|
 	bne	Ld$inop		| if d1 <> 0, a is NaN
 | If a is INFINITY we have to check b
-	cmpl	d7,d2		| compare b with INFINITY 
+	cmpl	d7,d2		| compare b with INFINITY
 	bge	Ld$inop		| if b is NaN or INFINITY return NaN
 	tstl	d3		|
-	bne	Ld$inop		| 
+	bne	Ld$inop		|
 	bra	Ld$overflow	| else return overflow
 
-| If a number is denormalized we put an exponent of 1 but do not put the 
+| If a number is denormalized we put an exponent of 1 but do not put the
 | bit back into the fraction.
 Ldivdf$a$den:
 	movel	IMM (1),d4
@@ -2122,32 +2028,32 @@ Lround$exit:
 
 | First check for underlow in the exponent:
 #ifndef __mcoldfire__
-	cmpw	IMM (-DBL_MANT_DIG-1),d4		
+	cmpw	IMM (-DBL_MANT_DIG-1),d4
 #else
-	cmpl	IMM (-DBL_MANT_DIG-1),d4		
+	cmpl	IMM (-DBL_MANT_DIG-1),d4
 #endif
-	blt	Ld$underflow	
-| It could happen that the exponent is less than 1, in which case the 
-| number is denormalized. In this case we shift right and adjust the 
-| exponent until it becomes 1 or the fraction is zero (in the latter case 
+	blt	Ld$underflow
+| It could happen that the exponent is less than 1, in which case the
+| number is denormalized. In this case we shift right and adjust the
+| exponent until it becomes 1 or the fraction is zero (in the latter case
 | we signal underflow and return zero).
 	movel	d7,a0		|
 	movel	IMM (0),d6	| use d6-d7 to collect bits flushed right
 	movel	d6,d7		| use d6-d7 to collect bits flushed right
 #ifndef __mcoldfire__
-	cmpw	IMM (1),d4	| if the exponent is less than 1 we 
+	cmpw	IMM (1),d4	| if the exponent is less than 1 we
 #else
-	cmpl	IMM (1),d4	| if the exponent is less than 1 we 
+	cmpl	IMM (1),d4	| if the exponent is less than 1 we
 #endif
 	bge	2f		| have to shift right (denormalize)
 1:
 #ifndef __mcoldfire__
 	addw	IMM (1),d4	| adjust the exponent
-	lsrl	IMM (1),d0	| shift right once 
+	lsrl	IMM (1),d0	| shift right once
 	roxrl	IMM (1),d1	|
 	roxrl	IMM (1),d2	|
 	roxrl	IMM (1),d3	|
-	roxrl	IMM (1),d6	| 
+	roxrl	IMM (1),d6	|
 	roxrl	IMM (1),d7	|
 	cmpw	IMM (1),d4	| is the exponent 1 already?
 #else
@@ -2177,17 +2083,17 @@ Lround$exit:
 #endif
 	beq	2f		| if not loop back
 	bra	1b              |
-	bra	Ld$underflow	| safety check, shouldn't execute '
-2:	orl	d6,d2		| this is a trick so we don't lose  '
+	bra	Ld$underflow	| safety check, shouldn't execute
+2:	orl	d6,d2		| this is a trick so we don't lose
 	orl	d7,d3		| the bits which were flushed right
 	movel	a0,d7		| get back sign bit into d7
 | Now call the rounding routine (which takes care of denormalized numbers):
-	lea	pc@(Lround$0),a0 | to return from rounding routine
-	PICLEA	SYM (_fpCCR),a1	| check the rounding mode
+	PICLEA	SYM (_fpCCR),a0	| check the rounding mode
 #ifdef __mcoldfire__
 	clrl	d6
 #endif
-	movew	a1@(6),d6	| rounding mode in d6
+	movew	a0@(6),d6	| rounding mode in d6
+	lea	pc@(Lround$0),a0 | to return from rounding routine
 	beq	Lround$to$nearest
 #ifndef __mcoldfire__
 	cmpw	IMM (ROUND_TO_PLUS),d6
@@ -2201,14 +2107,14 @@ Lround$0:
 | Here we have a correctly rounded result (either normalized or denormalized).
 
 | Here we should have either a normalized number or a denormalized one, and
-| the exponent is necessarily larger or equal to 1 (so we don't have to  '
-| check again for underflow!). We have to check for overflow or for a 
+| the exponent is necessarily larger or equal to 1 (so we don't have to
+| check again for underflow!). We have to check for overflow or for a
 | denormalized number (which also signals underflow).
 | Check for overflow (i.e., exponent >= 0x7ff).
 #ifndef __mcoldfire__
-	cmpw	IMM (0x07ff),d4
+	cmpw	IMM (D_MAX_EXP),d4
 #else
-	cmpl	IMM (0x07ff),d4
+	cmpl	IMM (D_MAX_EXP),d4
 #endif
 	bge	Ld$overflow
 | Now check for a denormalized number (exponent==0):
@@ -2224,22 +2130,18 @@ Lround$0:
 	bclr	IMM (DBL_MANT_DIG-32-1),d0
 	swap	d0		| and put back exponent
 #ifndef __mcoldfire__
-	orw	d4,d0		| 
+	orw	d4,d0		|
 #else
-	orl	d4,d0		| 
+	orl	d4,d0		|
 #endif
 	swap	d0		|
 	orl	d7,d0		| and sign also
 
 	PICLEA	SYM (_fpCCR),a0
-	movew	IMM (0),a0@
-#ifndef __mcoldfire__
-	moveml	sp@+,d2-d7
-#else
-	moveml	sp@,d2-d7
+	clrw	a0@
+	moveml	sp@,d2-d7/a2-a5
 	| XXX if frame pointer is ever removed, stack pointer must
 	| be adjusted here.
-#endif
 	unlk	a6
 	rts
 
@@ -2250,13 +2152,8 @@ Lround$0:
 | double __negdf2(double, double);
 	FUNC(__negdf2)
 SYM (__negdf2):
-#ifndef __mcoldfire__
-	link	a6,IMM (0)
-	moveml	d2-d7,sp@-
-#else
-	link	a6,IMM (-24)
-	moveml	d2-d7,sp@
-#endif
+	link	a6,IMM (-40)	| everything will be done in registers
+	moveml	d2-d7/a2-a5,sp@	| save all data registers and a2-a5 (but d0-d1)
 	moveq	IMM (NEGATE),d5
 	movel	a6@(8),d0	| get number to negate in d0-d1
 	movel	a6@(12),d1	|
@@ -2273,16 +2170,12 @@ SYM (__negdf2):
 	bne	Ld$inop		|
 	movel	d0,d7		| else get sign and return INFINITY
 	andl	IMM (0x80000000),d7
-	bra	Ld$infty		
+	bra	Ld$infty
 1:	PICLEA	SYM (_fpCCR),a0
-	movew	IMM (0),a0@
-#ifndef __mcoldfire__
-	moveml	sp@+,d2-d7
-#else
-	moveml	sp@,d2-d7
+	clrw	a0@
+	moveml	sp@,d2-d7/a2-a5
 	| XXX if frame pointer is ever removed, stack pointer must
 	| be adjusted here.
-#endif
 	unlk	a6
 	rts
 2:	bclr	IMM (31),d0
@@ -2292,24 +2185,47 @@ SYM (__negdf2):
 |                              __cmpdf2
 |=============================================================================
 
-GREATER =  1
-LESS    = -1
-EQUAL   =  0
-
-| int __cmpdf2_internal(double, double, int);
-SYM (__cmpdf2_internal):
-#ifndef __mcoldfire__
-	link	a6,IMM (0)
-	moveml	d2-d7,sp@- 	| save registers
-#else
-	link	a6,IMM (-24)
-	moveml	d2-d7,sp@
-#endif
-	moveq	IMM (COMPARE),d5
-	movel	a6@(8),d0	| get first operand
-	movel	a6@(12),d1	|
-	movel	a6@(16),d2	| get second operand
-	movel	a6@(20),d3	|
+| gcc expects the routines __eqdf2, __nedf2, __gtdf2, __gedf2,
+| __ledf2, __ltdf2 to all return the same value as a direct call to
+| __cmpdf2 would.  In this implementation, each of these routines
+| simply calls __cmpdf2.  It would be more efficient to give the
+| __cmpdf2 routine several names, but separating them out will make it
+| easier to write efficient versions of these routines someday.
+| If the operands recompare unordered unordered __gtdf2 and __gedf2 return -1.
+| The other routines return 1.
+
+	FUNC(__gtdf2)
+	.globl	SYM (__gtdf2)
+SYM (__gtdf2):
+	FUNC(__gedf2)
+	.globl	SYM (__gedf2)
+SYM (__gedf2):
+	lea	LESS,a0
+	jbra SYM(__cmpdf2_internal)
+
+	FUNC(__eqdf2)
+	.globl	SYM (__eqdf2)
+SYM (__eqdf2):
+	FUNC(__nedf2)
+	.globl	SYM (__nedf2)
+SYM (__nedf2):
+	FUNC(__ltdf2)
+	.globl	SYM (__ltdf2)
+SYM (__ltdf2):
+	FUNC(__ledf2)
+	.globl	SYM (__ledf2)
+SYM (__ledf2):
+
+| int __cmpdf2(double, double);
+	FUNC(__cmpdf2)
+SYM (__cmpdf2):
+	lea	GREATER,a0
+
+| int __cmpdf2_internal(double, double, int);
+SYM (__cmpdf2_internal):
+	link	a6,IMM (-40)	| everything will be done in registers
+	moveml	d2-d7/a2-a5,sp@	| save all data registers and a2-a5 (but d0-d1)
+	moveml	a6@(8),d0-d3	| get first operand into d0-d1, and second operand into d2-d3
 | First check if a and/or b are (+/-) zero and in that case clear
 | the sign bit.
 	movel	d0,d6		| copy signs into d6 (a) and d7(b)
@@ -2317,14 +2233,14 @@ SYM (__cmpdf2_internal):
 	movel	d2,d7		|
 	bclr	IMM (31),d2	|
 	cmpl	IMM (0x7ff00000),d0 | check for a == NaN
-	bhi	Lcmpd$inop		| if d0 > 0x7ff00000, a is NaN
+	bhi	Lcmpdf$inop		| if d0 > 0x7ff00000, a is NaN
 	beq	Lcmpdf$a$nf	| if equal can be INFINITY, so check d1
 	movel	d0,d4		| copy into d4 to test for zero
 	orl	d1,d4		|
 	beq	Lcmpdf$a$0	|
 Lcmpdf$0:
 	cmpl	IMM (0x7ff00000),d2 | check for b == NaN
-	bhi	Lcmpd$inop		| if d2 > 0x7ff00000, b is NaN
+	bhi	Lcmpdf$inop		| if d2 > 0x7ff00000, b is NaN
 	beq	Lcmpdf$b$nf	| if equal can be INFINITY, so check d3
 	movel	d2,d4		|
 	orl	d3,d4		|
@@ -2365,39 +2281,27 @@ Lcmpdf$1:
 	bne	Lcmpdf$a$gt$b	| |b| < |a|
 | If we got here a == b.
 	movel	IMM (EQUAL),d0
-#ifndef __mcoldfire__
-	moveml	sp@+,d2-d7 	| put back the registers
-#else
-	moveml	sp@,d2-d7
+	moveml	sp@,d2-d7/a2-a5 	| put back the registers
 	| XXX if frame pointer is ever removed, stack pointer must
 	| be adjusted here.
-#endif
 	unlk	a6
 	rts
 Lcmpdf$a$gt$b:
 	movel	IMM (GREATER),d0
-#ifndef __mcoldfire__
-	moveml	sp@+,d2-d7 	| put back the registers
-#else
-	moveml	sp@,d2-d7
+	moveml	sp@,d2-d7/a2-a5 	| put back the registers
 	| XXX if frame pointer is ever removed, stack pointer must
 	| be adjusted here.
-#endif
 	unlk	a6
 	rts
 Lcmpdf$b$gt$a:
 	movel	IMM (LESS),d0
-#ifndef __mcoldfire__
-	moveml	sp@+,d2-d7 	| put back the registers
-#else
-	moveml	sp@,d2-d7
+	moveml	sp@,d2-d7/a2-a5 	| put back the registers
 	| XXX if frame pointer is ever removed, stack pointer must
 	| be adjusted here.
-#endif
 	unlk	a6
 	rts
 
-Lcmpdf$a$0:	
+Lcmpdf$a$0:
 	bclr	IMM (31),d6
 	bra	Lcmpdf$0
 Lcmpdf$b$0:
@@ -2406,39 +2310,27 @@ Lcmpdf$b$0:
 
 Lcmpdf$a$nf:
 	tstl	d1
-	bne	Ld$inop
+	bne	Lcmpdf$inop
 	bra	Lcmpdf$0
 
 Lcmpdf$b$nf:
 	tstl	d3
-	bne	Ld$inop
+	bne	Lcmpdf$inop
 	bra	Lcmpdf$1
 
-Lcmpd$inop:
-	movl	a6@(24),d0
+Lcmpdf$inop:
+	movel	a0,d0
+	moveq	IMM (COMPARE),d5
 	moveq	IMM (INEXACT_RESULT+INVALID_OPERATION),d7
 	moveq	IMM (DOUBLE_FLOAT),d6
 	PICJUMP	$_exception_handler
 
-| int __cmpdf2(double, double);
-	FUNC(__cmpdf2)
-SYM (__cmpdf2):
-	link	a6,IMM (0)
-	pea	1
-	movl	a6@(20),sp@-
-	movl	a6@(16),sp@-
-	movl	a6@(12),sp@-
-	movl	a6@(8),sp@-
-	PICCALL	SYM (__cmpdf2_internal)
-	unlk	a6
-	rts
-
 |=============================================================================
 |                           rounding routines
 |=============================================================================
 
 | The rounding routines expect the number to be normalized in registers
-| d0-d1-d2-d3, with the exponent in register d4. They assume that the 
+| d0-d1-d2-d3, with the exponent in register d4. They assume that the
 | exponent is larger or equal to 1. They return a properly normalized number
 | if possible, and a denormalized number otherwise. The exponent is returned
 | in d4.
@@ -2451,15 +2343,15 @@ Lround$to$nearest:
 | Check for denormalized numbers:
 1:	btst	IMM (DBL_MANT_DIG-32),d0
 	bne	2f		| if set the number is normalized
-| Normalize shifting left until bit #DBL_MANT_DIG-32 is set or the exponent 
-| is one (remember that a denormalized number corresponds to an 
+| Normalize shifting left until bit #DBL_MANT_DIG-32 is set or the exponent
+| is one (remember that a denormalized number corresponds to an
 | exponent of -D_BIAS+1).
 #ifndef __mcoldfire__
 	cmpw	IMM (1),d4	| remember that the exponent is at least one
 #else
 	cmpl	IMM (1),d4	| remember that the exponent is at least one
 #endif
- 	beq	2f		| an exponent of one means denormalized
+	beq	2f		| an exponent of one means denormalized
 	addl	d3,d3		| else shift and adjust the exponent
 	addxl	d2,d2		|
 	addxl	d1,d1		|
@@ -2473,20 +2365,20 @@ Lround$to$nearest:
 2:
 | Now round: we do it as follows: after the shifting we can write the
 | fraction part as f + delta, where 1 < f < 2^25, and 0 <= delta <= 2.
-| If delta < 1, do nothing. If delta > 1, add 1 to f. 
-| If delta == 1, we make sure the rounded number will be even (odd?) 
+| If delta < 1, do nothing. If delta > 1, add 1 to f.
+| If delta == 1, we make sure the rounded number will be even (odd?)
 | (after shifting).
 	btst	IMM (0),d1	| is delta < 1?
 	beq	2f		| if so, do not do anything
 	orl	d2,d3		| is delta == 1?
 	bne	1f		| if so round to even
-	movel	d1,d3		| 
+	movel	d1,d3		|
 	andl	IMM (2),d3	| bit 1 is the last significant bit
 	movel	IMM (0),d2	|
 	addl	d3,d1		|
 	addxl	d2,d0		|
-	bra	2f		| 
-1:	movel	IMM (1),d3	| else add 1 
+	bra	2f		|
+1:	movel	IMM (1),d3	| else add 1
 	movel	IMM (0),d2	|
 	addl	d3,d1		|
 	addxl	d2,d0
@@ -2494,7 +2386,7 @@ Lround$to$nearest:
 2:
 #ifndef __mcoldfire__
 	lsrl	IMM (1),d0
-	roxrl	IMM (1),d1		
+	roxrl	IMM (1),d1
 #else
 	lsrl	IMM (1),d1
 	btst	IMM (0),d0
@@ -2505,7 +2397,7 @@ Lround$to$nearest:
 
 | Now check again bit #DBL_MANT_DIG-32 (rounding could have produced a
 | 'fraction overflow' ...).
-	btst	IMM (DBL_MANT_DIG-32),d0	
+	btst	IMM (DBL_MANT_DIG-32),d0
 	beq	1f
 #ifndef __mcoldfire__
 	lsrl	IMM (1),d0
@@ -2520,7 +2412,7 @@ Lround$to$nearest:
 	addl	IMM (1),d4
 #endif
 1:
-| If bit #DBL_MANT_DIG-32-1 is clear we have a denormalized number, so we 
+| If bit #DBL_MANT_DIG-32-1 is clear we have a denormalized number, so we
 | have to put the exponent to zero and return a denormalized number.
 	btst	IMM (DBL_MANT_DIG-32-1),d0
 	beq	1f
@@ -2536,6 +2428,26 @@ Lround$to$minus:
 
 #ifdef  L_float
 
+|=============================================================================
+|=============================================================================
+|                         single precision routines
+|=============================================================================
+|=============================================================================
+
+| A single precision floating point number (float) has the format:
+|
+| struct _float {
+|  unsigned int sign      : 1;  /* sign bit */
+|  unsigned int exponent  : 8;  /* exponent, shifted by 126 */
+|  unsigned int fraction  : 23; /* fraction */
+| } float;
+|
+| Thus sizeof(float) = 4 (32 bits).
+|
+| All the routines are callable from C programs, and return the result
+| in the single register d0. They also preserve all registers except
+| d0-d1 and a0-a1.
+
 	.globl	SYM (_fpCCR)
 	.globl  $_exception_handler
 
@@ -2549,29 +2461,6 @@ FLT_MAX_EXP    = F_MAX_EXP - F_BIAS
 FLT_MIN_EXP    = 1 - F_BIAS
 FLT_MANT_DIG   = 24
 
-INEXACT_RESULT 		= 0x0001
-UNDERFLOW 		= 0x0002
-OVERFLOW 		= 0x0004
-DIVIDE_BY_ZERO 		= 0x0008
-INVALID_OPERATION 	= 0x0010
-
-SINGLE_FLOAT = 1
-
-NOOP         = 0
-ADD          = 1
-MULTIPLY     = 2
-DIVIDE       = 3
-NEGATE       = 4
-COMPARE      = 5
-EXTENDSFDF   = 6
-TRUNCDFSF    = 7
-
-UNKNOWN           = -1
-ROUND_TO_NEAREST  = 0 | round result to nearest representable value
-ROUND_TO_ZERO     = 1 | round result towards zero
-ROUND_TO_PLUS     = 2 | round result towards plus infinity
-ROUND_TO_MINUS    = 3 | round result towards minus infinity
-
 | Entry points:
 
 	.globl SYM (__addsf3)
@@ -2581,9 +2470,11 @@ ROUND_TO_MINUS    = 3 | round result towards minus infinity
 	.globl SYM (__negsf2)
 	.globl SYM (__cmpsf2)
 	.globl SYM (__cmpsf2_internal)
+#ifdef __ELF__
 	.hidden SYM (__cmpsf2_internal)
+#endif
 
-| These are common routines to return and signal exceptions.	
+| These are common routines to return and signal exceptions.
 
 	.text
 	.even
@@ -2597,7 +2488,7 @@ Lf$den:
 
 Lf$infty:
 Lf$overflow:
-| Return a properly signed INFINITY and set the exception flags 
+| Return a properly signed INFINITY and set the exception flags
 	movel	IMM (INFINITY),d0
 	orl	d7,d0
 	moveq	IMM (INEXACT_RESULT+OVERFLOW),d7
@@ -2605,7 +2496,7 @@ Lf$overflow:
 	PICJUMP	$_exception_handler
 
 Lf$underflow:
-| Return 0 and set the exception flags 
+| Return 0 and set the exception flags
 	moveq	IMM (0),d0
 	moveq	IMM (INEXACT_RESULT+UNDERFLOW),d7
 	moveq	IMM (SINGLE_FLOAT),d6
@@ -2626,26 +2517,6 @@ Lf$div$0:
 	moveq	IMM (SINGLE_FLOAT),d6
 	PICJUMP	$_exception_handler
 
-|=============================================================================
-|=============================================================================
-|                         single precision routines
-|=============================================================================
-|=============================================================================
-
-| A single precision floating point number (float) has the format:
-|
-| struct _float {
-|  unsigned int sign      : 1;  /* sign bit */ 
-|  unsigned int exponent  : 8;  /* exponent, shifted by 126 */
-|  unsigned int fraction  : 23; /* fraction */
-| } float;
-| 
-| Thus sizeof(float) = 4 (32 bits). 
-|
-| All the routines are callable from C programs, and return the result 
-| in the single register d0. They also preserve all registers except 
-| d0-d1 and a0-a1.
-
 |=============================================================================
 |                              __subsf3
 |=============================================================================
@@ -2653,8 +2524,14 @@ Lf$div$0:
 | float __subsf3(float, float);
 	FUNC(__subsf3)
 SYM (__subsf3):
+#ifdef __FASTCALL__
+	bchg	IMM (31),d1   	| change sign of second operand
+				| and fall through
+#else
 	bchg	IMM (31),sp@(8)	| change sign of second operand
 				| and fall through
+#endif
+
 |=============================================================================
 |                              __addsf3
 |=============================================================================
@@ -2662,19 +2539,18 @@ SYM (__subsf3):
 | float __addsf3(float, float);
 	FUNC(__addsf3)
 SYM (__addsf3):
-#ifndef __mcoldfire__
-	link	a6,IMM (0)	| everything will be done in registers
-	moveml	d2-d7,sp@-	| save all data registers but d0-d1
-#else
-	link	a6,IMM (-24)
-	moveml	d2-d7,sp@
-#endif
+	link	a6,IMM (-40)	| everything will be done in registers
+	moveml	d2-d7/a2-a5,sp@	| save all data registers and a2-a5 (but d0-d1)
+#ifndef __FASTCALL__
 	movel	a6@(8),d0	| get first operand
 	movel	a6@(12),d1	| get second operand
-	movel	d0,a0		| get d0's sign bit '
+#endif
+	movel	d0,a2		| store first operand
+	movel	d1,a3		| store second operand
+	movel	d0,a0		| get d0's sign bit
 	addl	d0,d0		| check and clear sign bit of a
 	beq	Laddsf$b	| if zero return second operand
-	movel	d1,a1		| save b's sign bit '
+	movel	d1,a1		| save b's sign bit
 	addl	d1,d1		| get rid of sign bit
 	beq	Laddsf$a	| if zero return first operand
 
@@ -2693,9 +2569,9 @@ SYM (__addsf3):
 	swap	d6		| put exponent into first word
 	orl	d5,d0		| and put hidden bit back
 Laddsf$1:
-| Now we have a's exponent in d6 (second byte) and the mantissa in d0. '
+| Now we have a's exponent in d6 (second byte) and the mantissa in d0.
 	movel	d1,d7		| get exponent in d7
-	andl	d4,d7		| 
+	andl	d4,d7		|
 	beq	Laddsf$b$den	| branch if b is denormalized
 	cmpl	d4,d7		| check for INFINITY or NaN
 	beq	Laddsf$nf
@@ -2704,9 +2580,9 @@ Laddsf$1:
 	andl	d4,d1		| get fraction in d1
 	orl	d5,d1		| and put hidden bit back
 Laddsf$2:
-| Now we have b's exponent in d7 (second byte) and the mantissa in d1. '
+| Now we have b's exponent in d7 (second byte) and the mantissa in d1.
 
-| Note that the hidden bit corresponds to bit #FLT_MANT_DIG-1, and we 
+| Note that the hidden bit corresponds to bit #FLT_MANT_DIG-1, and we
 | shifted right once, so bit #FLT_MANT_DIG is set (so we have one extra
 | bit).
 
@@ -2717,14 +2593,14 @@ Laddsf$2:
 
 | Here we shift the numbers in registers d0 and d1 so the exponents are the
 | same, and put the largest exponent in d6. Note that we are using two
-| registers for each number (see the discussion by D. Knuth in "Seminumerical 
+| registers for each number (see the discussion by D. Knuth in "Seminumerical
 | Algorithms").
 #ifndef __mcoldfire__
 	cmpw	d6,d7		| compare exponents
 #else
 	cmpl	d6,d7		| compare exponents
 #endif
-	beq	Laddsf$3	| if equal don't shift '
+	beq	Laddsf$3	| if equal don't shift
 	bhi	5f		| branch if second exponent largest
 1:
 	subl	d6,d7		| keep the largest exponent
@@ -2734,11 +2610,11 @@ Laddsf$2:
 #else
 	lsrl	IMM (8),d7	| put difference in lower byte
 #endif
-| if difference is too large we don't shift (actually, we can just exit) '
+| if difference is too large we don't shift (actually, we can just exit)
 #ifndef __mcoldfire__
-	cmpw	IMM (FLT_MANT_DIG+2),d7		
+	cmpw	IMM (FLT_MANT_DIG+2),d7
 #else
-	cmpl	IMM (FLT_MANT_DIG+2),d7		
+	cmpl	IMM (FLT_MANT_DIG+2),d7
 #endif
 	bge	Laddsf$b$small
 #ifndef __mcoldfire__
@@ -2795,11 +2671,11 @@ Laddsf$2:
 #else
 	lsrl	IMM (8),d7	| put difference in lower byte
 #endif
-| if difference is too large we don't shift (and exit!) '
+| if difference is too large we don't shift (and exit!)
 #ifndef __mcoldfire__
-	cmpw	IMM (FLT_MANT_DIG+2),d7		
+	cmpw	IMM (FLT_MANT_DIG+2),d7
 #else
-	cmpl	IMM (FLT_MANT_DIG+2),d7		
+	cmpl	IMM (FLT_MANT_DIG+2),d7
 #endif
 	bge	Laddsf$a$small
 #ifndef __mcoldfire__
@@ -2859,7 +2735,7 @@ Laddsf$3:
 	movel	d4,a1
 #endif
 	eorl	d6,d7		| combine sign bits
-	bmi	Lsubsf$0	| if negative a and b have opposite 
+	bmi	Lsubsf$0	| if negative a and b have opposite
 				| sign so we actually subtract the
 				| numbers
 
@@ -2876,7 +2752,7 @@ Laddsf$3:
 | Here we do the addition.
 	addl	d3,d1
 	addxl	d2,d0
-| Note: now we have d2, d3, d4 and d5 to play with! 
+| Note: now we have d2, d3, d4 and d5 to play with!
 
 | Put the exponent, in the first byte, in d2, to use the "standard" rounding
 | routines:
@@ -2889,9 +2765,9 @@ Laddsf$3:
 
 | Before rounding normalize so bit #FLT_MANT_DIG is set (we will consider
 | the case of denormalized numbers in the rounding routine itself).
-| As in the addition (not in the subtraction!) we could have set 
+| As in the addition (not in the subtraction!) we could have set
 | one more bit we check this:
-	btst	IMM (FLT_MANT_DIG+1),d0	
+	btst	IMM (FLT_MANT_DIG+1),d0
 	beq	1f
 #ifndef __mcoldfire__
 	lsrl	IMM (1),d0
@@ -2905,12 +2781,12 @@ Laddsf$3:
 #endif
 	addl	IMM (1),d2
 1:
-	lea	pc@(Laddsf$4),a0 | to return from rounding routine
-	PICLEA	SYM (_fpCCR),a1	| check the rounding mode
+	PICLEA	SYM (_fpCCR),a0	| check the rounding mode
 #ifdef __mcoldfire__
 	clrl	d6
 #endif
-	movew	a1@(6),d6	| rounding mode in d6
+	movew	a0@(6),d6	| ROUND rounding mode in d6
+	lea	pc@(Laddsf$4),a0 | to return from rounding routine
 	beq	Lround$to$nearest
 #ifndef __mcoldfire__
 	cmpw	IMM (ROUND_TO_PLUS),d6
@@ -2923,9 +2799,9 @@ Laddsf$3:
 Laddsf$4:
 | Put back the exponent, but check for overflow.
 #ifndef __mcoldfire__
-	cmpw	IMM (0xff),d2
+	cmpw	IMM (F_MAX_EXP),d2
 #else
-	cmpl	IMM (0xff),d2
+	cmpl	IMM (F_MAX_EXP),d2
 #endif
 	bhi	1f
 	bclr	IMM (FLT_MANT_DIG-1),d0
@@ -2970,12 +2846,12 @@ Lsubsf$0:
 | Note that we do not have to normalize, since in the subtraction bit
 | #FLT_MANT_DIG+1 is never set, and denormalized numbers are handled by
 | the rounding routines themselves.
-	lea	pc@(Lsubsf$1),a0 | to return from rounding routine
-	PICLEA	SYM (_fpCCR),a1	| check the rounding mode
+	PICLEA	SYM (_fpCCR),a0	| check the rounding mode
 #ifdef __mcoldfire__
 	clrl	d6
 #endif
-	movew	a1@(6),d6	| rounding mode in d6
+	movew	a0@(6),d6	| rounding mode in d6
+	lea	pc@(Lsubsf$1),a0 | to return from rounding routine
 	beq	Lround$to$nearest
 #ifndef __mcoldfire__
 	cmpw	IMM (ROUND_TO_PLUS),d6
@@ -2986,7 +2862,7 @@ Lsubsf$0:
 	blt	Lround$to$zero
 	bra	Lround$to$plus
 Lsubsf$1:
-| Put back the exponent (we can't have overflow!). '
+| Put back the exponent (we can't have overflow!).
 	bclr	IMM (FLT_MANT_DIG-1),d0
 #ifndef __mcoldfire__
 	lslw	IMM (7),d2
@@ -2997,36 +2873,28 @@ Lsubsf$1:
 	orl	d2,d0
 	bra	Laddsf$ret
 
-| If one of the numbers was too small (difference of exponents >= 
-| FLT_MANT_DIG+2) we return the other (and now we don't have to '
+| If one of the numbers was too small (difference of exponents >=
+| FLT_MANT_DIG+2) we return the other (and now we don't have to
 | check for finiteness or zero).
 Laddsf$a$small:
-	movel	a6@(12),d0
+	movel	a3,d0
 	PICLEA	SYM (_fpCCR),a0
-	movew	IMM (0),a0@
-#ifndef __mcoldfire__
-	moveml	sp@+,d2-d7	| restore data registers
-#else
-	moveml	sp@,d2-d7
+	clrw	a0@
+	moveml	sp@,d2-d7/a2-a5
 	| XXX if frame pointer is ever removed, stack pointer must
 	| be adjusted here.
-#endif
-	unlk	a6		| and return
-	rts
+	unlk	a6
+	rts		| and return
 
 Laddsf$b$small:
-	movel	a6@(8),d0
+	movel	a2,d0
 	PICLEA	SYM (_fpCCR),a0
-	movew	IMM (0),a0@
-#ifndef __mcoldfire__
-	moveml	sp@+,d2-d7	| restore data registers
-#else
-	moveml	sp@,d2-d7
+	clrw	a0@
+	moveml	sp@,d2-d7/a2-a5
 	| XXX if frame pointer is ever removed, stack pointer must
 	| be adjusted here.
-#endif
-	unlk	a6		| and return
-	rts
+	unlk	a6
+	rts		| and return
 
 | If the numbers are denormalized remember to put exponent equal to 1.
 
@@ -3042,12 +2910,12 @@ Laddsf$b$den:
 				| (this was not executed after the jump)
 	bra	Laddsf$2
 
-| The rest is mainly code for the different results which can be 
+| The rest is mainly code for the different results which can be
 | returned (checking always for +/-INFINITY and NaN).
 
 Laddsf$b:
 | Return b (if a is zero).
-	movel	a6@(12),d0
+	movel	a3,d0
 	cmpl	IMM (0x80000000),d0	| Check if b is -0
 	bne	1f
 	movel	a0,d7
@@ -3056,7 +2924,7 @@ Laddsf$b:
 	bra	Laddsf$ret
 Laddsf$a:
 | Return a (if b is zero).
-	movel	a6@(8),d0
+	movel	a2,d0
 1:
 	moveq	IMM (ADD),d5
 | We have to check for NaN and +/-infty.
@@ -3065,7 +2933,7 @@ Laddsf$a:
 	bclr	IMM (31),d0		| clear sign
 	cmpl	IMM (INFINITY),d0	| check for infty or NaN
 	bge	2f
-	movel	d0,d0		| check for zero (we do this because we don't '
+	movel	d0,d0		| check for zero (we do this because we don't
 	bne	Laddsf$ret	| want to return -0 by mistake
 	bclr	IMM (31),d7	| if zero be sure to clear sign
 	bra	Laddsf$ret	| if everything OK just return
@@ -3079,27 +2947,23 @@ Laddsf$ret:
 | Normal exit (a and b nonzero, result is not NaN nor +/-infty).
 | We have to clear the exception flags (just the exception type).
 	PICLEA	SYM (_fpCCR),a0
-	movew	IMM (0),a0@
+	clrw	a0@
 	orl	d7,d0		| put sign bit
-#ifndef __mcoldfire__
-	moveml	sp@+,d2-d7	| restore data registers
-#else
-	moveml	sp@,d2-d7
+	moveml	sp@,d2-d7/a2-a5	| restore data registers
 	| XXX if frame pointer is ever removed, stack pointer must
 	| be adjusted here.
-#endif
-	unlk	a6		| and return
-	rts
+	unlk	a6
+	rts		| and return
 
 Laddsf$ret$den:
-| Return a denormalized number (for addition we don't signal underflow) '
+| Return a denormalized number (for addition we don't signal underflow)
 	lsrl	IMM (1),d0	| remember to shift right back once
 	bra	Laddsf$ret	| and return
 
-| Note: when adding two floats of the same sign if either one is 
-| NaN we return NaN without regard to whether the other is finite or 
-| not. When subtracting them (i.e., when adding two numbers of 
-| opposite signs) things are more complicated: if both are INFINITY 
+| Note: when adding two floats of the same sign if either one is
+| NaN we return NaN without regard to whether the other is finite or
+| not. When subtracting them (i.e., when adding two numbers of
+| opposite signs) things are more complicated: if both are INFINITY
 | we return NaN, if only one is INFINITY and the other is NaN we return
 | NaN, but if it is finite we return INFINITY with the corresponding sign.
 
@@ -3107,21 +2971,21 @@ Laddsf$nf:
 	moveq	IMM (ADD),d5
 | This could be faster but it is not worth the effort, since it is not
 | executed very often. We sacrifice speed for clarity here.
-	movel	a6@(8),d0	| get the numbers back (remember that we
-	movel	a6@(12),d1	| did some processing already)
+	movel	a2,d0	| get the numbers back (remember that we
+	movel	a3,d1	| did some processing already)
 	movel	IMM (INFINITY),d4 | useful constant (INFINITY)
 	movel	d0,d2		| save sign bits
 	movel	d0,d7		| into d7 as well as we may need the sign
-				| bit before jumping to LfSinfty
+				| bit before jumping to Lf$infty
 	movel	d1,d3
 	bclr	IMM (31),d0	| clear sign bits
 	bclr	IMM (31),d1
 | We know that one of them is either NaN of +/-INFINITY
 | Check for NaN (if either one is NaN return NaN)
 	cmpl	d4,d0		| check first a (d0)
-	bhi	Lf$inop		
+	bhi	Lf$inop
 	cmpl	d4,d1		| check now b (d1)
-	bhi	Lf$inop		
+	bhi	Lf$inop
 | Now comes the check for +/-INFINITY. We know that both are (maybe not
 | finite) numbers, but we have to check if both are infinite whether we
 | are adding or subtracting them.
@@ -3136,7 +3000,7 @@ Laddsf$nf:
 	cmpl	d1,d0		| are both infinite?
 	beq	Lf$inop		| if so return NaN
 
-	andl	IMM (0x80000000),d7 | get a's sign bit '
+	andl	IMM (0x80000000),d7 | get a's sign bit
 	cmpl	d4,d0		| test now for infinity
 	beq	Lf$infty	| if a is INFINITY return with this sign
 	bchg	IMM (31),d7	| else we know b is INFINITY and has
@@ -3149,15 +3013,14 @@ Laddsf$nf:
 | float __mulsf3(float, float);
 	FUNC(__mulsf3)
 SYM (__mulsf3):
-#ifndef __mcoldfire__
-	link	a6,IMM (0)
-	moveml	d2-d7,sp@-
-#else
-	link	a6,IMM (-24)
-	moveml	d2-d7,sp@
-#endif
+	link	a6,IMM (-40)	| everything will be done in registers
+	moveml	d2-d7/a2-a5,sp@	| save all data registers and a2-a5 (but d0-d1)
+#ifndef __FASTCALL__
 	movel	a6@(8),d0	| get a into d0
 	movel	a6@(12),d1	| and b into d1
+#endif
+	movel	d0,a2		| store a into a0
+	movel	d1,a3		| store b into a1
 	movel	d0,d7		| d7 will hold the sign of the product
 	eorl	d1,d7		|
 	andl	IMM (0x80000000),d7
@@ -3165,10 +3028,10 @@ SYM (__mulsf3):
 	movel	d6,d5			| another (mask for fraction)
 	notl	d5			|
 	movel	IMM (0x00800000),d4	| this is to put hidden bit back
-	bclr	IMM (31),d0		| get rid of a's sign bit '
+	bclr	IMM (31),d0		| get rid of a's sign bit
 	movel	d0,d2			|
 	beq	Lmulsf$a$0		| branch if a is zero
-	bclr	IMM (31),d1		| get rid of b's sign bit '
+	bclr	IMM (31),d1		| get rid of b's sign bit
 	movel	d1,d3		|
 	beq	Lmulsf$b$0	| branch if b is zero
 	cmpl	d6,d0		| is a big?
@@ -3185,9 +3048,9 @@ SYM (__mulsf3):
 	orl	d4,d0		| and put hidden bit back
 	swap	d2		| I like exponents in the first byte
 #ifndef __mcoldfire__
-	lsrw	IMM (7),d2	| 
+	lsrw	IMM (7),d2	|
 #else
-	lsrl	IMM (7),d2	| 
+	lsrl	IMM (7),d2	|
 #endif
 Lmulsf$1:			| number
 	andl	d6,d3		|
@@ -3210,10 +3073,10 @@ Lmulsf$2:			|
 #endif
 
 | We are now ready to do the multiplication. The situation is as follows:
-| both a and b have bit FLT_MANT_DIG-1 set (even if they were 
-| denormalized to start with!), which means that in the product 
-| bit 2*(FLT_MANT_DIG-1) (that is, bit 2*FLT_MANT_DIG-2-32 of the 
-| high long) is set. 
+| both a and b have bit FLT_MANT_DIG-1 set (even if they were
+| denormalized to start with!), which means that in the product
+| bit 2*(FLT_MANT_DIG-1) (that is, bit 2*FLT_MANT_DIG-2-32 of the
+| high long) is set.
 
 | To do the multiplication let us move the number a little bit around ...
 	movel	d1,d6		| second operand in d6
@@ -3223,11 +3086,11 @@ Lmulsf$2:			|
 	movel	d4,d0
 
 | now bit FLT_MANT_DIG-1 becomes bit 31:
-	lsll	IMM (31-FLT_MANT_DIG+1),d6		
+	lsll	IMM (31-FLT_MANT_DIG+1),d6
 
 | Start the loop (we loop #FLT_MANT_DIG times):
-	moveq	IMM (FLT_MANT_DIG-1),d3	
-1:	addl	d1,d1		| shift sum 
+	moveq	IMM (FLT_MANT_DIG-1),d3
+1:	addl	d1,d1		| shift sum
 	addxl	d0,d0
 	lsll	IMM (1),d6	| get bit bn
 	bcc	2f		| if not set skip sum
@@ -3242,7 +3105,7 @@ Lmulsf$2:			|
 #endif
 
 | Now we have the product in d0-d1, with bit (FLT_MANT_DIG - 1) + FLT_MANT_DIG
-| (mod 32) of d0 set. The first thing to do now is to normalize it so bit 
+| (mod 32) of d0 set. The first thing to do now is to normalize it so bit
 | FLT_MANT_DIG is set (to do the rounding).
 #ifndef __mcoldfire__
 	rorl	IMM (6),d1
@@ -3270,7 +3133,7 @@ Lmulsf$2:			|
 #endif
 
 	moveq	IMM (MULTIPLY),d5
-	
+
 	btst	IMM (FLT_MANT_DIG+1),d0
 	beq	Lround$exit
 #ifndef __mcoldfire__
@@ -3303,31 +3166,27 @@ Lmulsf$inf:
 	bhi	Lf$inop		| if so return NaN
 	bra	Lf$overflow	| else return +/-INFINITY
 
-| If either number is zero return zero, unless the other is +/-INFINITY, 
+| If either number is zero return zero, unless the other is +/-INFINITY,
 | or NaN, in which case we return NaN.
 Lmulsf$b$0:
 | Here d1 (==b) is zero.
-	movel	a6@(8),d1	| get a again to check for non-finiteness
+	movel	a2,d1		| get a again to check for non-finiteness
 	bra	1f
 Lmulsf$a$0:
-	movel	a6@(12),d1	| get b again to check for non-finiteness
-1:	bclr	IMM (31),d1	| clear sign bit 
+	movel	a3,d1	| get b again to check for non-finiteness
+1:	bclr	IMM (31),d1	| clear sign bit
 	cmpl	IMM (INFINITY),d1 | and check for a large exponent
 	bge	Lf$inop		| if b is +/-INFINITY or NaN return NaN
 	movel	d7,d0		| else return signed zero
 	PICLEA	SYM (_fpCCR),a0	|
-	movew	IMM (0),a0@	| 
-#ifndef __mcoldfire__
-	moveml	sp@+,d2-d7	| 
-#else
-	moveml	sp@,d2-d7
+	clrw	a0@	|
+	moveml	sp@,d2-d7/a2-a5
 	| XXX if frame pointer is ever removed, stack pointer must
 	| be adjusted here.
-#endif
-	unlk	a6		| 
-	rts			| 
+	unlk	a6		|
+	rts			|
 
-| If a number is denormalized we put an exponent of 1 but do not put the 
+| If a number is denormalized we put an exponent of 1 but do not put the
 | hidden bit back into the fraction; instead we shift left until bit 23
 | (the hidden bit) is set, adjusting the exponent accordingly. We do this
 | to ensure that the product of the fractions is close to 1.
@@ -3364,32 +3223,29 @@ Lmulsf$b$den:
 | float __divsf3(float, float);
 	FUNC(__divsf3)
 SYM (__divsf3):
-#ifndef __mcoldfire__
-	link	a6,IMM (0)
-	moveml	d2-d7,sp@-
-#else
-	link	a6,IMM (-24)
-	moveml	d2-d7,sp@
-#endif
+	link	a6,IMM (-40)	| everything will be done in registers
+	moveml	d2-d7/a2-a5,sp@	| save all data registers and a2-a5 (but d0-d1)
+#ifndef __FASTCALL
 	movel	a6@(8),d0		| get a into d0
 	movel	a6@(12),d1		| and b into d1
+#endif
 	movel	d0,d7			| d7 will hold the sign of the result
 	eorl	d1,d7			|
-	andl	IMM (0x80000000),d7	| 
+	andl	IMM (0x80000000),d7	|
 	movel	IMM (INFINITY),d6	| useful constant (+INFINITY)
 	movel	d6,d5			| another (mask for fraction)
 	notl	d5			|
 	movel	IMM (0x00800000),d4	| this is to put hidden bit back
-	bclr	IMM (31),d0		| get rid of a's sign bit '
+	bclr	IMM (31),d0		| get rid of a's sign bit
 	movel	d0,d2			|
 	beq	Ldivsf$a$0		| branch if a is zero
-	bclr	IMM (31),d1		| get rid of b's sign bit '
+	bclr	IMM (31),d1		| get rid of b's sign bit
 	movel	d1,d3			|
 	beq	Ldivsf$b$0		| branch if b is zero
 	cmpl	d6,d0			| is a big?
 	bhi	Ldivsf$inop		| if a is NaN return NaN
 	beq	Ldivsf$inf		| if a is INFINITY we have to check b
-	cmpl	d6,d1			| now compare b with INFINITY 
+	cmpl	d6,d1			| now compare b with INFINITY
 	bhi	Ldivsf$inop		| if b is NaN return NaN
 	beq	Ldivsf$underflow
 | Here we have both numbers finite and nonzero (and with no sign bit).
@@ -3402,11 +3258,11 @@ SYM (__divsf3):
 	orl	d4,d0		| and put hidden bit back
 	swap	d2		| I like exponents in the first byte
 #ifndef __mcoldfire__
-	lsrw	IMM (7),d2	| 
+	lsrw	IMM (7),d2	|
 #else
-	lsrl	IMM (7),d2	| 
+	lsrl	IMM (7),d2	|
 #endif
-Ldivsf$1:			| 
+Ldivsf$1:			|
 	andl	d6,d3		|
 	beq	Ldivsf$b$den	|
 	andl	d5,d1		|
@@ -3425,7 +3281,7 @@ Ldivsf$2:			|
 	subl	d3,d2		| subtract exponents
  	addl	IMM (F_BIAS),d2	| and add bias
 #endif
- 
+
 | We are now ready to do the division. We have prepared things in such a way
 | that the ratio of the fractions will be less than 2 but greater than 1/2.
 | At this point the registers in use are:
@@ -3435,7 +3291,7 @@ Ldivsf$2:			|
 | d7	holds the sign of the ratio
 | d4, d5, d6 hold some constants
 	movel	d7,a0		| d6-d7 will hold the ratio of the fractions
-	movel	IMM (0),d6	| 
+	movel	IMM (0),d6	|
 	movel	d6,d7
 
 	moveq	IMM (FLT_MANT_DIG+1),d3
@@ -3478,10 +3334,10 @@ Ldivsf$2:			|
 	movel	d6,d0		| put the ratio in d0-d1
 	movel	a0,d7		| get sign back
 
-| Because of the normalization we did before we are guaranteed that 
+| Because of the normalization we did before we are guaranteed that
 | d0 is smaller than 2^26 but larger than 2^24. Thus bit 26 is not set,
 | bit 25 could be set, and if it is not set then bit 24 is necessarily set.
-	btst	IMM (FLT_MANT_DIG+1),d0		
+	btst	IMM (FLT_MANT_DIG+1),d0
 	beq	1f              | if it is not set, then bit 24 is set
 	lsrl	IMM (1),d0	|
 #ifndef __mcoldfire__
@@ -3514,24 +3370,20 @@ Ldivsf$a$0:
 	andl	IMM (0x7fffffff),d1	| clear sign bit and test b
 	beq	Lf$inop			| if b is also zero return NaN
 	cmpl	IMM (INFINITY),d1	| check for NaN
-	bhi	Lf$inop			| 
+	bhi	Lf$inop			|
 	movel	d7,d0			| else return signed zero
 	PICLEA	SYM (_fpCCR),a0		|
-	movew	IMM (0),a0@		|
-#ifndef __mcoldfire__
-	moveml	sp@+,d2-d7		| 
-#else
-	moveml	sp@,d2-d7		| 
+	clrw	a0@		|
+	moveml	sp@,d2-d7/a2-a5		|
 	| XXX if frame pointer is ever removed, stack pointer must
 	| be adjusted here.
-#endif
-	unlk	a6			| 
-	rts				| 
-	
+	unlk	a6			|
+	rts				|
+
 Ldivsf$b$0:
 	moveq	IMM (DIVIDE),d5
 | If we got here a is not zero. Check if a is NaN; in that case return NaN,
-| else return +/-INFINITY. Remember that a is in d0 with the sign bit 
+| else return +/-INFINITY. Remember that a is in d0 with the sign bit
 | cleared already.
 	cmpl	IMM (INFINITY),d0	| compare d0 with INFINITY
 	bhi	Lf$inop			| if larger it is NaN
@@ -3540,11 +3392,11 @@ Ldivsf$b$0:
 Ldivsf$inf:
 	moveq	IMM (DIVIDE),d5
 | If a is INFINITY we have to check b
-	cmpl	IMM (INFINITY),d1	| compare b with INFINITY 
+	cmpl	IMM (INFINITY),d1	| compare b with INFINITY
 	bge	Lf$inop			| if b is NaN or INFINITY return NaN
 	bra	Lf$overflow		| else return overflow
 
-| If a number is denormalized we put an exponent of 1 but do not put the 
+| If a number is denormalized we put an exponent of 1 but do not put the
 | bit back into the fraction.
 Ldivsf$a$den:
 	movel	IMM (1),d2
@@ -3573,30 +3425,30 @@ Ldivsf$b$den:
 	bra	1b
 
 Lround$exit:
-| This is a common exit point for __mulsf3 and __divsf3. 
+| This is a common exit point for __mulsf3 and __divsf3.
 
 | First check for underlow in the exponent:
 #ifndef __mcoldfire__
-	cmpw	IMM (-FLT_MANT_DIG-1),d2		
+	cmpw	IMM (-FLT_MANT_DIG-1),d2
 #else
-	cmpl	IMM (-FLT_MANT_DIG-1),d2		
+	cmpl	IMM (-FLT_MANT_DIG-1),d2
 #endif
-	blt	Lf$underflow	
-| It could happen that the exponent is less than 1, in which case the 
-| number is denormalized. In this case we shift right and adjust the 
-| exponent until it becomes 1 or the fraction is zero (in the latter case 
+	blt	Lf$underflow
+| It could happen that the exponent is less than 1, in which case the
+| number is denormalized. In this case we shift right and adjust the
+| exponent until it becomes 1 or the fraction is zero (in the latter case
 | we signal underflow and return zero).
 	movel	IMM (0),d6	| d6 is used temporarily
 #ifndef __mcoldfire__
-	cmpw	IMM (1),d2	| if the exponent is less than 1 we 
+	cmpw	IMM (1),d2	| if the exponent is less than 1 we
 #else
-	cmpl	IMM (1),d2	| if the exponent is less than 1 we 
+	cmpl	IMM (1),d2	| if the exponent is less than 1 we
 #endif
 	bge	2f		| have to shift right (denormalize)
 1:
 #ifndef __mcoldfire__
 	addw	IMM (1),d2	| adjust the exponent
-	lsrl	IMM (1),d0	| shift right once 
+	lsrl	IMM (1),d0	| shift right once
 	roxrl	IMM (1),d1	|
 	roxrl	IMM (1),d6	| d6 collect bits we would lose otherwise
 	cmpw	IMM (1),d2	| is the exponent 1 already?
@@ -3615,16 +3467,16 @@ Lround$exit:
 #endif
 	beq	2f		| if not loop back
 	bra	1b              |
-	bra	Lf$underflow	| safety check, shouldn't execute '
-2:	orl	d6,d1		| this is a trick so we don't lose  '
+	bra	Lf$underflow	| safety check, shouldn't execute
+2:	orl	d6,d1		| this is a trick so we don't lose
 				| the extra bits which were flushed right
 | Now call the rounding routine (which takes care of denormalized numbers):
-	lea	pc@(Lround$0),a0 | to return from rounding routine
-	PICLEA	SYM (_fpCCR),a1	| check the rounding mode
+	PICLEA	SYM (_fpCCR),a0	| check the rounding mode
 #ifdef __mcoldfire__
 	clrl	d6
 #endif
-	movew	a1@(6),d6	| rounding mode in d6
+	movew	a0@(6),d6	| rounding mode in d6
+	lea	pc@(Lround$0),a0 | to return from rounding routine
 	beq	Lround$to$nearest
 #ifndef __mcoldfire__
 	cmpw	IMM (ROUND_TO_PLUS),d6
@@ -3638,14 +3490,14 @@ Lround$0:
 | Here we have a correctly rounded result (either normalized or denormalized).
 
 | Here we should have either a normalized number or a denormalized one, and
-| the exponent is necessarily larger or equal to 1 (so we don't have to  '
-| check again for underflow!). We have to check for overflow or for a 
+| the exponent is necessarily larger or equal to 1 (so we don't have to
+| check again for underflow!). We have to check for overflow or for a
 | denormalized number (which also signals underflow).
 | Check for overflow (i.e., exponent >= 255).
 #ifndef __mcoldfire__
-	cmpw	IMM (0x00ff),d2
+	cmpw	IMM (F_MAX_EXP),d2
 #else
-	cmpl	IMM (0x00ff),d2
+	cmpl	IMM (F_MAX_EXP),d2
 #endif
 	bge	Lf$overflow
 | Now check for a denormalized number (exponent==0).
@@ -3661,7 +3513,7 @@ Lround$0:
 	bclr	IMM (FLT_MANT_DIG-1),d0
 	swap	d0		| and put back exponent
 #ifndef __mcoldfire__
-	orw	d2,d0		| 
+	orw	d2,d0		|
 #else
 	orl	d2,d0
 #endif
@@ -3669,14 +3521,10 @@ Lround$0:
 	orl	d7,d0		| and sign also
 
 	PICLEA	SYM (_fpCCR),a0
-	movew	IMM (0),a0@
-#ifndef __mcoldfire__
-	moveml	sp@+,d2-d7
-#else
-	moveml	sp@,d2-d7
+	clrw	a0@
+	moveml	sp@,d2-d7/a2-a5
 	| XXX if frame pointer is ever removed, stack pointer must
 	| be adjusted here.
-#endif
 	unlk	a6
 	rts
 
@@ -3684,21 +3532,18 @@ Lround$0:
 |                             __negsf2
 |=============================================================================
 
-| This is trivial and could be shorter if we didn't bother checking for NaN '
+| This is trivial and could be shorter if we didn't bother checking for NaN
 | and +/-INFINITY.
 
 | float __negsf2(float);
 	FUNC(__negsf2)
 SYM (__negsf2):
-#ifndef __mcoldfire__
-	link	a6,IMM (0)
-	moveml	d2-d7,sp@-
-#else
-	link	a6,IMM (-24)
-	moveml	d2-d7,sp@
-#endif
+	link	a6,IMM (-40)	| everything will be done in registers
+	moveml	d2-d7/a2-a5,sp@	| save all data registers and a2-a5 (but d0-d1)
 	moveq	IMM (NEGATE),d5
+#ifndef __FASTCALL__
 	movel	a6@(8),d0	| get number to negate in d0
+#endif
 	bchg	IMM (31),d0	| negate
 	movel	d0,d1		| make a positive copy
 	bclr	IMM (31),d1	|
@@ -3709,16 +3554,12 @@ SYM (__negsf2):
 	bhi	Lf$inop		| if larger (fraction not zero) is NaN
 	movel	d0,d7		| else get sign and return INFINITY
 	andl	IMM (0x80000000),d7
-	bra	Lf$infty		
+	bra	Lf$infty
 1:	PICLEA	SYM (_fpCCR),a0
-	movew	IMM (0),a0@
-#ifndef __mcoldfire__
-	moveml	sp@+,d2-d7
-#else
-	moveml	sp@,d2-d7
+	clrw	a0@
+	moveml	sp@,d2-d7/a2-a5
 	| XXX if frame pointer is ever removed, stack pointer must
 	| be adjusted here.
-#endif
 	unlk	a6
 	rts
 2:	bclr	IMM (31),d0
@@ -3728,22 +3569,45 @@ SYM (__negsf2):
 |                             __cmpsf2
 |=============================================================================
 
-GREATER =  1
-LESS    = -1
-EQUAL   =  0
+| The comments above about __eqdf2, et. al., also apply to __eqsf2,
+| et. al., except that the latter call __cmpsf2 rather than __cmpdf2.
+
+	FUNC(__gtsf2)
+	.globl	SYM (__gtsf2)
+SYM (__gtsf2):
+	FUNC(__gesf2)
+	.globl	SYM (__gesf2)
+SYM (__gesf2):
+	lea	LESS,a0
+	jbra	SYM (__cmpsf2_internal)
+
+SYM (__cmpsf2):
+	FUNC(__eqsf2)
+	.globl	SYM (__eqsf2)
+SYM (__eqsf2):
+	FUNC(__nesf2)
+	.globl	SYM (__nesf2)
+SYM (__nesf2):
+	FUNC(__ltsf2)
+	.globl	SYM (__ltsf2)
+SYM (__ltsf2):
+	FUNC(__lesf2)
+	.globl	SYM (__lesf2)
+SYM (__lesf2):
+
+| int __cmpsf2(float, float);
+	FUNC(__cmpsf2)
+	lea	GREATER,a0
 
 | int __cmpsf2_internal(float, float, int);
 SYM (__cmpsf2_internal):
-#ifndef __mcoldfire__
-	link	a6,IMM (0)
-	moveml	d2-d7,sp@- 	| save registers
-#else
-	link	a6,IMM (-24)
-	moveml	d2-d7,sp@
-#endif
+	link	a6,IMM (-40)	| everything will be done in registers
+	moveml	d2-d7/a2-a5,sp@	| save all data registers and a2-a5 (but d0-d1)
 	moveq	IMM (COMPARE),d5
+#ifndef __FASTCALL__
 	movel	a6@(8),d0	| get first operand
 	movel	a6@(12),d1	| get second operand
+#endif
 | Check if either is NaN, and in that case return garbage and signal
 | INVALID_OPERATION. Check also if either is zero, and clear the signs
 | if necessary.
@@ -3751,13 +3615,13 @@ SYM (__cmpsf2_internal):
 	andl	IMM (0x7fffffff),d0
 	beq	Lcmpsf$a$0
 	cmpl	IMM (0x7f800000),d0
-	bhi	Lcmpf$inop
+	bhi	Lcmpsf$inop
 Lcmpsf$1:
 	movel	d1,d7
 	andl	IMM (0x7fffffff),d1
 	beq	Lcmpsf$b$0
 	cmpl	IMM (0x7f800000),d1
-	bhi	Lcmpf$inop
+	bhi	Lcmpsf$inop
 Lcmpsf$2:
 | Check the signs
 	eorl	d6,d7
@@ -3786,66 +3650,43 @@ Lcmpsf$2:
 	bne	Lcmpsf$a$gt$b	| |b| < |a|
 | If we got here a == b.
 	movel	IMM (EQUAL),d0
-#ifndef __mcoldfire__
-	moveml	sp@+,d2-d7 	| put back the registers
-#else
-	moveml	sp@,d2-d7
-#endif
+	moveml	sp@,d2-d7/a2-a5 	| put back the registers
 	unlk	a6
 	rts
 Lcmpsf$a$gt$b:
 	movel	IMM (GREATER),d0
-#ifndef __mcoldfire__
-	moveml	sp@+,d2-d7 	| put back the registers
-#else
-	moveml	sp@,d2-d7
+	moveml	sp@,d2-d7/a2-a5 	| put back the registers
 	| XXX if frame pointer is ever removed, stack pointer must
 	| be adjusted here.
-#endif
 	unlk	a6
 	rts
 Lcmpsf$b$gt$a:
 	movel	IMM (LESS),d0
-#ifndef __mcoldfire__
-	moveml	sp@+,d2-d7 	| put back the registers
-#else
-	moveml	sp@,d2-d7
+	moveml	sp@,d2-d7/a2-a5 	| put back the registers
 	| XXX if frame pointer is ever removed, stack pointer must
 	| be adjusted here.
-#endif
 	unlk	a6
 	rts
 
-Lcmpsf$a$0:	
+Lcmpsf$a$0:
 	bclr	IMM (31),d6
 	bra	Lcmpsf$1
 Lcmpsf$b$0:
 	bclr	IMM (31),d7
 	bra	Lcmpsf$2
 
-Lcmpf$inop:
-	movl	a6@(16),d0
+Lcmpsf$inop:
+	movel	a0,d0
 	moveq	IMM (INEXACT_RESULT+INVALID_OPERATION),d7
 	moveq	IMM (SINGLE_FLOAT),d6
 	PICJUMP	$_exception_handler
 
-| int __cmpsf2(float, float);
-	FUNC(__cmpsf2)
-SYM (__cmpsf2):
-	link	a6,IMM (0)
-	pea	1
-	movl	a6@(12),sp@-
-	movl	a6@(8),sp@-
-	PICCALL SYM (__cmpsf2_internal)
-	unlk	a6
-	rts
-
 |=============================================================================
 |                           rounding routines
 |=============================================================================
 
 | The rounding routines expect the number to be normalized in registers
-| d0-d1, with the exponent in register d2. They assume that the 
+| d0-d1, with the exponent in register d2. They assume that the
 | exponent is larger or equal to 1. They return a properly normalized number
 | if possible, and a denormalized number otherwise. The exponent is returned
 | in d2.
@@ -3858,8 +3699,8 @@ Lround$to$nearest:
 | Check for denormalized numbers:
 1:	btst	IMM (FLT_MANT_DIG),d0
 	bne	2f		| if set the number is normalized
-| Normalize shifting left until bit #FLT_MANT_DIG is set or the exponent 
-| is one (remember that a denormalized number corresponds to an 
+| Normalize shifting left until bit #FLT_MANT_DIG is set or the exponent
+| is one (remember that a denormalized number corresponds to an
 | exponent of -F_BIAS+1).
 #ifndef __mcoldfire__
 	cmpw	IMM (1),d2	| remember that the exponent is at least one
@@ -3878,24 +3719,24 @@ Lround$to$nearest:
 2:
 | Now round: we do it as follows: after the shifting we can write the
 | fraction part as f + delta, where 1 < f < 2^25, and 0 <= delta <= 2.
-| If delta < 1, do nothing. If delta > 1, add 1 to f. 
-| If delta == 1, we make sure the rounded number will be even (odd?) 
+| If delta < 1, do nothing. If delta > 1, add 1 to f.
+| If delta == 1, we make sure the rounded number will be even (odd?)
 | (after shifting).
 	btst	IMM (0),d0	| is delta < 1?
 	beq	2f		| if so, do not do anything
 	tstl	d1		| is delta == 1?
 	bne	1f		| if so round to even
-	movel	d0,d1		| 
+	movel	d0,d1		|
 	andl	IMM (2),d1	| bit 1 is the last significant bit
-	addl	d1,d0		| 
-	bra	2f		| 
-1:	movel	IMM (1),d1	| else add 1 
+	addl	d1,d0		|
+	bra	2f		|
+1:	movel	IMM (1),d1	| else add 1
 	addl	d1,d0		|
 | Shift right once (because we used bit #FLT_MANT_DIG!).
-2:	lsrl	IMM (1),d0		
+2:	lsrl	IMM (1),d0
 | Now check again bit #FLT_MANT_DIG (rounding could have produced a
 | 'fraction overflow' ...).
-	btst	IMM (FLT_MANT_DIG),d0	
+	btst	IMM (FLT_MANT_DIG),d0
 	beq	1f
 	lsrl	IMM (1),d0
 #ifndef __mcoldfire__
@@ -3904,7 +3745,7 @@ Lround$to$nearest:
 	addql	IMM (1),d2
 #endif
 1:
-| If bit #FLT_MANT_DIG-1 is clear we have a denormalized number, so we 
+| If bit #FLT_MANT_DIG-1 is clear we have a denormalized number, so we
 | have to put the exponent to zero and return a denormalized number.
 	btst	IMM (FLT_MANT_DIG-1),d0
 	beq	1f
@@ -3918,199 +3759,270 @@ Lround$to$minus:
 	jmp	a0@
 #endif /* L_float */
 
-| gcc expects the routines __eqdf2, __nedf2, __gtdf2, __gedf2,
-| __ledf2, __ltdf2 to all return the same value as a direct call to
-| __cmpdf2 would.  In this implementation, each of these routines
-| simply calls __cmpdf2.  It would be more efficient to give the
-| __cmpdf2 routine several names, but separating them out will make it
-| easier to write efficient versions of these routines someday.
-| If the operands recompare unordered unordered __gtdf2 and __gedf2 return -1.
-| The other routines return 1.
+/* We do not need these routines for coldfire, as it has no extended
+   float format. */
+#if !defined (__mcoldfire__)
 
-#ifdef  L_eqdf2
-	.text
-	FUNC(__eqdf2)
-	.globl	SYM (__eqdf2)
-SYM (__eqdf2):
-	link	a6,IMM (0)
-	pea	1
-	movl	a6@(20),sp@-
-	movl	a6@(16),sp@-
-	movl	a6@(12),sp@-
-	movl	a6@(8),sp@-
-	PICCALL	SYM (__cmpdf2_internal)
-	unlk	a6
-	rts
-#endif /* L_eqdf2 */
+#ifdef  L_long_double
 
-#ifdef  L_nedf2
-	.text
-	FUNC(__nedf2)
-	.globl	SYM (__nedf2)
-SYM (__nedf2):
-	link	a6,IMM (0)
-	pea	1
-	movl	a6@(20),sp@-
-	movl	a6@(16),sp@-
-	movl	a6@(12),sp@-
-	movl	a6@(8),sp@-
-	PICCALL	SYM (__cmpdf2_internal)
-	unlk	a6
-	rts
-#endif /* L_nedf2 */
+| A long double precision floating point number (long double) has the format:
+|
+| struct _long_double {
+|  unsigned int sign      : 1;  /* sign bit */
+|  unsigned int exponent  : 15; /* exponent, shifted by 16383 */
+|  unsigned int empty     : 16;
+|  unsigned int fraction  : 64; /* fraction */
+| } double;
+|
+| Thus sizeof(long double) = 12 (96 bits).
+|
+| All the routines are callable from C programs, and return the result
+| in the register pair d0-d1. They also preserve all registers except
+| d0-d1 and a0-a1.
 
-#ifdef  L_gtdf2
-	.text
-	FUNC(__gtdf2)
-	.globl	SYM (__gtdf2)
-SYM (__gtdf2):
-	link	a6,IMM (0)
-	pea	-1
-	movl	a6@(20),sp@-
-	movl	a6@(16),sp@-
-	movl	a6@(12),sp@-
-	movl	a6@(8),sp@-
-	PICCALL	SYM (__cmpdf2_internal)
-	unlk	a6
-	rts
-#endif /* L_gtdf2 */
+	.globl	SYM (_fpCCR)
+	.globl  $_exception_handler
 
-#ifdef  L_gedf2
-	.text
-	FUNC(__gedf2)
-	.globl	SYM (__gedf2)
-SYM (__gedf2):
-	link	a6,IMM (0)
-	pea	-1
-	movl	a6@(20),sp@-
-	movl	a6@(16),sp@-
-	movl	a6@(12),sp@-
-	movl	a6@(8),sp@-
-	PICCALL	SYM (__cmpdf2_internal)
-	unlk	a6
-	rts
-#endif /* L_gedf2 */
+QUIET_NaN      = 0xffffffff
+INFINITY       = 0x7fff0000
 
-#ifdef  L_ltdf2
-	.text
-	FUNC(__ltdf2)
-	.globl	SYM (__ltdf2)
-SYM (__ltdf2):
-	link	a6,IMM (0)
-	pea	1
-	movl	a6@(20),sp@-
-	movl	a6@(16),sp@-
-	movl	a6@(12),sp@-
-	movl	a6@(8),sp@-
-	PICCALL	SYM (__cmpdf2_internal)
-	unlk	a6
-	rts
-#endif /* L_ltdf2 */
+X_MAX_EXP      = 0x7fff
+X_BIAS         = 16383
+LDBL_MAX_EXP   = X_MAX_EXP - X_BIAS
+LDBL_MIN_EXP   = 1 - X_BIAS
+LDBL_MANT_DIG  = 64
 
-#ifdef  L_ledf2
-	.text
-	FUNC(__ledf2)
-	.globl	SYM (__ledf2)
-SYM (__ledf2):
-	link	a6,IMM (0)
-	pea	1
-	movl	a6@(20),sp@-
-	movl	a6@(16),sp@-
-	movl	a6@(12),sp@-
-	movl	a6@(8),sp@-
-	PICCALL	SYM (__cmpdf2_internal)
-	unlk	a6
-	rts
-#endif /* L_ledf2 */
+| Entry points:
 
-| The comments above about __eqdf2, et. al., also apply to __eqsf2,
-| et. al., except that the latter call __cmpsf2 rather than __cmpdf2.
+	.globl SYM (__negxf2)
+	.globl SYM (__cmpxf2)
+| __addxf3, __subxf3, __mulxf3, and __divxf3 are implemented elsewhere
 
-#ifdef  L_eqsf2
 	.text
-	FUNC(__eqsf2)
-	.globl	SYM (__eqsf2)
-SYM (__eqsf2):
-	link	a6,IMM (0)
-	pea	1
-	movl	a6@(12),sp@-
-	movl	a6@(8),sp@-
-	PICCALL	SYM (__cmpsf2_internal)
-	unlk	a6
-	rts
-#endif /* L_eqsf2 */
+	.even
 
-#ifdef  L_nesf2
-	.text
-	FUNC(__nesf2)
-	.globl	SYM (__nesf2)
-SYM (__nesf2):
-	link	a6,IMM (0)
-	pea	1
-	movl	a6@(12),sp@-
-	movl	a6@(8),sp@-
-	PICCALL	SYM (__cmpsf2_internal)
-	unlk	a6
-	rts
-#endif /* L_nesf2 */
+| These are common routines to return and signal exceptions.
 
-#ifdef  L_gtsf2
-	.text
-	FUNC(__gtsf2)
-	.globl	SYM (__gtsf2)
-SYM (__gtsf2):
-	link	a6,IMM (0)
-	pea	-1
-	movl	a6@(12),sp@-
-	movl	a6@(8),sp@-
-	PICCALL	SYM (__cmpsf2_internal)
-	unlk	a6
-	rts
-#endif /* L_gtsf2 */
+Lx$infty:
+Lx$overflow:
+| Return a properly signed INFINITY and set the exception flags
+	movel	IMM (INFINITY),d0
+	movel	IMM (0),d1
+	movel	IMM (0),d2
+	orl	d7,d0
+	movew	IMM (INEXACT_RESULT+OVERFLOW),d7
+	moveq	IMM (LONG_FLOAT),d6
+	PICJUMP	$_exception_handler
 
-#ifdef  L_gesf2
-	.text
-	FUNC(__gesf2)
-	.globl	SYM (__gesf2)
-SYM (__gesf2):
-	link	a6,IMM (0)
-	pea	-1
-	movl	a6@(12),sp@-
-	movl	a6@(8),sp@-
-	PICCALL	SYM (__cmpsf2_internal)
-	unlk	a6
-	rts
-#endif /* L_gesf2 */
+Lx$inop:
+| Return a quiet NaN and set the exception flags
+	movel	IMM (QUIET_NaN),d0
+	movel	d0,d1
+	movel	d0,d2
+	movew	IMM (INEXACT_RESULT+INVALID_OPERATION),d7
+	moveq	IMM (LONG_FLOAT),d6
+	PICJUMP	$_exception_handler
 
-#ifdef  L_ltsf2
-	.text
-	FUNC(__ltsf2)
-	.globl	SYM (__ltsf2)
-SYM (__ltsf2):
-	link	a6,IMM (0)
-	pea	1
-	movl	a6@(12),sp@-
-	movl	a6@(8),sp@-
-	PICCALL	SYM (__cmpsf2_internal)
+|=============================================================================
+|                              __negxf2
+|=============================================================================
+
+| long double __negxf2(long double, long double);
+	FUNC(__negxf2)
+SYM (__negxf2):
+	link	a6,IMM (-40)	| everything will be done in registers
+	moveml	d2-d7/a2-a5,sp@	| save all data registers and a2-a5 (but d0-d1)
+	moveq	IMM (NEGATE),d5
+	moveml	a6@(8),d0-d2	| get number to negate in d0-d2
+	bchg	IMM (31),d0	| negate
+	movel	d0,d6		| make a positive copy (for the tests)
+	andl	IMM(0x7fff0000),d6	|
+	movel	d6,d4		| check for zero
+	orl	d1,d4		|
+	orl	d2,d4		|
+	beq	2f		| if zero (either sign) return +zero
+	cmpl	IMM (0x7fff0000),d6 | compare to +INFINITY
+	blt	1f		| if finite, return
+	tstl	d1		| if fraction not zero is NaN
+	bne	Lx$inop		|
+	tstl	d2		| if fraction not zero is NaN
+	bne	Lx$inop		|
+	movel	d0,d7		| else get sign and return INFINITY
+	andl	IMM (0x80000000),d7
+	bra	Lx$infty
+1:	PICLEA	SYM (_fpCCR),a0
+	clrw	a0@
+	moveml	d0-d2,M68K_STRUCT_VALUE_REGNUM@
+	movel	M68K_STRUCT_VALUE_REGNUM,d0
+	moveml	sp@,d2-d7/a2-a5
+	| XXX if frame pointer is ever removed, stack pointer must
+	| be adjusted here.
 	unlk	a6
 	rts
-#endif /* L_ltsf2 */
+2:	bclr	IMM (31),d0
+	bra	1b
 
-#ifdef  L_lesf2
-	.text
-	FUNC(__lesf2)
-	.globl	SYM (__lesf2)
-SYM (__lesf2):
-	link	a6,IMM (0)
-	pea	1
-	movl	a6@(12),sp@-
-	movl	a6@(8),sp@-
-	PICCALL	SYM (__cmpsf2_internal)
+|=============================================================================
+|                              __cmpxf2
+|=============================================================================
+
+GREATER =  1
+LESS    = -1
+EQUAL   =  0
+
+| The comments above about __eqdf2, et. al., also apply to __eqxf2,
+| et. al., except that the latter call __cmpxf2 rather than __cmpdf2.
+
+	FUNC(__gtxf2)
+	.globl	SYM (__gtxf2)
+SYM (__gtxf2):
+	FUNC(__gexf2)
+	.globl	SYM (__gexf2)
+SYM (__gexf2):
+	lea LESS,a0
+	jbra SYM(__cmpxf2_internal)
+
+	FUNC(__eqxf2)
+	.globl	SYM (__eqxf2)
+SYM (__eqxf2):
+	FUNC(__nexf2)
+	.globl	SYM (__nexf2)
+SYM (__nexf2):
+	FUNC(__ltxf2)
+	.globl	SYM (__ltxf2)
+SYM (__ltxf2):
+	FUNC(__lexf2)
+	.globl	SYM (__lexf2)
+SYM (__lexf2):
+
+| int __cmpxf2(long double, long double);
+	FUNC(__cmpxf2)
+SYM (__cmpxf2):
+	lea	GREATER,a0
+
+| int __cmpxf2_internal(long double, long double, int);
+SYM (__cmpxf2_internal):
+	link	a6,IMM (-40)	| everything will be done in registers
+	moveml	d2-d7/a2-a5,sp@	| save all data registers and a2-a5 (but d0-d1)
+	movel	a6@(8),d0	| get first operand
+	movel	a6@(12),d1	|
+	movel	a6@(16),a2
+	movel	a6@(20),d2	| get second operand
+	movel	a6@(24),d3	|
+	movel	a6@(28),a3
+| First check if a and/or b are (+/-) zero and in that case clear
+| the sign bit.
+	movel	d0,d6		| copy signs into d6 (a) and d7(b)
+	andl	IMM (0x7fff0000),d0	| and clear signs in d0 and d2
+	movel	d2,d7		|
+	andl	IMM (0x7fff0000),d2
+	cmpl	IMM (0x7fff0000),d0 | check for a == NaN
+	beq	Lcmpxf$a$nf	| if equal can be INFINITY, so check d1
+	movel	a2,d4		| copy into d4 to test for zero
+	orl	d0,d4		|
+	orl	d1,d4		|
+	beq	Lcmpxf$a$0	|
+Lcmpxf$0:
+	cmpl	IMM (0x7fff0000),d2 | check for b == NaN
+	bhi	Lcmpxf$inop		| if d2 > 0x7ff00000, b is NaN
+	beq	Lcmpxf$b$nf	| if equal can be INFINITY, so check d3
+	movel	a3,d4		|
+	orl	d2,d4		|
+	orl	d3,d4		|
+	beq	Lcmpxf$b$0	|
+Lcmpxf$1:
+| Check the signs
+	eorl	d6,d7
+	bpl	1f
+| If the signs are not equal check if a >= 0
+	tstl	d6
+	bpl	Lcmpxf$a$gt$b	| if (a >= 0 && b < 0) => a > b
+	bmi	Lcmpxf$b$gt$a	| if (a < 0 && b >= 0) => a < b
+1:
+| If the signs are equal check for < 0
+	tstl	d6
+	bpl	1f
+| If both are negative exchange them
+#ifndef __mcoldfire__
+	exg	d0,d2
+	exg	d1,d3
+	exg	a2,a3
+#else
+	movel	d0,d7
+	movel	d2,d0
+	movel	d7,d2
+	movel	d1,d7
+	movel	d3,d1
+	movel	d7,d3
+	movel	a2,d7
+	movel	a3,a2
+	movel	d7,a3
+#endif
+1:
+| Now that they are positive we just compare them as longs (does this also
+| work for denormalized numbers?).
+	cmpl	d0,d2
+	bhi	Lcmpxf$b$gt$a	| |b| > |a|
+	bne	Lcmpxf$a$gt$b	| |b| < |a|
+| If we got here d0 == d2, so we compare d1 and d3.
+	cmpl	d1,d3
+	bhi	Lcmpxf$b$gt$a	| |b| > |a|
+	bne	Lcmpxf$a$gt$b	| |b| < |a|
+| If we got here d1 == d3, so we compare a2 and a3.
+	movel	a3,d3
+	cmpl	a2,d3
+	bhi	Lcmpxf$b$gt$a	| |b| > |a|
+	bne	Lcmpxf$a$gt$b	| |b| < |a|
+| If we got here a == b.
+	movel	IMM (EQUAL),d0
+	bra 1f
+Lcmpxf$a$gt$b:
+	movel	IMM (GREATER),d0
+	bra 1f
+Lcmpxf$b$gt$a:
+	movel	IMM (LESS),d0
+1:
+	moveml	sp@,d2-d7/a2-a5 	| put back the registers
+	| XXX if frame pointer is ever removed, stack pointer must
+	| be adjusted here.
 	unlk	a6
 	rts
-#endif /* L_lesf2 */
 
-#if defined (__ELF__) && defined (__linux__)
+Lcmpxf$a$0:
+	bclr	IMM (31),d6
+	bra	Lcmpxf$0
+Lcmpxf$b$0:
+	bclr	IMM (31),d7
+	bra	Lcmpxf$1
+
+Lcmpxf$a$nf:
+	tstl	d1
+	bne	Lcmpxf$inop
+	movel a2,d4
+	bne	Lcmpxf$inop
+	bra	Lcmpxf$0
+
+Lcmpxf$b$nf:
+	tstl	d3
+	bne	Lcmpxf$inop
+	movel a3,d4
+	bne	Lcmpxf$inop
+	bra	Lcmpxf$1
+
+Lcmpxf$inop:
+	movel	a0,d0
+	moveq	IMM (COMPARE),d5
+	moveq	IMM (INEXACT_RESULT+INVALID_OPERATION),d7
+	| this functions returns an int, not a long double
+	moveq	IMM (LONG_FLOAT+1),d6
+	PICJUMP	$_exception_handler
+
+#endif /* _long_double */
+
+#endif /* __mcoldfire__ */
+
+
+#if defined (__ELF__)
 	/* Make stack non-executable for ELF linux targets.  */
 	.section	.note.GNU-stack,"",@progbits
 #endif
diff --git a/libgcc/config/m68k/mint-atomic.c b/libgcc/config/m68k/mint-atomic.c
new file mode 100644
index 00000000000..e46ef7f8055
--- /dev/null
+++ b/libgcc/config/m68k/mint-atomic.c
@@ -0,0 +1,233 @@
+/* Linux-specific atomic operations for m68k Linux.
+   Copyright (C) 2011-2017 Free Software Foundation, Inc.
+   Based on code contributed by CodeSourcery for ARM EABI Linux.
+
+This file is part of GCC.
+
+GCC is free software; you can redistribute it and/or modify it under
+the terms of the GNU General Public License as published by the Free
+Software Foundation; either version 3, or (at your option) any later
+version.
+
+GCC is distributed in the hope that it will be useful, but WITHOUT ANY
+WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
+
+Under Section 7 of GPL version 3, you are granted additional
+permissions described in the GCC Runtime Library Exception, version
+3.1, as published by the Free Software Foundation.
+
+You should have received a copy of the GNU General Public License and
+a copy of the GCC Runtime Library Exception along with this program;
+see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+<http://www.gnu.org/licenses/>.  */
+
+/* Coldfire dropped the CAS instruction from the base M68K ISA.
+
+   GCC automatically issues a asm memory barrier when it encounters
+   a __sync_synchronize builtin.  Thus, we do not need to define this
+   builtin.
+
+   We implement byte, short and int versions of each atomic operation
+   using the kernel helper defined below.  There is no support for
+   64-bit operations yet.  */
+
+#include <stdbool.h>
+
+#ifndef __NR_atomic_cmpxchg_32
+#define __NR_atomic_cmpxchg_32  335
+#endif
+
+typedef unsigned int uint32_t __attribute__ ((mode (SI)));
+
+/* Kernel helper for compare-and-exchange a 32-bit value.  */
+static inline uint32_t
+__kernel_cmpxchg (volatile uint32_t *mem, uint32_t oldval, uint32_t newval)
+{
+#ifdef __linux__
+  register uint32_t *a0 asm("a0") = mem;
+  register uint32_t d2 asm("d2") = oldval;
+  register uint32_t d1 asm("d1") = newval;
+  register uint32_t d0 asm("d0") = __NR_atomic_cmpxchg_32;
+
+  asm volatile ("trap #0"
+		: "=r"(d0), "=r"(d1), "=r"(a0)
+		: "r"(d0), "r"(d1), "r"(d2), "r"(a0)
+		: "memory", "a1");
+
+  return d0;
+#else
+  volatile uint32_t *memp = (volatile uint32_t *)mem;
+  uint32_t memval = *memp;
+  if (memval == oldval)
+    *memp = newval;
+  return memval;
+#endif
+}
+
+#ifdef __ELF__
+#define HIDDEN __attribute__ ((visibility ("hidden")))
+#else
+#define HIDDEN
+#endif
+
+/* Big endian masks  */
+#define INVERT_MASK_1 24
+#define INVERT_MASK_2 16
+
+#define MASK_1 0xffu
+#define MASK_2 0xffffu
+
+#define NAME_oldval(OP, WIDTH) __sync_fetch_and_##OP##_##WIDTH
+#define NAME_newval(OP, WIDTH) __sync_##OP##_and_fetch_##WIDTH
+
+#define WORD_SYNC_OP(OP, PFX_OP, INF_OP, RETURN)			\
+  uint32_t HIDDEN							\
+  NAME##_##RETURN (OP, 4) (volatile void *ptr, uint32_t val)			\
+  {									\
+    volatile uint32_t *uptr = (volatile uint32_t *)ptr; \
+    uint32_t oldval, newval, cmpval = *uptr;				\
+									\
+    do {								\
+      oldval = cmpval;							\
+      newval = PFX_OP (oldval INF_OP val);				\
+      cmpval = __kernel_cmpxchg (uptr, oldval, newval);			\
+    } while (__builtin_expect (oldval != cmpval, 0));			\
+									\
+    return RETURN;							\
+  }
+
+#define SUBWORD_SYNC_OP(OP, PFX_OP, INF_OP, TYPE, RTYPE, WIDTH, RETURN)	\
+  RTYPE HIDDEN								\
+  NAME##_##RETURN (OP, WIDTH) (volatile void *ptr, TYPE sval)			\
+  {									\
+    uint32_t *wordptr = (uint32_t *) ((unsigned long) ptr & ~3);	\
+    uint32_t mask, shift, oldval, newval, cmpval, wval;		\
+									\
+    shift = (((unsigned long) ptr & 3) << 3) ^ INVERT_MASK_##WIDTH;	\
+    mask = MASK_##WIDTH << shift;					\
+    wval = (sval & MASK_##WIDTH) << shift;				\
+									\
+    cmpval = *wordptr;							\
+    do {								\
+      oldval = cmpval;							\
+      newval = PFX_OP (oldval INF_OP wval);				\
+      newval = (newval & mask) | (oldval & ~mask);			\
+      cmpval = __kernel_cmpxchg (wordptr, oldval, newval);		\
+    } while (__builtin_expect (oldval != cmpval, 0));			\
+									\
+    return (RETURN >> shift) & MASK_##WIDTH;				\
+  }
+
+WORD_SYNC_OP (add,   , +, oldval)
+WORD_SYNC_OP (sub,   , -, oldval)
+WORD_SYNC_OP (or,    , |, oldval)
+WORD_SYNC_OP (and,   , &, oldval)
+WORD_SYNC_OP (xor,   , ^, oldval)
+WORD_SYNC_OP (nand, ~, &, oldval)
+
+#ifdef __MSHORT__
+#define SHORTINT unsigned int
+#else
+#define SHORTINT unsigned short
+#endif
+
+SUBWORD_SYNC_OP (add,   , +, SHORTINT, SHORTINT, 2, oldval)
+SUBWORD_SYNC_OP (sub,   , -, SHORTINT, SHORTINT, 2, oldval)
+SUBWORD_SYNC_OP (or,    , |, SHORTINT, SHORTINT, 2, oldval)
+SUBWORD_SYNC_OP (and,   , &, SHORTINT, SHORTINT, 2, oldval)
+SUBWORD_SYNC_OP (xor,   , ^, SHORTINT, SHORTINT, 2, oldval)
+SUBWORD_SYNC_OP (nand, ~, &, SHORTINT, SHORTINT, 2, oldval)
+
+SUBWORD_SYNC_OP (add,   , +, unsigned char, unsigned char, 1, oldval)
+SUBWORD_SYNC_OP (sub,   , -, unsigned char, unsigned char, 1, oldval)
+SUBWORD_SYNC_OP (or,    , |, unsigned char, unsigned char, 1, oldval)
+SUBWORD_SYNC_OP (and,   , &, unsigned char, unsigned char, 1, oldval)
+SUBWORD_SYNC_OP (xor,   , ^, unsigned char, unsigned char, 1, oldval)
+SUBWORD_SYNC_OP (nand, ~, &, unsigned char, unsigned char, 1, oldval)
+
+WORD_SYNC_OP (add,   , +, newval)
+WORD_SYNC_OP (sub,   , -, newval)
+WORD_SYNC_OP (or,    , |, newval)
+WORD_SYNC_OP (and,   , &, newval)
+WORD_SYNC_OP (xor,   , ^, newval)
+WORD_SYNC_OP (nand, ~, &, newval)
+
+SUBWORD_SYNC_OP (add,   , +, SHORTINT, SHORTINT, 2, newval)
+SUBWORD_SYNC_OP (sub,   , -, SHORTINT, SHORTINT, 2, newval)
+SUBWORD_SYNC_OP (or,    , |, SHORTINT, SHORTINT, 2, newval)
+SUBWORD_SYNC_OP (and,   , &, SHORTINT, SHORTINT, 2, newval)
+SUBWORD_SYNC_OP (xor,   , ^, SHORTINT, SHORTINT, 2, newval)
+SUBWORD_SYNC_OP (nand, ~, &, SHORTINT, SHORTINT, 2, newval)
+
+SUBWORD_SYNC_OP (add,   , +, unsigned char, unsigned char, 1, newval)
+SUBWORD_SYNC_OP (sub,   , -, unsigned char, unsigned char, 1, newval)
+SUBWORD_SYNC_OP (or,    , |, unsigned char, unsigned char, 1, newval)
+SUBWORD_SYNC_OP (and,   , &, unsigned char, unsigned char, 1, newval)
+SUBWORD_SYNC_OP (xor,   , ^, unsigned char, unsigned char, 1, newval)
+SUBWORD_SYNC_OP (nand, ~, &, unsigned char, unsigned char, 1, newval)
+
+uint32_t HIDDEN
+__sync_val_compare_and_swap_4 (volatile void *ptr, uint32_t oldval, uint32_t newval)
+{
+  return __kernel_cmpxchg ((volatile uint32_t *) ptr, oldval, newval);
+}
+
+bool HIDDEN
+__sync_bool_compare_and_swap_4 (volatile void *ptr, uint32_t oldval,
+				uint32_t newval)
+{
+  return __kernel_cmpxchg ((volatile uint32_t *) ptr, oldval, newval) == oldval;
+}
+
+#define SUBWORD_VAL_CAS(TYPE, WIDTH)					\
+  TYPE HIDDEN								\
+  __sync_val_compare_and_swap_##WIDTH (volatile void *ptr, TYPE soldval,		\
+				       TYPE snewval)			\
+  {									\
+    uint32_t *wordptr = (uint32_t *)((unsigned long) ptr & ~3);		\
+    uint32_t mask, shift, woldval, wnewval;				\
+    uint32_t oldval, newval, cmpval;					\
+									\
+    shift = (((unsigned long) ptr & 3) << 3) ^ INVERT_MASK_##WIDTH;	\
+    mask = MASK_##WIDTH << shift;					\
+    woldval = (soldval & MASK_##WIDTH) << shift;			\
+    wnewval = (snewval & MASK_##WIDTH) << shift;			\
+    cmpval = *wordptr;							\
+									\
+    do {								\
+      oldval = cmpval;							\
+      if ((oldval & mask) != woldval)					\
+	break;								\
+      newval = (oldval & ~mask) | wnewval;				\
+      cmpval = __kernel_cmpxchg (wordptr, oldval, newval);		\
+    } while (__builtin_expect (oldval != cmpval, 0));			\
+									\
+    return (oldval >> shift) & MASK_##WIDTH;				\
+  }
+
+SUBWORD_VAL_CAS (SHORTINT, 2)
+SUBWORD_VAL_CAS (unsigned char,  1)
+
+#define SUBWORD_BOOL_CAS(TYPE, WIDTH)					\
+  bool HIDDEN								\
+  __sync_bool_compare_and_swap_##WIDTH (volatile void *ptr, TYPE oldval,		\
+					TYPE newval)			\
+  {									\
+    return (__sync_val_compare_and_swap_##WIDTH (ptr, oldval, newval)	\
+	    == oldval);							\
+  }
+
+SUBWORD_BOOL_CAS (SHORTINT, 2)
+SUBWORD_BOOL_CAS (unsigned char,  1)
+
+#undef NAME_oldval
+#define NAME_oldval(OP, WIDTH) __sync_lock_##OP##_##WIDTH
+#define COMMA ,
+
+#pragma GCC diagnostic ignored "-Wunused-value"
+
+WORD_SYNC_OP (test_and_set, , COMMA, oldval)
+SUBWORD_SYNC_OP (test_and_set, , COMMA, unsigned char, unsigned char, 1, oldval)
+SUBWORD_SYNC_OP (test_and_set, , COMMA, SHORTINT, SHORTINT, 2, oldval)
diff --git a/libgcc/config/m68k/mulxf3.c b/libgcc/config/m68k/mulxf3.c
new file mode 100644
index 00000000000..459232f8374
--- /dev/null
+++ b/libgcc/config/m68k/mulxf3.c
@@ -0,0 +1,5 @@
+#ifndef __mcoldfire__
+
+#include "soft-fp/mulxf3.c"
+
+#endif
diff --git a/libgcc/config/m68k/sfp-exceptions.c b/libgcc/config/m68k/sfp-exceptions.c
new file mode 100644
index 00000000000..3bd77a70b7c
--- /dev/null
+++ b/libgcc/config/m68k/sfp-exceptions.c
@@ -0,0 +1,32 @@
+/*
+ * Copyright (C) 2012-2023 Free Software Foundation, Inc.
+ *
+ * This file is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU General Public License as published by the
+ * Free Software Foundation; either version 3, or (at your option) any
+ * later version.
+ * 
+ * This file is distributed in the hope that it will be useful, but
+ * WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * General Public License for more details.
+ * 
+ * Under Section 7 of GPL version 3, you are granted additional
+ * permissions described in the GCC Runtime Library Exception, version
+ * 3.1, as published by the Free Software Foundation.
+ *
+ * You should have received a copy of the GNU General Public License and
+ * a copy of the GCC Runtime Library Exception along with this program;
+ * see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+ * <http://www.gnu.org/licenses/>.
+ */
+
+#ifndef _SOFT_FLOAT
+#include "sfp-machine.h"
+
+void
+__sfp_handle_exceptions (int _fex __attribute__ ((unused)))
+{
+  /* does nothing currently. The DFmode functions eventually do a trap #15 */
+}
+#endif
diff --git a/libgcc/config/m68k/sfp-machine.h b/libgcc/config/m68k/sfp-machine.h
new file mode 100644
index 00000000000..9376f62c74f
--- /dev/null
+++ b/libgcc/config/m68k/sfp-machine.h
@@ -0,0 +1,193 @@
+#define _FP_W_TYPE_SIZE		32
+#define _FP_W_TYPE		unsigned long
+#define _FP_WS_TYPE		signed long
+#define _FP_I_TYPE		long
+
+/* The type of the result of a floating point comparison.  This must
+   match `__libgcc_cmp_return__' in GCC for the target.  */
+typedef int __gcc_CMPtype __attribute__ ((mode (__libgcc_cmp_return__)));
+#define CMPtype __gcc_CMPtype
+
+#if 0 /* does not work, because all inputs/outputs must be in data registers */
+
+#define __FP_FRAC_ADD_4(r3,r2,r1,r0,x3,x2,x1,x0,y3,y2,y1,y0)	\
+  __asm__ ("addl %11,%3\n\t"				\
+	   "addxl %9,%2\n\t"				\
+	   "addxl %7,%1\n\t"				\
+	   "addxl %5,%0"				\
+	   : "=d" ((USItype) (r3)),				\
+	     "=&d" ((USItype) (r2)),				\
+	     "=&d" ((USItype) (r1)),				\
+	     "=&d" ((USItype) (r0))				\
+	   : "%0" ((USItype) (x3)),				\
+	     "g" ((USItype) (y3)),				\
+	     "%1" ((USItype) (x2)),				\
+	     "g" ((USItype) (y2)),				\
+	     "%2" ((USItype) (x1)),				\
+	     "g" ((USItype) (y1)),				\
+	     "%3" ((USItype) (x0)),				\
+	     "g" ((USItype) (y0)))
+#define __FP_FRAC_ADD_3(r2,r1,r0,x2,x1,x0,y2,y1,y0)		\
+  __asm__ ("addl %8,%2\n\t"				\
+	   "addxl %6,%1\n\t"				\
+	   "addxl %4,%0"				\
+	   : "=d" ((USItype) (r2)),				\
+	     "=&d" ((USItype) (r1)),				\
+	     "=&d" ((USItype) (r0))				\
+	   : "%0" ((USItype) (x2)),				\
+	     "g" ((USItype) (y2)),				\
+	     "%1" ((USItype) (x1)),				\
+	     "g" ((USItype) (y1)),				\
+	     "%2" ((USItype) (x0)),				\
+	     "g" ((USItype) (y0)))
+#define __FP_FRAC_SUB_4(r3,r2,r1,r0,x3,x2,x1,x0,y3,y2,y1,y0)	\
+  __asm__ ("subl %11,%3\n\t"				\
+	   "subxl %9,%2\n\t"				\
+	   "subxl %7,%1\n\t"				\
+	   "subxl %5,%0"				\
+	   : "=d" ((USItype) (r3)),				\
+	     "=&d" ((USItype) (r2)),				\
+	     "=&d" ((USItype) (r1)),				\
+	     "=&d" ((USItype) (r0))				\
+	   : "0" ((USItype) (x3)),				\
+	     "g" ((USItype) (y3)),				\
+	     "1" ((USItype) (x2)),				\
+	     "g" ((USItype) (y2)),				\
+	     "2" ((USItype) (x1)),				\
+	     "g" ((USItype) (y1)),				\
+	     "3" ((USItype) (x0)),				\
+	     "g" ((USItype) (y0)))
+#define __FP_FRAC_SUB_3(r2,r1,r0,x2,x1,x0,y2,y1,y0)		\
+  __asm__ ("subl %8,%2\n\t"				\
+	   "subxl %6,%1\n\t"				\
+	   "subxl %4,%0"				\
+	   : "=d" ((USItype) (r2)),				\
+	     "=&d" ((USItype) (r1)),				\
+	     "=&d" ((USItype) (r0))				\
+	   : "0" ((USItype) (x2)),				\
+	     "g" ((USItype) (y2)),				\
+	     "1" ((USItype) (x1)),				\
+	     "g" ((USItype) (y1)),				\
+	     "2" ((USItype) (x0)),				\
+	     "g" ((USItype) (y0)))
+#endif
+#define __FP_FRAC_ADDI_4(x3,x2,x1,x0,i)				\
+  do { \
+    long zero; \
+  	__asm__ ("moveq #0,%4\n\t" \
+       "addl %5,%3\n\t"				\
+	   "addxl %4,%2\n\t"				\
+	   "addxl %4,%1\n\t"				\
+	   "addxl %4,%0"				\
+	   : "+d" ((USItype) (x3)),				\
+	     "+&d" ((USItype) (x2)),				\
+	     "+&d" ((USItype) (x1)),				\
+	     "+&d" ((USItype) (x0)),				\
+	     "=d"(zero) \
+	   : "g" ((USItype) (i))); \
+	} while(0)
+
+#define _FP_MUL_MEAT_S(R,X,Y)	_FP_MUL_MEAT_1_wide(_FP_WFRACBITS_S,R,X,Y,umul_ppmm)
+#define _FP_MUL_MEAT_D(R,X,Y)	_FP_MUL_MEAT_2_wide(_FP_WFRACBITS_D,R,X,Y,umul_ppmm)
+#define _FP_MUL_MEAT_E(R,X,Y)	_FP_MUL_MEAT_4_wide(_FP_WFRACBITS_E,R,X,Y,umul_ppmm)
+#define _FP_MUL_MEAT_Q(R,X,Y)	_FP_MUL_MEAT_4_wide(_FP_WFRACBITS_Q,R,X,Y,umul_ppmm)
+
+#define _FP_DIV_MEAT_S(R,X,Y)   _FP_DIV_MEAT_1_loop(S,R,X,Y)
+#define _FP_DIV_MEAT_D(R,X,Y)   _FP_DIV_MEAT_2_udiv(D,R,X,Y)
+#define _FP_DIV_MEAT_E(R,X,Y)   _FP_DIV_MEAT_4_udiv(E,R,X,Y)
+#define _FP_DIV_MEAT_Q(R,X,Y)   _FP_DIV_MEAT_4_udiv(Q,R,X,Y)
+
+#define _FP_NANFRAC_H		_FP_QNANBIT_H
+#define _FP_NANFRAC_B		_FP_QNANBIT_B
+#define _FP_NANFRAC_S		_FP_QNANBIT_S
+#define _FP_NANFRAC_D		_FP_QNANBIT_D, 0
+/* Even if XFmode is 12byte,  we have to pad it to
+   16byte since soft-fp emulation is done in 16byte.  */
+#define _FP_NANFRAC_E		_FP_QNANBIT_E, 0, 0, 0
+#define _FP_NANFRAC_Q		_FP_QNANBIT_Q, 0, 0, 0
+
+#ifndef _SOFT_FLOAT
+#define FP_EX_SHIFT 0
+
+#define _FP_DECL_EX \
+  unsigned short _fcw __attribute__ ((unused)) = FP_RND_NEAREST;
+
+#define FP_RND_NEAREST		0
+#define FP_RND_ZERO		0x010
+#define FP_RND_PINF		0x020
+#define FP_RND_MINF		0x030
+
+#define FP_RND_MASK		0x030
+
+#define FP_INIT_ROUNDMODE
+
+#endif
+
+#define _FP_KEEPNANFRACP	1
+#define _FP_QNANNEGATEDP 0
+
+#define _FP_NANSIGN_H		0
+#define _FP_NANSIGN_B		0
+#define _FP_NANSIGN_S		0
+#define _FP_NANSIGN_D		0
+#define _FP_NANSIGN_E		0
+#define _FP_NANSIGN_Q		0
+
+/* Here is something Intel misdesigned: the specs don't define
+   the case where we have two NaNs with same mantissas, but
+   different sign. Different operations pick up different NaNs.  */
+#define _FP_CHOOSENAN(fs, wc, R, X, Y, OP)			\
+  do {								\
+    if (_FP_FRAC_GT_##wc(X, Y)					\
+	|| (_FP_FRAC_EQ_##wc(X,Y) && (OP == '+' || OP == '*')))	\
+      {								\
+	R##_s = X##_s;						\
+	_FP_FRAC_COPY_##wc(R,X);				\
+      }								\
+    else							\
+      {								\
+	R##_s = Y##_s;						\
+	_FP_FRAC_COPY_##wc(R,Y);				\
+      }								\
+    R##_c = FP_CLS_NAN;						\
+  } while (0)
+
+#ifndef _SOFT_FLOAT
+/*
+ * these are arbitrary, but we choose
+ * the same values as co-processor would use
+ */
+#define FP_EX_INVALID		0x4000
+#define FP_EX_OVERFLOW		0x1000
+#define FP_EX_DIVZERO		0x0400
+#define FP_EX_UNDERFLOW		0x0800
+#define FP_EX_INEXACT		0x0200
+#define FP_EX_ALL \
+	(FP_EX_INVALID | FP_EX_DENORM | FP_EX_DIVZERO | FP_EX_OVERFLOW \
+	 | FP_EX_UNDERFLOW | FP_EX_INEXACT)
+
+void __sfp_handle_exceptions (int);
+
+#define FP_HANDLE_EXCEPTIONS			\
+  do {						\
+    if (__builtin_expect (_fex, 0))		\
+      __sfp_handle_exceptions (_fex);		\
+  } while (0)
+
+#define FP_TRAPPING_EXCEPTIONS ((_fcw >> FP_EX_SHIFT) & FP_EX_ALL)
+
+#define FP_ROUNDMODE		(_fcw & FP_RND_MASK)
+#endif
+
+#define _FP_TININESS_AFTER_ROUNDING 1
+
+#define	__LITTLE_ENDIAN	1234
+#define	__BIG_ENDIAN	4321
+
+#define __BYTE_ORDER __BIG_ENDIAN
+
+/* Define ALIASNAME as a strong alias for NAME.  */
+# define strong_alias(name, aliasname) _strong_alias(name, aliasname)
+# define _strong_alias(name, aliasname) \
+  extern __typeof (name) aliasname __attribute__ ((alias (#name)));
+
diff --git a/libgcc/config/m68k/subxf3.c b/libgcc/config/m68k/subxf3.c
new file mode 100644
index 00000000000..5b47d1dd62b
--- /dev/null
+++ b/libgcc/config/m68k/subxf3.c
@@ -0,0 +1,43 @@
+/* Software floating-point emulation.
+   Return a - b
+   Copyright (C) 1997-2022 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   In addition to the permissions in the GNU Lesser General Public
+   License, the Free Software Foundation gives you unlimited
+   permission to link the compiled version of this file into
+   combinations with other programs, and to distribute those
+   combinations without any restriction coming from the use of this
+   file.  (The Lesser General Public License restrictions do apply in
+   other respects; for example, they cover modification of the file,
+   and distribution when not linked into a combine executable.)
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+long double __subxf3 (long double x1, long double x2);
+long double __addxf3 (long double x1, long double x2);
+
+long double
+__subxf3 (long double a, long double b)
+{
+	(void)a;
+	__asm__ __volatile__(
+		"bchg #7,%0\n\t"
+		"jmp %1"
+	:
+	: "m"(b), "m"(__addxf3)
+	: "cc", "memory");
+	__builtin_unreachable();
+}
diff --git a/libgcc/config/m68k/t-floatlib b/libgcc/config/m68k/t-floatlib
index 1ee8782d9fd..50a9ad20070 100644
--- a/libgcc/config/m68k/t-floatlib
+++ b/libgcc/config/m68k/t-floatlib
@@ -1,11 +1,31 @@
 LIB1ASMSRC = m68k/lb1sf68.S
 LIB1ASMFUNCS = _mulsi3 _udivsi3 _divsi3 _umodsi3 _modsi3 \
-   _double _float _floatex \
-   _eqdf2 _nedf2 _gtdf2 _gedf2 _ltdf2 _ledf2 \
-   _eqsf2 _nesf2 _gtsf2 _gesf2 _ltsf2 _lesf2
+	_double _long_double _float _floatex
 
-LIB2ADD = $(srcdir)/config/m68k/fpgnulib.c xfgnulib.c
-
-xfgnulib.c: $(srcdir)/config/m68k/fpgnulib.c
-	echo '#define EXTFLOAT' > xfgnulib.c
-	cat $< >> xfgnulib.c
+LIB2ADD = \
+	$(srcdir)/config/m68k/unordsf2.c \
+	$(srcdir)/config/m68k/unorddf2.c \
+	$(srcdir)/config/m68k/floatunsidf.c \
+	$(srcdir)/config/m68k/floatsidf.c \
+	$(srcdir)/config/m68k/floatunsisf.c \
+	$(srcdir)/config/m68k/floatsisf.c \
+	$(srcdir)/config/m68k/extendsfdf2.c \
+	$(srcdir)/config/m68k/truncdfsf2.c \
+	$(srcdir)/config/m68k/fixdfsi.c \
+	$(srcdir)/config/m68k/fixsfsi.c \
+	\
+	$(srcdir)/config/m68k/unordxf2.c \
+	$(srcdir)/config/m68k/extenddfxf2.c \
+	$(srcdir)/config/m68k/extendsfxf2.c \
+	$(srcdir)/config/m68k/truncxfdf2.c \
+	$(srcdir)/config/m68k/truncxfsf2.c \
+	$(srcdir)/config/m68k/floatsixf.c \
+	$(srcdir)/config/m68k/floatunsixf.c \
+	$(srcdir)/config/m68k/fixxfsi.c \
+	\
+	$(srcdir)/config/m68k/addxf3.c \
+	$(srcdir)/config/m68k/subxf3.c \
+	$(srcdir)/config/m68k/mulxf3.c \
+	$(srcdir)/config/m68k/divxf3.c \
+	$(srcdir)/config/m68k/sfp-exceptions.c \
+	$(empty)
diff --git a/libgcc/config/m68k/t-mint b/libgcc/config/m68k/t-mint
new file mode 100644
index 00000000000..c768fc121b0
--- /dev/null
+++ b/libgcc/config/m68k/t-mint
@@ -0,0 +1 @@
+LIB2ADD_ST = $(srcdir)/config/m68k/mint-atomic.c
diff --git a/libgcc/config/m68k/truncdfsf2.c b/libgcc/config/m68k/truncdfsf2.c
new file mode 100644
index 00000000000..75017b4f0a8
--- /dev/null
+++ b/libgcc/config/m68k/truncdfsf2.c
@@ -0,0 +1,2 @@
+#define L_truncdfsf2
+#include "fpgnulib.c"
diff --git a/libgcc/config/m68k/truncxfdf2.c b/libgcc/config/m68k/truncxfdf2.c
new file mode 100644
index 00000000000..67db750e2d0
--- /dev/null
+++ b/libgcc/config/m68k/truncxfdf2.c
@@ -0,0 +1,2 @@
+#define L_truncxfdf2
+#include "fpgnulib.c"
diff --git a/libgcc/config/m68k/truncxfsf2.c b/libgcc/config/m68k/truncxfsf2.c
new file mode 100644
index 00000000000..1320019a454
--- /dev/null
+++ b/libgcc/config/m68k/truncxfsf2.c
@@ -0,0 +1,2 @@
+#define L_truncxfsf2
+#include "fpgnulib.c"
diff --git a/libgcc/config/m68k/unorddf2.c b/libgcc/config/m68k/unorddf2.c
new file mode 100644
index 00000000000..32f668b2aa7
--- /dev/null
+++ b/libgcc/config/m68k/unorddf2.c
@@ -0,0 +1,2 @@
+#define L_unorddf2
+#include "fpgnulib.c"
diff --git a/libgcc/config/m68k/unordsf2.c b/libgcc/config/m68k/unordsf2.c
new file mode 100644
index 00000000000..0471d9a121e
--- /dev/null
+++ b/libgcc/config/m68k/unordsf2.c
@@ -0,0 +1,2 @@
+#define L_unordsf2
+#include "fpgnulib.c"
diff --git a/libgcc/config/m68k/unordxf2.c b/libgcc/config/m68k/unordxf2.c
new file mode 100644
index 00000000000..a1c11bee483
--- /dev/null
+++ b/libgcc/config/m68k/unordxf2.c
@@ -0,0 +1,2 @@
+#define L_unordxf2
+#include "fpgnulib.c"
diff --git a/libgcc/crtstuff.c b/libgcc/crtstuff.c
index 675930db043..8b42fb28c5b 100644
--- a/libgcc/crtstuff.c
+++ b/libgcc/crtstuff.c
@@ -64,6 +64,8 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
 #include "libgcc_tm.h"
 #include "unwind-dw2-fde.h"
 
+#include "elf-alias.h"
+
 #ifndef FORCE_CODE_SECTION_ALIGN
 # define FORCE_CODE_SECTION_ALIGN
 #endif
@@ -198,7 +200,12 @@ extern void _ITM_deregisterTMCloneTable (void *) TARGET_ATTRIBUTE_WEAK;
 
 /*  Declare a pointer to void function type.  */
 typedef void (*func_ptr) (void);
+#ifdef HAS_INIT_SECTION
 #define STATIC static
+#else
+/* Define global arrays because they are referred by __main.o.  */
+#define STATIC
+#endif
 
 #else  /* OBJECT_FORMAT_ELF */
 
@@ -253,6 +260,7 @@ STATIC func_ptr __DTOR_LIST__[1]
 #else
 STATIC func_ptr __DTOR_LIST__[1]
   __attribute__((section(".dtors"), aligned(__alignof__(func_ptr))))
+  __attribute__((__used__))
   = { (func_ptr) (-1) };
 #endif /* __DTOR_LIST__ alternatives */
 #endif /* USE_INITFINI_ARRAY */
@@ -593,6 +601,8 @@ __do_global_ctors_1(void)
 }
 #endif /* USE_EH_FRAME_REGISTRY || USE_TM_CLONE_REGISTRY */
 
+#elif defined(__MINT__) && defined(__ELF__)
+/* already done in libgcc2.c */
 #else /* ! __LIBGCC_INIT_SECTION_ASM_OP__ && ! HAS_INIT_SECTION */
 #error "What are you doing with crtstuff.c, then?"
 #endif
@@ -620,6 +630,7 @@ STATIC func_ptr __CTOR_END__[1]
   = { (func_ptr) 0 };
 #else
 STATIC func_ptr __CTOR_END__[1]
+  __attribute__((__used__))
   __attribute__((section(".ctors"), aligned(__alignof__(func_ptr))))
   = { (func_ptr) 0 };
 #endif
@@ -662,6 +673,7 @@ typedef short int32;
 #  error "Missing a 4 byte integer"
 # endif
 STATIC EH_FRAME_SECTION_CONST int32 __FRAME_END__[]
+     __attribute__((__used__))
      __attribute__ ((used, section(__LIBGCC_EH_FRAME_SECTION_NAME__),
 		     aligned(__alignof__(int32))))
      = { 0 };
@@ -752,6 +764,8 @@ __do_global_ctors (void)
     (*p) ();
 }
 
+#elif defined(__MINT__) && defined(__ELF__)
+/* already done in libgcc2.c */
 #else /* ! __LIBGCC_INIT_SECTION_ASM_OP__ && ! HAS_INIT_SECTION */
 #error "What are you doing with crtstuff.c, then?"
 #endif
diff --git a/libgcc/elf-alias.h b/libgcc/elf-alias.h
new file mode 100644
index 00000000000..cb3b359fabf
--- /dev/null
+++ b/libgcc/elf-alias.h
@@ -0,0 +1,17 @@
+/*
+ * When compiling for elf without a USER_LABEL_PREFIX,
+ * still provide alias for internal functions when user code is compiled
+ * with -fleading-underscore
+ */
+#define _ 2 /* __USER_LABEL_PREFIX__ may be defined to this */
+#if defined(__ELF__) && (__USER_LABEL_PREFIX__ + 0) != 2
+#ifdef __ASSEMBLER__
+#define ELF_ALIAS(x) .globl _ ## x; _ ## x:
+#else
+#define ELF_ALIAS(f) typeof(f) _ ## f __attribute__((alias(#f)));
+#pragma GCC diagnostic ignored "-Wmissing-attributes"
+#endif
+#else
+#define ELF_ALIAS(f)
+#endif
+#undef _
diff --git a/libgcc/emutls.c b/libgcc/emutls.c
index d553a74728f..d3a6731e94c 100644
--- a/libgcc/emutls.c
+++ b/libgcc/emutls.c
@@ -58,9 +58,9 @@ struct __emutls_array
 #endif
 
 EMUTLS_ATTR
-void *__emutls_get_address (struct __emutls_object *);
+void *__emutls_get_address (void *);
 EMUTLS_ATTR
-void __emutls_register_common (struct __emutls_object *, word, word, void *);
+void __emutls_register_common (void *, word, word, void *);
 
 #ifdef __GTHREADS
 #ifdef __GTHREAD_MUTEX_INIT
@@ -137,8 +137,9 @@ emutls_alloc (struct __emutls_object *obj)
    implementation here, causes the decl. attributes to be discarded.  */
 
 EMUTLS_ATTR void *
-__emutls_get_address (struct __emutls_object *obj)
+__emutls_get_address (void *_obj)
 {
+  struct __emutls_object *obj = (struct __emutls_object *)_obj;
   if (! __gthread_active_p ())
     {
       if (__builtin_expect (obj->loc.ptr == NULL, 0))
@@ -201,9 +202,10 @@ __emutls_get_address (struct __emutls_object *obj)
 }
 
 EMUTLS_ATTR void
-__emutls_register_common (struct __emutls_object *obj,
+__emutls_register_common (void *_obj,
 			  word size, word align, void *templ)
 {
+  struct __emutls_object *obj = (struct __emutls_object *)_obj;
   if (obj->size < size)
     {
       obj->size = size;
diff --git a/libgcc/gthr-posix.h b/libgcc/gthr-posix.h
index eb8af567cd5..008873b2838 100644
--- a/libgcc/gthr-posix.h
+++ b/libgcc/gthr-posix.h
@@ -82,7 +82,7 @@ typedef struct timespec __gthread_time_t;
 # define __GTHREAD_COND_INIT_FUNCTION __gthread_cond_init_function
 #endif
 
-#if SUPPORTS_WEAK && GTHREAD_USE_WEAK
+#if SUPPORTS_WEAK && GTHREAD_USE_WEAK && !defined(__MINGW32__)
 # ifndef __gthrw_pragma
 #  define __gthrw_pragma(pragma)
 # endif
diff --git a/libgcc/libgcc2.c b/libgcc/libgcc2.c
index 17de0a7e246..ec08031b2c1 100644
--- a/libgcc/libgcc2.c
+++ b/libgcc/libgcc2.c
@@ -2309,6 +2309,9 @@ SYMBOL__MAIN (void)
 
    Long term no port should use those extensions.  But many still do.  */
 #if !defined(__LIBGCC_INIT_SECTION_ASM_OP__)
+#if defined(__MINT__) && defined(__ELF__)
+/* nothing; we use the definitions from crtstuff.c now */
+#else
 #if defined (TARGET_ASM_CONSTRUCTOR) || defined (USE_COLLECT2)
 func_ptr __CTOR_LIST__[2] = {0, 0};
 func_ptr __DTOR_LIST__[2] = {0, 0};
@@ -2316,6 +2319,7 @@ func_ptr __DTOR_LIST__[2] = {0, 0};
 func_ptr __CTOR_LIST__[2];
 func_ptr __DTOR_LIST__[2];
 #endif
+#endif
 #endif /* no __LIBGCC_INIT_SECTION_ASM_OP__ */
 #endif /* L_ctors */
 #endif /* LIBGCC2_UNITS_PER_WORD <= MIN_UNITS_PER_WORD */
diff --git a/libgcc/soft-fp/addxf3.c b/libgcc/soft-fp/addxf3.c
new file mode 100644
index 00000000000..b379dbe9392
--- /dev/null
+++ b/libgcc/soft-fp/addxf3.c
@@ -0,0 +1,49 @@
+/* Software floating-point emulation.
+   Return a + b
+   Copyright (C) 1997-2022 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   In addition to the permissions in the GNU Lesser General Public
+   License, the Free Software Foundation gives you unlimited
+   permission to link the compiled version of this file into
+   combinations with other programs, and to distribute those
+   combinations without any restriction coming from the use of this
+   file.  (The Lesser General Public License restrictions do apply in
+   other respects; for example, they cover modification of the file,
+   and distribution when not linked into a combine executable.)
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#include "soft-fp.h"
+#include "extended.h"
+
+XFtype
+__addxf3 (XFtype a, XFtype b)
+{
+  FP_DECL_EX;
+  FP_DECL_E (A);
+  FP_DECL_E (B);
+  FP_DECL_E (R);
+  XFtype r;
+
+  FP_INIT_ROUNDMODE;
+  FP_UNPACK_SEMIRAW_E (A, a);
+  FP_UNPACK_SEMIRAW_E (B, b);
+  FP_ADD_E (R, A, B);
+  FP_PACK_SEMIRAW_E (r, R);
+  FP_HANDLE_EXCEPTIONS;
+
+  return r;
+}
diff --git a/libgcc/soft-fp/divxf3.c b/libgcc/soft-fp/divxf3.c
new file mode 100644
index 00000000000..d698492c844
--- /dev/null
+++ b/libgcc/soft-fp/divxf3.c
@@ -0,0 +1,49 @@
+/* Software floating-point emulation.
+   Return a / b
+   Copyright (C) 1997-2022 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   In addition to the permissions in the GNU Lesser General Public
+   License, the Free Software Foundation gives you unlimited
+   permission to link the compiled version of this file into
+   combinations with other programs, and to distribute those
+   combinations without any restriction coming from the use of this
+   file.  (The Lesser General Public License restrictions do apply in
+   other respects; for example, they cover modification of the file,
+   and distribution when not linked into a combine executable.)
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#include "soft-fp.h"
+#include "extended.h"
+
+XFtype
+__divxf3 (XFtype a, XFtype b)
+{
+  FP_DECL_EX;
+  FP_DECL_E (A);
+  FP_DECL_E (B);
+  FP_DECL_E (R);
+  XFtype r;
+
+  FP_INIT_ROUNDMODE;
+  FP_UNPACK_E (A, a);
+  FP_UNPACK_E (B, b);
+  FP_DIV_E (R, A, B);
+  FP_PACK_E (r, R);
+  FP_HANDLE_EXCEPTIONS;
+
+  return r;
+}
diff --git a/libgcc/soft-fp/double.h b/libgcc/soft-fp/double.h
index 7f897ec6bcc..9498dc8544b 100644
--- a/libgcc/soft-fp/double.h
+++ b/libgcc/soft-fp/double.h
@@ -190,6 +190,7 @@ union _FP_UNION_D
 # define FP_FROM_INT_D(X, r, rs, rt)	_FP_FROM_INT (D, 2, X, (r), (rs), rt)
 
 # define _FP_FRAC_HIGH_D(X)	_FP_FRAC_HIGH_2 (X)
+# define _FP_FRAC_ZEROHIGH_D(X)
 # define _FP_FRAC_HIGH_RAW_D(X)	_FP_FRAC_HIGH_2 (X)
 
 # define _FP_FRAC_HIGH_DW_D(X)	_FP_FRAC_HIGH_4 (X)
@@ -314,10 +315,13 @@ union _FP_UNION_D
 # define FP_FROM_INT_D(X, r, rs, rt)	_FP_FROM_INT (D, 1, X, (r), (rs), rt)
 
 # define _FP_FRAC_HIGH_D(X)	_FP_FRAC_HIGH_1 (X)
+# define _FP_FRAC_ZEROHIGH_D(X)
 # define _FP_FRAC_HIGH_RAW_D(X)	_FP_FRAC_HIGH_1 (X)
 
 # define _FP_FRAC_HIGH_DW_D(X)	_FP_FRAC_HIGH_2 (X)
 
 #endif /* W_TYPE_SIZE < 64 */
 
+#include "softfp-protos.h"
+
 #endif /* !SOFT_FP_DOUBLE_H */
diff --git a/libgcc/soft-fp/eqxf2.c b/libgcc/soft-fp/eqxf2.c
new file mode 100644
index 00000000000..f5d86407a6d
--- /dev/null
+++ b/libgcc/soft-fp/eqxf2.c
@@ -0,0 +1,49 @@
+/* Software floating-point emulation.
+   Return 0 iff a == b, 1 otherwise
+   Copyright (C) 1997-2022 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   In addition to the permissions in the GNU Lesser General Public
+   License, the Free Software Foundation gives you unlimited
+   permission to link the compiled version of this file into
+   combinations with other programs, and to distribute those
+   combinations without any restriction coming from the use of this
+   file.  (The Lesser General Public License restrictions do apply in
+   other respects; for example, they cover modification of the file,
+   and distribution when not linked into a combine executable.)
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#include "soft-fp.h"
+#include "extended.h"
+
+CMPtype
+__eqxf2 (XFtype a, XFtype b)
+{
+  FP_DECL_EX;
+  FP_DECL_E (A);
+  FP_DECL_E (B);
+  CMPtype r;
+
+  FP_INIT_EXCEPTIONS;
+  FP_UNPACK_RAW_E (A, a);
+  FP_UNPACK_RAW_E (B, b);
+  FP_CMP_EQ_E (r, A, B, 1);
+  FP_HANDLE_EXCEPTIONS;
+
+  return r;
+}
+
+strong_alias (__eqxf2, __nexf2);
diff --git a/libgcc/soft-fp/extenddfxf2.c b/libgcc/soft-fp/extenddfxf2.c
new file mode 100644
index 00000000000..053ee08a8ca
--- /dev/null
+++ b/libgcc/soft-fp/extenddfxf2.c
@@ -0,0 +1,53 @@
+/* Software floating-point emulation.
+   Return a converted to IEEE quad
+   Copyright (C) 2007-2022 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   In addition to the permissions in the GNU Lesser General Public
+   License, the Free Software Foundation gives you unlimited
+   permission to link the compiled version of this file into
+   combinations with other programs, and to distribute those
+   combinations without any restriction coming from the use of this
+   file.  (The Lesser General Public License restrictions do apply in
+   other respects; for example, they cover modification of the file,
+   and distribution when not linked into a combine executable.)
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#define FP_NO_EXACT_UNDERFLOW
+#include "soft-fp.h"
+#include "double.h"
+#include "extended.h"
+
+XFtype
+__extenddfxf2 (DFtype a)
+{
+  FP_DECL_EX;
+  FP_DECL_D (A);
+  FP_DECL_E (R);
+  XFtype r;
+
+  FP_INIT_TRAPPING_EXCEPTIONS;
+  FP_UNPACK_RAW_D (A, a);
+#if _FP_W_TYPE_SIZE < 64
+  FP_EXTEND (E, D, 4, 2, R, A);
+#else
+  FP_EXTEND (E, D, 2, 1, R, A);
+#endif
+  FP_PACK_RAW_E (r, R);
+  FP_HANDLE_EXCEPTIONS;
+
+  return r;
+}
diff --git a/libgcc/soft-fp/extended.h b/libgcc/soft-fp/extended.h
index 435be3dfeba..c8370c55e20 100644
--- a/libgcc/soft-fp/extended.h
+++ b/libgcc/soft-fp/extended.h
@@ -76,10 +76,9 @@ union _FP_UNION_E
   struct _FP_STRUCT_LAYOUT
   {
 # if __BYTE_ORDER == __BIG_ENDIAN
-    unsigned long pad1 : _FP_W_TYPE_SIZE;
-    unsigned long pad2 : (_FP_W_TYPE_SIZE - 1 - _FP_EXPBITS_E);
     unsigned long sign : 1;
     unsigned long exp : _FP_EXPBITS_E;
+    unsigned long pad2 : (_FP_W_TYPE_SIZE - 1 - _FP_EXPBITS_E);
     unsigned long frac1 : _FP_W_TYPE_SIZE;
     unsigned long frac0 : _FP_W_TYPE_SIZE;
 # else
@@ -302,9 +301,10 @@ union _FP_UNION_E
 # define FP_FROM_INT_E(X, r, rs, rt)	_FP_FROM_INT (E, 4, X, (r), (rs), rt)
 
 # define _FP_FRAC_HIGH_E(X)	(X##_f[2])
+# define _FP_FRAC_ZEROHIGH_E(X)	(X##_f[3] = 0)
 # define _FP_FRAC_HIGH_RAW_E(X)	(X##_f[1])
 
-# define _FP_FRAC_HIGH_DW_E(X)	(X##_f[4])
+# define _FP_FRAC_HIGH_DW_E(X)	_FP_FRAC_HIGH_4(X)
 
 #else   /* not _FP_W_TYPE_SIZE < 64 */
 union _FP_UNION_E
@@ -313,9 +313,9 @@ union _FP_UNION_E
   struct _FP_STRUCT_LAYOUT
   {
 # if __BYTE_ORDER == __BIG_ENDIAN
-    _FP_W_TYPE pad  : (_FP_W_TYPE_SIZE - 1 - _FP_EXPBITS_E);
     unsigned sign   : 1;
     unsigned exp    : _FP_EXPBITS_E;
+    _FP_W_TYPE pad  : (_FP_W_TYPE_SIZE - 1 - _FP_EXPBITS_E);
     _FP_W_TYPE frac : _FP_W_TYPE_SIZE;
 # else
     _FP_W_TYPE frac : _FP_W_TYPE_SIZE;
@@ -508,10 +508,13 @@ union _FP_UNION_E
 # define FP_FROM_INT_E(X, r, rs, rt)	_FP_FROM_INT (E, 2, X, (r), (rs), rt)
 
 # define _FP_FRAC_HIGH_E(X)	(X##_f1)
+# define _FP_FRAC_ZEROHIGH_E(X)
 # define _FP_FRAC_HIGH_RAW_E(X)	(X##_f0)
 
 # define _FP_FRAC_HIGH_DW_E(X)	(X##_f[2])
 
 #endif /* not _FP_W_TYPE_SIZE < 64 */
 
+#include "softfp-protos.h"
+
 #endif /* !SOFT_FP_EXTENDED_H */
diff --git a/libgcc/soft-fp/extendsfxf2.c b/libgcc/soft-fp/extendsfxf2.c
new file mode 100644
index 00000000000..d9ae418f3ef
--- /dev/null
+++ b/libgcc/soft-fp/extendsfxf2.c
@@ -0,0 +1,53 @@
+/* Software floating-point emulation.
+   Return a converted to IEEE quad
+   Copyright (C) 1997-2022 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   In addition to the permissions in the GNU Lesser General Public
+   License, the Free Software Foundation gives you unlimited
+   permission to link the compiled version of this file into
+   combinations with other programs, and to distribute those
+   combinations without any restriction coming from the use of this
+   file.  (The Lesser General Public License restrictions do apply in
+   other respects; for example, they cover modification of the file,
+   and distribution when not linked into a combine executable.)
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#define FP_NO_EXACT_UNDERFLOW
+#include "soft-fp.h"
+#include "single.h"
+#include "extended.h"
+
+XFtype
+__extendsfxf2 (SFtype a)
+{
+  FP_DECL_EX;
+  FP_DECL_S (A);
+  FP_DECL_E (R);
+  XFtype r;
+
+  FP_INIT_EXCEPTIONS;
+  FP_UNPACK_RAW_S (A, a);
+#if _FP_W_TYPE_SIZE < 64
+  FP_EXTEND (E, S, 4, 1, R, A);
+#else
+  FP_EXTEND (E, S, 2, 1, R, A);
+#endif
+  FP_PACK_RAW_E (r, R);
+  FP_HANDLE_EXCEPTIONS;
+
+  return r;
+}
diff --git a/libgcc/soft-fp/extendxftf2.c b/libgcc/soft-fp/extendxftf2.c
index d9885e5c8fc..444b69352d3 100644
--- a/libgcc/soft-fp/extendxftf2.c
+++ b/libgcc/soft-fp/extendxftf2.c
@@ -27,6 +27,7 @@
    License along with the GNU C Library; if not, see
    <http://www.gnu.org/licenses/>.  */
 
+#define FP_NO_EXACT_UNDERFLOW
 #include "soft-fp.h"
 #include "extended.h"
 #include "quad.h"
diff --git a/libgcc/soft-fp/fixunsxfdi.c b/libgcc/soft-fp/fixunsxfdi.c
new file mode 100644
index 00000000000..7826eb586c1
--- /dev/null
+++ b/libgcc/soft-fp/fixunsxfdi.c
@@ -0,0 +1,45 @@
+/* Software floating-point emulation.
+   Convert a to 64bit unsigned integer
+   Copyright (C) 1997-2022 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   In addition to the permissions in the GNU Lesser General Public
+   License, the Free Software Foundation gives you unlimited
+   permission to link the compiled version of this file into
+   combinations with other programs, and to distribute those
+   combinations without any restriction coming from the use of this
+   file.  (The Lesser General Public License restrictions do apply in
+   other respects; for example, they cover modification of the file,
+   and distribution when not linked into a combine executable.)
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#include "soft-fp.h"
+#include "extended.h"
+
+UDItype
+__fixunsxfdi (XFtype a)
+{
+  FP_DECL_EX;
+  FP_DECL_E (A);
+  UDItype r;
+
+  FP_INIT_EXCEPTIONS;
+  FP_UNPACK_RAW_E (A, a);
+  FP_TO_INT_E (r, A, DI_BITS, 0);
+  FP_HANDLE_EXCEPTIONS;
+
+  return r;
+}
diff --git a/libgcc/soft-fp/fixunsxfsi.c b/libgcc/soft-fp/fixunsxfsi.c
new file mode 100644
index 00000000000..2197c15af56
--- /dev/null
+++ b/libgcc/soft-fp/fixunsxfsi.c
@@ -0,0 +1,45 @@
+/* Software floating-point emulation.
+   Convert a to 32bit unsigned integer
+   Copyright (C) 1997-2022 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   In addition to the permissions in the GNU Lesser General Public
+   License, the Free Software Foundation gives you unlimited
+   permission to link the compiled version of this file into
+   combinations with other programs, and to distribute those
+   combinations without any restriction coming from the use of this
+   file.  (The Lesser General Public License restrictions do apply in
+   other respects; for example, they cover modification of the file,
+   and distribution when not linked into a combine executable.)
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#include "soft-fp.h"
+#include "extended.h"
+
+USItype
+__fixunsxfsi (XFtype a)
+{
+  FP_DECL_EX;
+  FP_DECL_E (A);
+  USItype r;
+
+  FP_INIT_EXCEPTIONS;
+  FP_UNPACK_RAW_E (A, a);
+  FP_TO_INT_E (r, A, SI_BITS, 0);
+  FP_HANDLE_EXCEPTIONS;
+
+  return r;
+}
diff --git a/libgcc/soft-fp/fixxfdi.c b/libgcc/soft-fp/fixxfdi.c
new file mode 100644
index 00000000000..191b2cc9640
--- /dev/null
+++ b/libgcc/soft-fp/fixxfdi.c
@@ -0,0 +1,45 @@
+/* Software floating-point emulation.
+   Convert a to 64bit signed integer
+   Copyright (C) 1997-2022 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   In addition to the permissions in the GNU Lesser General Public
+   License, the Free Software Foundation gives you unlimited
+   permission to link the compiled version of this file into
+   combinations with other programs, and to distribute those
+   combinations without any restriction coming from the use of this
+   file.  (The Lesser General Public License restrictions do apply in
+   other respects; for example, they cover modification of the file,
+   and distribution when not linked into a combine executable.)
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#include "soft-fp.h"
+#include "extended.h"
+
+DItype
+__fixxfdi (XFtype a)
+{
+  FP_DECL_EX;
+  FP_DECL_E (A);
+  UDItype r;
+
+  FP_INIT_EXCEPTIONS;
+  FP_UNPACK_RAW_E (A, a);
+  FP_TO_INT_E (r, A, DI_BITS, 1);
+  FP_HANDLE_EXCEPTIONS;
+
+  return r;
+}
diff --git a/libgcc/soft-fp/fixxfsi.c b/libgcc/soft-fp/fixxfsi.c
new file mode 100644
index 00000000000..d7b194e5094
--- /dev/null
+++ b/libgcc/soft-fp/fixxfsi.c
@@ -0,0 +1,45 @@
+/* Software floating-point emulation.
+   Convert a to 32bit signed integer
+   Copyright (C) 1997-2022 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   In addition to the permissions in the GNU Lesser General Public
+   License, the Free Software Foundation gives you unlimited
+   permission to link the compiled version of this file into
+   combinations with other programs, and to distribute those
+   combinations without any restriction coming from the use of this
+   file.  (The Lesser General Public License restrictions do apply in
+   other respects; for example, they cover modification of the file,
+   and distribution when not linked into a combine executable.)
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#include "soft-fp.h"
+#include "extended.h"
+
+SItype
+__fixxfsi (XFtype a)
+{
+  FP_DECL_EX;
+  FP_DECL_E (A);
+  USItype r;
+
+  FP_INIT_EXCEPTIONS;
+  FP_UNPACK_RAW_E (A, a);
+  FP_TO_INT_E (r, A, SI_BITS, 1);
+  FP_HANDLE_EXCEPTIONS;
+
+  return r;
+}
diff --git a/libgcc/soft-fp/floatdixf.c b/libgcc/soft-fp/floatdixf.c
new file mode 100644
index 00000000000..1ffc2b36e84
--- /dev/null
+++ b/libgcc/soft-fp/floatdixf.c
@@ -0,0 +1,46 @@
+/* Software floating-point emulation.
+   Convert a 64bit signed integer to IEEE double
+   Copyright (C) 1997-2022 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   In addition to the permissions in the GNU Lesser General Public
+   License, the Free Software Foundation gives you unlimited
+   permission to link the compiled version of this file into
+   combinations with other programs, and to distribute those
+   combinations without any restriction coming from the use of this
+   file.  (The Lesser General Public License restrictions do apply in
+   other respects; for example, they cover modification of the file,
+   and distribution when not linked into a combine executable.)
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#define FP_NO_EXCEPTIONS
+#include "soft-fp.h"
+#include "extended.h"
+
+XFtype
+__floatdixf (DItype i)
+{
+  FP_DECL_EX;
+  FP_DECL_E (A);
+  XFtype a;
+
+  FP_INIT_ROUNDMODE;
+  FP_FROM_INT_E (A, i, DI_BITS, UDItype);
+  FP_PACK_RAW_E (a, A);
+  FP_HANDLE_EXCEPTIONS;
+
+  return a;
+}
diff --git a/libgcc/soft-fp/floatsixf.c b/libgcc/soft-fp/floatsixf.c
new file mode 100644
index 00000000000..dc1589c844a
--- /dev/null
+++ b/libgcc/soft-fp/floatsixf.c
@@ -0,0 +1,43 @@
+/* Software floating-point emulation.
+   Convert a 32bit signed integer to IEEE double
+   Copyright (C) 1997-2022 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   In addition to the permissions in the GNU Lesser General Public
+   License, the Free Software Foundation gives you unlimited
+   permission to link the compiled version of this file into
+   combinations with other programs, and to distribute those
+   combinations without any restriction coming from the use of this
+   file.  (The Lesser General Public License restrictions do apply in
+   other respects; for example, they cover modification of the file,
+   and distribution when not linked into a combine executable.)
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#define FP_NO_EXCEPTIONS
+#include "soft-fp.h"
+#include "extended.h"
+
+XFtype
+__floatsixf (SItype i)
+{
+  FP_DECL_E (A);
+  XFtype a;
+
+  FP_FROM_INT_E (A, i, SI_BITS, USItype);
+  FP_PACK_RAW_E (a, A);
+
+  return a;
+}
diff --git a/libgcc/soft-fp/floatundixf.c b/libgcc/soft-fp/floatundixf.c
new file mode 100644
index 00000000000..fa397ff2373
--- /dev/null
+++ b/libgcc/soft-fp/floatundixf.c
@@ -0,0 +1,46 @@
+/* Software floating-point emulation.
+   Convert a 64bit unsigned integer to IEEE double
+   Copyright (C) 1997-2022 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   In addition to the permissions in the GNU Lesser General Public
+   License, the Free Software Foundation gives you unlimited
+   permission to link the compiled version of this file into
+   combinations with other programs, and to distribute those
+   combinations without any restriction coming from the use of this
+   file.  (The Lesser General Public License restrictions do apply in
+   other respects; for example, they cover modification of the file,
+   and distribution when not linked into a combine executable.)
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#define FP_NO_EXCEPTIONS
+#include "soft-fp.h"
+#include "extended.h"
+
+XFtype
+__floatundixf (UDItype i)
+{
+  FP_DECL_EX;
+  FP_DECL_E (A);
+  XFtype a;
+
+  FP_INIT_ROUNDMODE;
+  FP_FROM_INT_E (A, i, DI_BITS, UDItype);
+  FP_PACK_RAW_E (a, A);
+  FP_HANDLE_EXCEPTIONS;
+
+  return a;
+}
diff --git a/libgcc/soft-fp/floatunsixf.c b/libgcc/soft-fp/floatunsixf.c
new file mode 100644
index 00000000000..09994a9d01f
--- /dev/null
+++ b/libgcc/soft-fp/floatunsixf.c
@@ -0,0 +1,43 @@
+/* Software floating-point emulation.
+   Convert a 32bit unsigned integer to IEEE double
+   Copyright (C) 1997-2022 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   In addition to the permissions in the GNU Lesser General Public
+   License, the Free Software Foundation gives you unlimited
+   permission to link the compiled version of this file into
+   combinations with other programs, and to distribute those
+   combinations without any restriction coming from the use of this
+   file.  (The Lesser General Public License restrictions do apply in
+   other respects; for example, they cover modification of the file,
+   and distribution when not linked into a combine executable.)
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#define FP_NO_EXCEPTIONS
+#include "soft-fp.h"
+#include "extended.h"
+
+XFtype
+__floatunsixf (USItype i)
+{
+  FP_DECL_E (A);
+  XFtype a;
+
+  FP_FROM_INT_E (A, i, SI_BITS, USItype);
+  FP_PACK_RAW_E (a, A);
+
+  return a;
+}
diff --git a/libgcc/soft-fp/gexf2.c b/libgcc/soft-fp/gexf2.c
new file mode 100644
index 00000000000..bae1915e825
--- /dev/null
+++ b/libgcc/soft-fp/gexf2.c
@@ -0,0 +1,49 @@
+/* Software floating-point emulation.
+   Return 0 iff a == b, 1 iff a > b, -2 iff a ? b, -1 iff a < b
+   Copyright (C) 1997-2022 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   In addition to the permissions in the GNU Lesser General Public
+   License, the Free Software Foundation gives you unlimited
+   permission to link the compiled version of this file into
+   combinations with other programs, and to distribute those
+   combinations without any restriction coming from the use of this
+   file.  (The Lesser General Public License restrictions do apply in
+   other respects; for example, they cover modification of the file,
+   and distribution when not linked into a combine executable.)
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#include "soft-fp.h"
+#include "extended.h"
+
+CMPtype
+__gexf2 (XFtype a, XFtype b)
+{
+  FP_DECL_EX;
+  FP_DECL_E (A);
+  FP_DECL_E (B);
+  CMPtype r;
+
+  FP_INIT_EXCEPTIONS;
+  FP_UNPACK_RAW_E (A, a);
+  FP_UNPACK_RAW_E (B, b);
+  FP_CMP_E (r, A, B, -2, 2);
+  FP_HANDLE_EXCEPTIONS;
+
+  return r;
+}
+
+strong_alias (__gexf2, __gtxf2);
diff --git a/libgcc/soft-fp/half.h b/libgcc/soft-fp/half.h
index c7823ac61d3..7b57996d52f 100644
--- a/libgcc/soft-fp/half.h
+++ b/libgcc/soft-fp/half.h
@@ -164,6 +164,7 @@ union _FP_UNION_H
 /* HFmode arithmetic is not implemented.  */
 
 #define _FP_FRAC_HIGH_H(X)	_FP_FRAC_HIGH_1 (X)
+#define _FP_FRAC_ZEROHIGH_H(X)
 #define _FP_FRAC_HIGH_RAW_H(X)	_FP_FRAC_HIGH_1 (X)
 #define _FP_FRAC_HIGH_DW_H(X)	_FP_FRAC_HIGH_1 (X)
 
diff --git a/libgcc/soft-fp/lexf2.c b/libgcc/soft-fp/lexf2.c
new file mode 100644
index 00000000000..2bf1b992f3a
--- /dev/null
+++ b/libgcc/soft-fp/lexf2.c
@@ -0,0 +1,49 @@
+/* Software floating-point emulation.
+   Return 0 iff a == b, 1 iff a > b, 2 iff a ? b, -1 iff a < b
+   Copyright (C) 1997-2022 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   In addition to the permissions in the GNU Lesser General Public
+   License, the Free Software Foundation gives you unlimited
+   permission to link the compiled version of this file into
+   combinations with other programs, and to distribute those
+   combinations without any restriction coming from the use of this
+   file.  (The Lesser General Public License restrictions do apply in
+   other respects; for example, they cover modification of the file,
+   and distribution when not linked into a combine executable.)
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#include "soft-fp.h"
+#include "extended.h"
+
+CMPtype
+__lexf2 (XFtype a, XFtype b)
+{
+  FP_DECL_EX;
+  FP_DECL_E (A);
+  FP_DECL_E (B);
+  CMPtype r;
+
+  FP_INIT_EXCEPTIONS;
+  FP_UNPACK_RAW_E (A, a);
+  FP_UNPACK_RAW_E (B, b);
+  FP_CMP_E (r, A, B, 2, 2);
+  FP_HANDLE_EXCEPTIONS;
+
+  return r;
+}
+
+strong_alias (__lexf2, __ltxf2);
diff --git a/libgcc/soft-fp/mulxf3.c b/libgcc/soft-fp/mulxf3.c
new file mode 100644
index 00000000000..1f720011865
--- /dev/null
+++ b/libgcc/soft-fp/mulxf3.c
@@ -0,0 +1,49 @@
+/* Software floating-point emulation.
+   Return a * b
+   Copyright (C) 1997-2022 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   In addition to the permissions in the GNU Lesser General Public
+   License, the Free Software Foundation gives you unlimited
+   permission to link the compiled version of this file into
+   combinations with other programs, and to distribute those
+   combinations without any restriction coming from the use of this
+   file.  (The Lesser General Public License restrictions do apply in
+   other respects; for example, they cover modification of the file,
+   and distribution when not linked into a combine executable.)
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#include "soft-fp.h"
+#include "extended.h"
+
+XFtype
+__mulxf3 (XFtype a, XFtype b)
+{
+  FP_DECL_EX;
+  FP_DECL_E (A);
+  FP_DECL_E (B);
+  FP_DECL_E (R);
+  XFtype r;
+
+  FP_INIT_ROUNDMODE;
+  FP_UNPACK_E (A, a);
+  FP_UNPACK_E (B, b);
+  FP_MUL_E (R, A, B);
+  FP_PACK_E (r, R);
+  FP_HANDLE_EXCEPTIONS;
+
+  return r;
+}
diff --git a/libgcc/soft-fp/negxf2.c b/libgcc/soft-fp/negxf2.c
new file mode 100644
index 00000000000..2da7d10ab3d
--- /dev/null
+++ b/libgcc/soft-fp/negxf2.c
@@ -0,0 +1,44 @@
+/* Software floating-point emulation.
+   Return -a
+   Copyright (C) 1997-2022 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   In addition to the permissions in the GNU Lesser General Public
+   License, the Free Software Foundation gives you unlimited
+   permission to link the compiled version of this file into
+   combinations with other programs, and to distribute those
+   combinations without any restriction coming from the use of this
+   file.  (The Lesser General Public License restrictions do apply in
+   other respects; for example, they cover modification of the file,
+   and distribution when not linked into a combine executable.)
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#include "soft-fp.h"
+#include "extended.h"
+
+XFtype
+__negxf2 (XFtype a)
+{
+  FP_DECL_E (A);
+  FP_DECL_E (R);
+  XFtype r;
+
+  FP_UNPACK_RAW_E (A, a);
+  FP_NEG_E (R, A);
+  FP_PACK_RAW_E (r, R);
+
+  return r;
+}
diff --git a/libgcc/soft-fp/op-2.h b/libgcc/soft-fp/op-2.h
index 96bdc41d067..47c61acadd7 100644
--- a/libgcc/soft-fp/op-2.h
+++ b/libgcc/soft-fp/op-2.h
@@ -34,7 +34,7 @@
 #define SOFT_FP_OP_2_H	1
 
 #define _FP_FRAC_DECL_2(X)				\
-  _FP_W_TYPE X##_f0 _FP_ZERO_INIT, X##_f1 _FP_ZERO_INIT
+  _FP_W_TYPE X##_f0 _FP_ZERO_INIT, X##_f1 _FP_ZERO_INIT __attribute__((unused))
 #define _FP_FRAC_COPY_2(D, S)	(D##_f0 = S##_f0, D##_f1 = S##_f1)
 #define _FP_FRAC_SET_2(X, I)	__FP_FRAC_SET_2 (X, I)
 #define _FP_FRAC_HIGH_2(X)	(X##_f1)
@@ -198,9 +198,9 @@
 # undef __FP_FRAC_ADDI_2
 # define __FP_FRAC_ADDI_2(xh, xl, i)	add_ssaaaa (xh, xl, xh, xl, 0, i)
 # undef __FP_FRAC_ADD_2
-# define __FP_FRAC_ADD_2		add_ssaaaa
+# define __FP_FRAC_ADD_2(rh, rl, xh, xl, yh, yl) add_ssaaaa(rh, rl, xh, xl, yh, yl)
 # undef __FP_FRAC_SUB_2
-# define __FP_FRAC_SUB_2		sub_ddmmss
+# define __FP_FRAC_SUB_2(rh, rl, xh, xl, yh, yl) sub_ddmmss(rh, rl, xh, xl, yh, yl)
 # undef __FP_FRAC_DEC_2
 # define __FP_FRAC_DEC_2(xh, xl, yh, yl)	\
   sub_ddmmss (xh, xl, xh, xl, yh, yl)
diff --git a/libgcc/soft-fp/op-common.h b/libgcc/soft-fp/op-common.h
index a6406798fc4..6c3b5b027f8 100644
--- a/libgcc/soft-fp/op-common.h
+++ b/libgcc/soft-fp/op-common.h
@@ -247,6 +247,7 @@
 	    _FP_OVERFLOW_SEMIRAW (fs, wc, X);			\
 	}							\
       _FP_FRAC_SRL_##wc (X, _FP_WORKBITS);			\
+      _FP_FRAC_ZEROHIGH_##fs(X);				\
       if (X##_e == _FP_EXPMAX_##fs && !_FP_FRAC_ZEROP_##wc (X))	\
 	{							\
 	  if (!_FP_KEEPNANFRACP)				\
@@ -824,6 +825,7 @@
 		 canceling it; renormalize.  */				\
 	      _FP_FRAC_HIGH_##fs (R) &= _FP_IMPLBIT_SH_##fs - 1;	\
 	    norm:							\
+	      _FP_FRAC_ZEROHIGH_##fs(R); \
 	      _FP_FRAC_CLZ_##wc (_FP_ADD_INTERNAL_diff, R);		\
 	      _FP_ADD_INTERNAL_diff -= _FP_WFRACXBITS_##fs;		\
 	      _FP_FRAC_SLL_##wc (R, _FP_ADD_INTERNAL_diff);		\
diff --git a/libgcc/soft-fp/quad.h b/libgcc/soft-fp/quad.h
index ef860b4dd6b..f3bd76971aa 100644
--- a/libgcc/soft-fp/quad.h
+++ b/libgcc/soft-fp/quad.h
@@ -195,6 +195,7 @@ union _FP_UNION_Q
 # define FP_FROM_INT_Q(X, r, rs, rt)	_FP_FROM_INT (Q, 4, X, (r), (rs), rt)
 
 # define _FP_FRAC_HIGH_Q(X)	_FP_FRAC_HIGH_4 (X)
+# define _FP_FRAC_ZEROHIGH_Q(X)
 # define _FP_FRAC_HIGH_RAW_Q(X)	_FP_FRAC_HIGH_4 (X)
 
 # define _FP_FRAC_HIGH_DW_Q(X)	_FP_FRAC_HIGH_8 (X)
@@ -321,6 +322,7 @@ union _FP_UNION_Q
 # define FP_FROM_INT_Q(X, r, rs, rt)	_FP_FROM_INT (Q, 2, X, (r), (rs), rt)
 
 # define _FP_FRAC_HIGH_Q(X)	_FP_FRAC_HIGH_2 (X)
+# define _FP_FRAC_ZEROHIGH_Q(X)
 # define _FP_FRAC_HIGH_RAW_Q(X)	_FP_FRAC_HIGH_2 (X)
 
 # define _FP_FRAC_HIGH_DW_Q(X)	_FP_FRAC_HIGH_4 (X)
diff --git a/libgcc/soft-fp/single.h b/libgcc/soft-fp/single.h
index 8c71fc790b6..1c0a42c08fd 100644
--- a/libgcc/soft-fp/single.h
+++ b/libgcc/soft-fp/single.h
@@ -188,6 +188,7 @@ union _FP_UNION_S
 #define FP_FROM_INT_S(X, r, rs, rt)	_FP_FROM_INT (S, 1, X, (r), (rs), rt)
 
 #define _FP_FRAC_HIGH_S(X)	_FP_FRAC_HIGH_1 (X)
+#define _FP_FRAC_ZEROHIGH_S(X)
 #define _FP_FRAC_HIGH_RAW_S(X)	_FP_FRAC_HIGH_1 (X)
 
 #if _FP_W_TYPE_SIZE < 64
@@ -196,4 +197,6 @@ union _FP_UNION_S
 # define _FP_FRAC_HIGH_DW_S(X)	_FP_FRAC_HIGH_1 (X)
 #endif
 
+#include "softfp-protos.h"
+
 #endif /* !SOFT_FP_SINGLE_H */
diff --git a/libgcc/soft-fp/softfp-protos.h b/libgcc/soft-fp/softfp-protos.h
new file mode 100644
index 00000000000..6bf7e9bf42e
--- /dev/null
+++ b/libgcc/soft-fp/softfp-protos.h
@@ -0,0 +1,215 @@
+#ifdef __FLT16_MANT_DIG__
+#define LIBGCC_HAS_HF_MODE
+#endif
+#ifdef __FLT_MANT_DIG__
+#define LIBGCC_HAS_SF_MODE
+#endif
+#ifdef __DBL_MANT_DIG__
+#define LIBGCC_HAS_DF_MODE
+#endif
+#if defined(__LDBL_MANT_DIG__) && __DBL_MANT_DIG__ != __LDBL_MANT_DIG__
+#define LIBGCC_HAS_XF_MODE
+#endif
+#if defined(__FLT128_MANT_DIG__) && (!defined(__LDBL_MANT_DIG__) || __FLT128_MANT_DIG__ != __LDBL_MANT_DIG__)
+#define LIBGCC_HAS_TF_MODE
+#endif
+
+/*
+ * half
+ */
+#ifdef LIBGCC_HAS_HF_MODE
+CMPtype __unordhf2(_Float16 a, _Float16 b);
+_Float16 __floatsihf (SItype a1);
+_Float16 __floatdihf (DItype a1);
+_Float16 __floatunsihf (USItype a1);
+_Float16 __floatundihf (UDItype a1);
+SItype __fixhfsi (_Float16 a1);
+DItype __fixhfdi (_Float16 a1);
+USItype __fixunshfsi (_Float16 a1);
+UDItype __fixunshfdi (_Float16 a1);
+_Float16 __addhf3 (_Float16 x1, _Float16 x2);
+_Float16 __subhf3 (_Float16 x1, _Float16 x2);
+_Float16 __mulhf3 (_Float16 x1, _Float16 x2);
+_Float16 __divhf3 (_Float16 x1, _Float16 x2);
+_Float16 __neghf2 (_Float16 x1);
+CMPtype __cmphf2 (_Float16 x1, _Float16 x2);
+CMPtype __eqhf2 (_Float16 x1, _Float16 x2);
+CMPtype __nehf2 (_Float16 x1, _Float16 x2);
+CMPtype __lthf2 (_Float16 x1, _Float16 x2);
+CMPtype __lehf2 (_Float16 x1, _Float16 x2);
+CMPtype __gthf2 (_Float16 x1, _Float16 x2);
+CMPtype __gehf2 (_Float16 x1, _Float16 x2);
+
+#ifdef LIBGCC_HAS_SF_MODE
+float __extendhfsf2 (_Float16 a1);
+#endif
+#ifdef LIBGCC_HAS_DF_MODE
+double __extendhfdf2 (_Float16 a1);
+#endif
+#ifdef LIBGCC_HAS_XF_MODE
+long double __extendhfxf2 (_Float16 a1);
+#endif
+#ifdef LIBGCC_HAS_TF_MODE
+_Float128  __extendhftf2 (_Float16 a1);
+#endif
+#endif
+
+/*
+ * single
+ */
+#ifdef LIBGCC_HAS_SF_MODE
+CMPtype __unordsf2(float a, float b);
+float __floatsisf (SItype a1);
+float __floatdisf (DItype a1);
+float __floatunsisf (USItype a1);
+float __floatundisf (UDItype a1);
+SItype __fixsfsi (float a1);
+DItype __fixsfdi (float a1);
+USItype __fixunssfsi (float a1);
+UDItype __fixunssfdi (float a1);
+float __addsf3 (float x1, float x2);
+float __subsf3 (float x1, float x2);
+float __mulsf3 (float x1, float x2);
+float __divsf3 (float x1, float x2);
+float __negsf2 (float x1);
+CMPtype __cmpsf2 (float x1, float x2);
+CMPtype __eqsf2 (float x1, float x2);
+CMPtype __nesf2 (float x1, float x2);
+CMPtype __ltsf2 (float x1, float x2);
+CMPtype __lesf2 (float x1, float x2);
+CMPtype __gtsf2 (float x1, float x2);
+CMPtype __gesf2 (float x1, float x2);
+
+#ifdef LIBGCC_HAS_HF_MODE
+_Float16 __truncsfhf2 (float a1);
+#endif
+#ifdef LIBGCC_HAS_DF_MODE
+double __extendsfdf2 (float a1);
+#endif
+#ifdef LIBGCC_HAS_XF_MODE
+long double __extendsfxf2 (float a1);
+#endif
+#ifdef LIBGCC_HAS_TF_MODE
+_Float128 __extendsftf2 (float a1);
+#endif
+#endif
+
+/*
+ * double
+ */
+#ifdef LIBGCC_HAS_DF_MODE
+CMPtype __unorddf2(double a, double b);
+double __floatsidf (SItype a1);
+double __floatdidf (DItype a1);
+double __floatunsidf (USItype a1);
+double __floatundidf (UDItype a1);
+SItype __fixdfsi (double a1);
+DItype __fixdfdi (double a1);
+USItype __fixunsdfsi (double a1);
+UDItype __fixunsdfdi (double a1);
+double __adddf3 (double x1, double x2);
+double __subdf3 (double x1, double x2);
+double __muldf3 (double x1, double x2);
+double __divdf3 (double x1, double x2);
+double __negdf2 (double x1);
+CMPtype __cmpdf2 (double x1, double x2);
+CMPtype __eqdf2 (double x1, double x2);
+CMPtype __nedf2 (double x1, double x2);
+CMPtype __ltdf2 (double x1, double x2);
+CMPtype __ledf2 (double x1, double x2);
+CMPtype __gtdf2 (double x1, double x2);
+CMPtype __gedf2 (double x1, double x2);
+
+#ifdef LIBGCC_HAS_HF_MODE
+_Float16 __truncdfhf2 (double a1);
+#endif
+#ifdef LIBGCC_HAS_SF_MODE
+float __truncdfsf2 (double a1);
+#endif
+#ifdef LIBGCC_HAS_XF_MODE
+long double __extenddfxf2(double a1);
+#endif
+#ifdef LIBGCC_HAS_TF_MODE
+_Float128 __extenddftf2(double a1);
+#endif
+#endif
+
+/*
+ * extended
+ */
+#ifdef LIBGCC_HAS_XF_MODE
+CMPtype __unordxf2(long double a, long double b);
+long double __floatsixf (SItype a1);
+long double __floatdixf (DItype a1);
+long double __floatunsixf (USItype a1);
+long double __floatundixf (UDItype a1);
+SItype __fixxfsi (long double a1);
+DItype __fixxfdi (long double a1);
+USItype __fixunsxfsi (long double a1);
+UDItype __fixunsxfdi (long double a1);
+long double __addxf3 (long double x1, long double x2);
+long double __subxf3 (long double x1, long double x2);
+long double __mulxf3 (long double x1, long double x2);
+long double __divxf3 (long double x1, long double x2);
+long double __negxf2 (long double x1);
+CMPtype __cmpxf2 (long double x1, long double x2);
+CMPtype __eqxf2 (long double x1, long double x2);
+CMPtype __nexf2 (long double x1, long double x2);
+CMPtype __ltxf2 (long double x1, long double x2);
+CMPtype __lexf2 (long double x1, long double x2);
+CMPtype __gtxf2 (long double x1, long double x2);
+CMPtype __gexf2 (long double x1, long double x2);
+
+#ifdef LIBGCC_HAS_HF_MODE
+_Float16 __truncxfhf2 (long double a1);
+#endif
+#ifdef LIBGCC_HAS_SF_MODE
+float __truncxfsf2 (long double a1);
+#endif
+#ifdef LIBGCC_HAS_DF_MODE
+double __truncxfdf2 (long double a1);
+#endif
+#ifdef LIBGCC_HAS_TF_MODE
+_Float128 __extendxftf2 (long double a1);
+#endif
+#endif
+
+/*
+ * quad
+ */
+#ifdef LIBGCC_HAS_TF_MODE
+CMPtype __unordtf2(_Float128 a, _Float128 b);
+_Float128 __floatsitf (SItype a1);
+_Float128 __floatditf (DItype a1);
+_Float128 __floatunsitf (USItype a1);
+_Float128 __floatunditf (UDItype a1);
+SItype __fixtfsi (_Float128 a1);
+DItype __fixtfdi (_Float128 a1);
+USItype __fixunstfsi (_Float128 a1);
+UDItype __fixunstfdi (_Float128 a1);
+_Float128 __addtf3 (_Float128 x1, _Float128 x2);
+_Float128 __subtf3 (_Float128 x1, _Float128 x2);
+_Float128 __multf3 (_Float128 x1, _Float128 x2);
+_Float128 __divtf3 (_Float128 x1, _Float128 x2);
+_Float128 __negtf2 (_Float128 x1);
+CMPtype __cmptf2 (_Float128 x1, _Float128 x2);
+CMPtype __eqtf2 (_Float128 x1, _Float128 x2);
+CMPtype __netf2 (_Float128 x1, _Float128 x2);
+CMPtype __lttf2 (_Float128 x1, _Float128 x2);
+CMPtype __letf2 (_Float128 x1, _Float128 x2);
+CMPtype __gttf2 (_Float128 x1, _Float128 x2);
+CMPtype __getf2 (_Float128 x1, _Float128 x2);
+
+#ifdef LIBGCC_HAS_HF_MODE
+_Float16 __trunctfhf2 (_Float128 a1);
+#endif
+#ifdef LIBGCC_HAS_SF_MODE
+float __trunctfsf2 (_Float128 a1);
+#endif
+#ifdef LIBGCC_HAS_DF_MODE
+double __trunctfdf2 (_Float128 a1);
+#endif
+#ifdef LIBGCC_HAS_XF_MODE
+long double __trunctfxf2 (_Float128 a1);
+#endif
+#endif
diff --git a/libgcc/soft-fp/subxf3.c b/libgcc/soft-fp/subxf3.c
new file mode 100644
index 00000000000..00fe2b3e039
--- /dev/null
+++ b/libgcc/soft-fp/subxf3.c
@@ -0,0 +1,49 @@
+/* Software floating-point emulation.
+   Return a - b
+   Copyright (C) 1997-2022 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   In addition to the permissions in the GNU Lesser General Public
+   License, the Free Software Foundation gives you unlimited
+   permission to link the compiled version of this file into
+   combinations with other programs, and to distribute those
+   combinations without any restriction coming from the use of this
+   file.  (The Lesser General Public License restrictions do apply in
+   other respects; for example, they cover modification of the file,
+   and distribution when not linked into a combine executable.)
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#include "soft-fp.h"
+#include "extended.h"
+
+XFtype
+__subxf3 (XFtype a, XFtype b)
+{
+  FP_DECL_EX;
+  FP_DECL_E (A);
+  FP_DECL_E (B);
+  FP_DECL_E (R);
+  XFtype r;
+
+  FP_INIT_ROUNDMODE;
+  FP_UNPACK_SEMIRAW_E (A, a);
+  FP_UNPACK_SEMIRAW_E (B, b);
+  FP_SUB_E (R, A, B);
+  FP_PACK_SEMIRAW_E (r, R);
+  FP_HANDLE_EXCEPTIONS;
+
+  return r;
+}
diff --git a/libgcc/soft-fp/test-double.c b/libgcc/soft-fp/test-double.c
new file mode 100644
index 00000000000..d4253195b31
--- /dev/null
+++ b/libgcc/soft-fp/test-double.c
@@ -0,0 +1,157 @@
+#include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
+#include <ctype.h>
+#include <math.h>
+#include <float.h>
+#include <endian.h>
+#include <stdint.h>
+#include <errno.h>
+#include "soft-fp.h"
+#include "softfp-protos.h"
+
+struct ieee754_double_struct
+{
+#if	__BYTE_ORDER__ == __ORDER_BIG_ENDIAN__
+	unsigned int signexp:12;
+	uint32_t     mantissa0:20;
+	uint32_t     mantissa1:32;
+#else
+	uint32_t mantissa1:32;
+	uint32_t mantissa0:20;
+	unsigned int signexp:12;
+#endif
+};
+
+union ieee754_double
+{
+	struct ieee754_double_struct ieee;
+	double d;
+};
+
+
+struct test_data
+{
+	double arg1;
+	double arg2;
+	char op;
+	double expected;
+};
+
+static struct test_data const double_tests[] = {
+#define OP2(a, op, b) { a, b, #op[0], a op b }
+#define OP1(a, op, opc) { a, 0, #opc[0], op(a) }
+#define TESTOPS(a, b) \
+	OP2(a, +, b), \
+	OP2(a, -, b), \
+	OP2(a, *, b), \
+	OP2(a, /, b), \
+	OP1(a, -, ~)
+#define TEST(a, b) \
+	TESTOPS(a, b), \
+	TESTOPS(b, a), \
+	TESTOPS(-(a), -(b)), \
+	TESTOPS(-(b), -(a))
+	
+	TEST(3.0, 4.0),
+	TEST(3.0, 3.0),
+	TEST(1.123456789, 4.0),
+	TEST(1E38, 4.0),
+	TEST(1E308, 4.0),
+	TEST(1E-37, 4.0),
+	TEST(1E-307, 4.0),
+	TEST(0.0, 0.0),
+};
+
+
+double x, y;
+int a;
+long double lx, ly;
+int b;
+
+int main(void)
+{
+	int i;
+	int errors = 0;
+
+	/* to link in the comparison functions from softfp, not from libgcc */
+	a = x < y;
+	b = lx < ly;
+
+	for (i = 0; i < (int)(sizeof(double_tests) / sizeof(double_tests[0])); i++)
+	{
+		const struct test_data *lt = &double_tests[i];
+		volatile union ieee754_double a, b, z, r1;
+		double r;
+		
+#define COPY(dst, src) dst.d = src
+		
+		COPY(a, lt->arg1);
+		COPY(b, lt->arg2);
+		switch (lt->op)
+		{
+#if 0
+			case '+': r = lt->arg1 + lt->arg2; break;
+			case '-': r = lt->arg1 - lt->arg2; break;
+			case '*': r = lt->arg1 * lt->arg2; break;
+			case '/': r = lt->arg1 / lt->arg2; break;
+			case '~': r = -(lt->arg1); break;
+#else
+			case '+': r = __adddf3(lt->arg1, lt->arg2); break;
+			case '-': r = __subdf3(lt->arg1, lt->arg2); break;
+			case '*': r = __muldf3(lt->arg1, lt->arg2); break;
+			case '/': r = __divdf3(lt->arg1, lt->arg2); break;
+			case '~': r = __negdf2(lt->arg1); break;
+#endif
+			default: abort();
+		}
+		COPY(z, lt->expected);
+		COPY(r1, r);
+		if (r1.ieee.signexp != z.ieee.signexp ||
+			r1.ieee.mantissa0 != z.ieee.mantissa0 ||
+			r1.ieee.mantissa1 != z.ieee.mantissa1)
+		{
+#define is_binop(op) (op) != '~'
+			if (is_binop(lt->op))
+				printf("BAD %e %c %e\n", a.d, lt->op, b.d);
+			else
+				printf("BAD -(%e)\n", a.d);
+			printf("arg1      %.20e 0x%04x, 0x%08x, 0x%08x\n",
+				a.d,
+				a.ieee.signexp,
+				a.ieee.mantissa0,
+				a.ieee.mantissa1);
+			if (is_binop(lt->op))
+			printf("arg2      %.20e 0x%04x, 0x%08x, 0x%08x\n",
+				b.d,
+				b.ieee.signexp,
+				b.ieee.mantissa0,
+				b.ieee.mantissa1);
+			printf("expected  %.20e 0x%04x, 0x%08x, 0x%08x\n",
+				z.d,
+				z.ieee.signexp,
+				z.ieee.mantissa0,
+				z.ieee.mantissa1);
+			printf("got       %.20e 0x%04x, 0x%08x, 0x%08x\n",
+				r1.d,
+				r1.ieee.signexp,
+				r1.ieee.mantissa0,
+				r1.ieee.mantissa1);
+			errors++;
+		} else
+		{
+			if (is_binop(lt->op))
+				printf("OK %e %c %e\n", a.d, lt->op, b.d);
+			else
+				printf("OK -(%e)\n", a.d);
+		}
+	}
+
+	if (errors != 0)
+	{
+		fprintf(stderr, "got %d errors\n", errors);
+		return 1;
+	}
+	printf("no errors\n");
+	return 0;
+}
diff --git a/libgcc/soft-fp/test-float.c b/libgcc/soft-fp/test-float.c
new file mode 100644
index 00000000000..69d8dcd213a
--- /dev/null
+++ b/libgcc/soft-fp/test-float.c
@@ -0,0 +1,158 @@
+#include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
+#include <ctype.h>
+#include <math.h>
+#include <float.h>
+#include <endian.h>
+#include <stdint.h>
+#include <errno.h>
+#include "soft-fp.h"
+#include "softfp-protos.h"
+
+struct ieee754_float_struct
+{
+#if	__BYTE_ORDER__ == __ORDER_BIG_ENDIAN__
+	unsigned int signexp:9;
+	uint32_t     mantissa:23;
+#else
+	uint32_t mantissa:23;
+	unsigned int signexp:9;
+#endif
+};
+
+union ieee754_float
+{
+	struct ieee754_float_struct ieee;
+	float d;
+};
+
+
+struct test_data
+{
+	float arg1;
+	float arg2;
+	char op;
+	float expected;
+};
+
+static struct test_data const double_tests[] = {
+#define OP2(a, op, b) { a, b, #op[0], a op b }
+#define OP1(a, op, opc) { a, 0, #opc[0], op(a) }
+#define TESTOPS(a, b) \
+	OP2(a, +, b), \
+	OP2(a, -, b), \
+	OP2(a, *, b), \
+	OP2(a, /, b), \
+	OP1(a, -, ~)
+#define TEST(a, b) \
+	TESTOPS(a, b), \
+	TESTOPS(b, a), \
+	TESTOPS(-(a), -(b)), \
+	TESTOPS(-(b), -(a))
+	
+	TEST(3.0F, 4.0F),
+	TEST(3.0F, 3.0F),
+	TEST(1.123456789F, 4.0F),
+	TEST(1E38F, 4.0F),
+	TEST(1E-37F, 4.0F),
+	TEST(0.0F, 0.0F),
+};
+
+
+double x, y;
+int a;
+long double lx, ly;
+int b;
+
+int main(void)
+{
+	int i;
+	int errors = 0;
+	int warnings = 0;
+
+	/* to link in the comparison functions from softfp, not from libgcc */
+	a = x < y;
+	b = lx < ly;
+
+	for (i = 0; i < (int)(sizeof(double_tests) / sizeof(double_tests[0])); i++)
+	{
+		const struct test_data *lt = &double_tests[i];
+		volatile union ieee754_float a, b, z, r1;
+		double r;
+		
+#define COPY(dst, src) dst.d = src
+		
+		COPY(a, lt->arg1);
+		COPY(b, lt->arg2);
+		switch (lt->op)
+		{
+#if 0
+			case '+': r = lt->arg1 + lt->arg2; break;
+			case '-': r = lt->arg1 - lt->arg2; break;
+			case '*': r = lt->arg1 * lt->arg2; break;
+			case '/': r = lt->arg1 / lt->arg2; break;
+			case '~': r = -(lt->arg1); break;
+#else
+			case '+': r = __addsf3(lt->arg1, lt->arg2); break;
+			case '-': r = __subsf3(lt->arg1, lt->arg2); break;
+			case '*': r = __mulsf3(lt->arg1, lt->arg2); break;
+			case '/': r = __divsf3(lt->arg1, lt->arg2); break;
+			case '~': r = __negsf2(lt->arg1); break;
+#endif
+			default: abort();
+		}
+		COPY(z, lt->expected);
+		COPY(r1, r);
+		if (r1.ieee.signexp != z.ieee.signexp ||
+			(z.ieee.mantissa != r1.ieee.mantissa))
+		{
+#define is_binop(op) (op) != '~'
+			int warning = r1.ieee.signexp == z.ieee.signexp && (z.ieee.mantissa - r1.ieee.mantissa) <= 1;
+			const char *round = warning ? " (rounding)" : "";
+			if (is_binop(lt->op))
+				printf("BAD %e %c %e%s\n", a.d, lt->op, b.d, round);
+			else
+				printf("BAD -(%e)%s\n", a.d, round);
+			printf("arg1      %.20e 0x%04x, 0x%08x\n",
+				a.d,
+				a.ieee.signexp,
+				a.ieee.mantissa);
+			if (is_binop(lt->op))
+			printf("arg2      %.20e 0x%04x, 0x%08x\n",
+				b.d,
+				b.ieee.signexp,
+				b.ieee.mantissa);
+			printf("expected  %.20e 0x%04x, 0x%08x\n",
+				z.d,
+				z.ieee.signexp,
+				z.ieee.mantissa);
+			printf("got       %.20e 0x%04x, 0x%08x\n",
+				r1.d,
+				r1.ieee.signexp,
+				r1.ieee.mantissa);
+			if (warning)
+				warnings++;
+			else
+				errors++;
+		} else
+		{
+			if (is_binop(lt->op))
+				printf("OK %e %c %e\n", a.d, lt->op, b.d);
+			else
+				printf("OK -(%e)\n", a.d);
+		}
+	}
+
+	if (warnings != 0)
+	{
+		fprintf(stderr, "got %d warnings\n", warnings);
+	}
+	if (errors != 0)
+	{
+		fprintf(stderr, "got %d errors\n", errors);
+		return 1;
+	}
+	printf("no errors\n");
+	return 0;
+}
diff --git a/libgcc/soft-fp/test-ldouble.c b/libgcc/soft-fp/test-ldouble.c
new file mode 100644
index 00000000000..bd145431046
--- /dev/null
+++ b/libgcc/soft-fp/test-ldouble.c
@@ -0,0 +1,160 @@
+#include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
+#include <ctype.h>
+#include <math.h>
+#include <float.h>
+#include <endian.h>
+#include <stdint.h>
+#include <errno.h>
+#include "soft-fp.h"
+#include "softfp-protos.h"
+
+struct ieee854_long_double_struct
+{
+#if	__BYTE_ORDER__ == __ORDER_BIG_ENDIAN__
+	unsigned int signexp:16;
+	unsigned int empty:16;
+	uint32_t     mantissa0:32;
+	uint32_t     mantissa1:32;
+#else
+	uint32_t mantissa1:32;
+	uint32_t mantissa0:32;
+	unsigned int signexp:16;
+	unsigned int empty:16;
+#endif
+};
+
+union ieee854_long_double
+{
+	struct ieee854_long_double_struct ieee;
+	long double d;
+};
+
+struct test_data
+{
+	long double arg1;
+	long double arg2;
+	char op;
+	long double expected;
+};
+
+static struct test_data const double_tests[] = {
+#define OP2(a, op, b) { a, b, #op[0], a op b }
+#define OP1(a, op, opc) { a, 0, #opc[0], op(a) }
+#define TESTOPS(a, b) \
+	OP2(a, +, b), \
+	OP2(a, -, b), \
+	OP2(a, *, b), \
+	OP2(a, /, b), \
+	OP1(a, -, ~)
+#define TEST(a, b) \
+	TESTOPS(a, b), \
+	TESTOPS(b, a), \
+	TESTOPS(-(a), -(b)), \
+	TESTOPS(-(b), -(a))
+	
+	TEST(3.0L, 4.0L),
+	TEST(3.0L, 3.0L),
+	TEST(1.123456789L, 4.0L),
+	TEST(1E38L, 4.0L),
+	TEST(1E308L, 4.0L),
+	TEST(1E4000L, 4.0L),
+	TEST(1E-37L, 4.0L),
+	TEST(1E-307L, 4.0L),
+	TEST(1E-4000L, 4.0L),
+	TEST(0.0, 0.0),
+};
+
+
+double x, y;
+int a;
+long double lx, ly;
+int b;
+
+int main(void)
+{
+	int i;
+	int errors = 0;
+
+	/* to link in the comparison functions from softfp, not from libgcc */
+	a = x < y;
+	b = lx < ly;
+
+	for (i = 0; i < (int)(sizeof(double_tests) / sizeof(double_tests[0])); i++)
+	{
+		const struct test_data *lt = &double_tests[i];
+		volatile union ieee854_long_double a, b, z, r1;
+		long double r;
+		
+#define COPY(dst, src) dst.d = src
+		
+		COPY(a, lt->arg1);
+		COPY(b, lt->arg2);
+		switch (lt->op)
+		{
+#if 0
+			case '+': r = lt->arg1 + lt->arg2; break;
+			case '-': r = lt->arg1 - lt->arg2; break;
+			case '*': r = lt->arg1 * lt->arg2; break;
+			case '/': r = lt->arg1 / lt->arg2; break;
+			case '~': r = -(lt->arg1); break;
+#else
+			case '+': r = __addxf3(lt->arg1, lt->arg2); break;
+			case '-': r = __subxf3(lt->arg1, lt->arg2); break;
+			case '*': r = __mulxf3(lt->arg1, lt->arg2); break;
+			case '/': r = __divxf3(lt->arg1, lt->arg2); break;
+			case '~': r = __negxf2(lt->arg1); break;
+#endif
+			default: abort();
+		}
+		COPY(z, lt->expected);
+		COPY(r1, r);
+		if (r1.ieee.signexp != z.ieee.signexp ||
+			r1.ieee.mantissa0 != z.ieee.mantissa0 ||
+			r1.ieee.mantissa1 != z.ieee.mantissa1)
+		{
+#define is_binop(op) (op) != '~'
+			if (is_binop(lt->op))
+				printf("BAD %Le %c %Le\n", a.d, lt->op, b.d);
+			else
+				printf("BAD -(%Le)\n", a.d);
+			printf("arg1      %.20Le 0x%04x, 0x%08x, 0x%08x\n",
+				a.d,
+				a.ieee.signexp,
+				a.ieee.mantissa0,
+				a.ieee.mantissa1);
+			if (is_binop(lt->op))
+			printf("arg2      %.20Le 0x%04x, 0x%08x, 0x%08x\n",
+				b.d,
+				b.ieee.signexp,
+				b.ieee.mantissa0,
+				b.ieee.mantissa1);
+			printf("expected  %.20Le 0x%04x, 0x%08x, 0x%08x\n",
+				z.d,
+				z.ieee.signexp,
+				z.ieee.mantissa0,
+				z.ieee.mantissa1);
+			printf("got       %.20Le 0x%04x, 0x%08x, 0x%08x\n",
+				r1.d,
+				r1.ieee.signexp,
+				r1.ieee.mantissa0,
+				r1.ieee.mantissa1);
+			errors++;
+		} else
+		{
+			if (is_binop(lt->op))
+				printf("OK %Le %c %Le\n", a.d, lt->op, b.d);
+			else
+				printf("OK -(%Le)\n", a.d);
+		}
+	}
+
+	if (errors != 0)
+	{
+		fprintf(stderr, "got %d errors\n", errors);
+		return 1;
+	}
+	printf("no errors\n");
+	return 0;
+}
diff --git a/libgcc/soft-fp/truncxfdf2.c b/libgcc/soft-fp/truncxfdf2.c
new file mode 100644
index 00000000000..31690ed80bb
--- /dev/null
+++ b/libgcc/soft-fp/truncxfdf2.c
@@ -0,0 +1,52 @@
+/* Software floating-point emulation.
+   Truncate IEEE double into IEEE single
+   Copyright (C) 1997-2022 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   In addition to the permissions in the GNU Lesser General Public
+   License, the Free Software Foundation gives you unlimited
+   permission to link the compiled version of this file into
+   combinations with other programs, and to distribute those
+   combinations without any restriction coming from the use of this
+   file.  (The Lesser General Public License restrictions do apply in
+   other respects; for example, they cover modification of the file,
+   and distribution when not linked into a combine executable.)
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#include "soft-fp.h"
+#include "double.h"
+#include "extended.h"
+
+DFtype
+__truncxfdf2 (XFtype a)
+{
+  FP_DECL_EX;
+  FP_DECL_E (A);
+  FP_DECL_D (R);
+  DFtype r;
+
+  FP_INIT_ROUNDMODE;
+  FP_UNPACK_SEMIRAW_E (A, a);
+#if _FP_W_TYPE_SIZE < 64
+  FP_TRUNC (D, E, 2, 4, R, A);
+#else
+  FP_TRUNC (D, E, 1, 2, R, A);
+#endif
+  FP_PACK_SEMIRAW_D (r, R);
+  FP_HANDLE_EXCEPTIONS;
+
+  return r;
+}
diff --git a/libgcc/soft-fp/truncxfsf2.c b/libgcc/soft-fp/truncxfsf2.c
new file mode 100644
index 00000000000..041783904f5
--- /dev/null
+++ b/libgcc/soft-fp/truncxfsf2.c
@@ -0,0 +1,52 @@
+/* Software floating-point emulation.
+   Truncate IEEE double into IEEE single
+   Copyright (C) 1997-2022 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   In addition to the permissions in the GNU Lesser General Public
+   License, the Free Software Foundation gives you unlimited
+   permission to link the compiled version of this file into
+   combinations with other programs, and to distribute those
+   combinations without any restriction coming from the use of this
+   file.  (The Lesser General Public License restrictions do apply in
+   other respects; for example, they cover modification of the file,
+   and distribution when not linked into a combine executable.)
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#include "soft-fp.h"
+#include "single.h"
+#include "extended.h"
+
+SFtype
+__truncxfsf2 (XFtype a)
+{
+  FP_DECL_EX;
+  FP_DECL_E (A);
+  FP_DECL_S (R);
+  SFtype r;
+
+  FP_INIT_ROUNDMODE;
+  FP_UNPACK_SEMIRAW_E (A, a);
+#if _FP_W_TYPE_SIZE < 64
+  FP_TRUNC (S, E, 1, 4, R, A);
+#else
+  FP_TRUNC (S, E, 1, 2, R, A);
+#endif
+  FP_PACK_SEMIRAW_S (r, R);
+  FP_HANDLE_EXCEPTIONS;
+
+  return r;
+}
diff --git a/libgcc/soft-fp/unordxf2.c b/libgcc/soft-fp/unordxf2.c
new file mode 100644
index 00000000000..b2cf0511f68
--- /dev/null
+++ b/libgcc/soft-fp/unordxf2.c
@@ -0,0 +1,47 @@
+/* Software floating-point emulation.
+   Return 1 iff a or b is a NaN, 0 otherwise.
+   Copyright (C) 2006-2022 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   In addition to the permissions in the GNU Lesser General Public
+   License, the Free Software Foundation gives you unlimited
+   permission to link the compiled version of this file into
+   combinations with other programs, and to distribute those
+   combinations without any restriction coming from the use of this
+   file.  (The Lesser General Public License restrictions do apply in
+   other respects; for example, they cover modification of the file,
+   and distribution when not linked into a combine executable.)
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <https://www.gnu.org/licenses/>.  */
+
+#include "soft-fp.h"
+#include "extended.h"
+
+CMPtype
+__unordxf2 (XFtype a, XFtype b)
+{
+  FP_DECL_EX;
+  FP_DECL_E (A);
+  FP_DECL_E (B);
+  CMPtype r;
+
+  FP_INIT_EXCEPTIONS;
+  FP_UNPACK_RAW_E (A, a);
+  FP_UNPACK_RAW_E (B, b);
+  FP_CMP_UNORD_E (r, A, B, 1);
+  FP_HANDLE_EXCEPTIONS;
+
+  return r;
+}
diff --git a/libgcc/unwind-c.c b/libgcc/unwind-c.c
index 966ac6d8d60..47a7bca6c2d 100644
--- a/libgcc/unwind-c.c
+++ b/libgcc/unwind-c.c
@@ -244,3 +244,11 @@ __gcc_personality_seh0 (PEXCEPTION_RECORD ms_exc, void *this_frame,
 				ms_disp, __gcc_personality_imp);
 }
 #endif /* SEH */
+
+#if defined(__MINT__)
+void *__DW_EH_PE_aligned_var
+#ifdef __ELF__
+	__attribute__((__aligned__(sizeof(void *))))
+#endif
+;
+#endif
diff --git a/libgcc/unwind-pe.h b/libgcc/unwind-pe.h
index 79902c35e19..e891c8fcf26 100644
--- a/libgcc/unwind-pe.h
+++ b/libgcc/unwind-pe.h
@@ -201,7 +201,18 @@ read_encoded_value_with_base (unsigned char encoding, _Unwind_Ptr base,
   if (encoding == DW_EH_PE_aligned)
     {
       _Unwind_Internal_Ptr a = (_Unwind_Internal_Ptr) p;
+#ifdef __MINT__
+      /*
+       * alignment to pointer size cannot be guaranteed by TOS at runtime
+       */
+      extern void *__DW_EH_PE_aligned_var;
+      _Unwind_Internal_Ptr base_offset = ((_Unwind_Internal_Ptr)&__DW_EH_PE_aligned_var) & 3;
+      a += base_offset; /* Where it should have been located */
+#endif
       a = (a + sizeof (void *) - 1) & - sizeof(void *);
+#ifdef __MINT__
+      a -= base_offset; /* Where it is actually aligned */
+#endif
       result = *(_Unwind_Internal_Ptr *) a;
       p = (const unsigned char *) (_Unwind_Internal_Ptr) (a + sizeof (void *));
     }
diff --git a/libgfortran/Makefile.am b/libgfortran/Makefile.am
index 61bf05dd40d..c1bc0abd029 100644
--- a/libgfortran/Makefile.am
+++ b/libgfortran/Makefile.am
@@ -49,7 +49,7 @@ libgfortran_la_DEPENDENCIES = $(version_dep) libgfortran.spec $(LIBQUADLIB_DEP)
 cafexeclib_LTLIBRARIES = libcaf_single.la
 cafexeclibdir = $(libdir)/gcc/$(target_alias)/$(gcc_version)$(MULTISUBDIR)
 libcaf_single_la_SOURCES = caf/single.c
-libcaf_single_la_LDFLAGS = -static
+libcaf_single_la_LDFLAGS = -static -no-undefined
 libcaf_single_la_DEPENDENCIES = caf/libcaf.h
 libcaf_single_la_LINK = $(LINK) $(libcaf_single_la_LDFLAGS)
 
diff --git a/libgfortran/Makefile.in b/libgfortran/Makefile.in
index 3d043aaa924..73be4c84ef4 100644
--- a/libgfortran/Makefile.in
+++ b/libgfortran/Makefile.in
@@ -741,7 +741,7 @@ libgfortran_la_DEPENDENCIES = $(version_dep) libgfortran.spec $(LIBQUADLIB_DEP)
 cafexeclib_LTLIBRARIES = libcaf_single.la
 cafexeclibdir = $(libdir)/gcc/$(target_alias)/$(gcc_version)$(MULTISUBDIR)
 libcaf_single_la_SOURCES = caf/single.c
-libcaf_single_la_LDFLAGS = -static
+libcaf_single_la_LDFLAGS = -static -no-undefined
 libcaf_single_la_DEPENDENCIES = caf/libcaf.h
 libcaf_single_la_LINK = $(LINK) $(libcaf_single_la_LDFLAGS)
 @IEEE_SUPPORT_TRUE@fincludedir = $(libdir)/gcc/$(target_alias)/$(gcc_version)$(MULTISUBDIR)/finclude
diff --git a/libgfortran/configure b/libgfortran/configure
index f3634389cf8..8e354635ca3 100755
--- a/libgfortran/configure
+++ b/libgfortran/configure
@@ -6497,7 +6497,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -7257,6 +7257,12 @@ else
     lt_cv_sys_max_cmd_len=8192;
     ;;
 
+  mint*)
+    # On MiNT this test can take minutes to run, and I'm not sure it's
+    # healthy for this platform. Let's restrict it to 8192.
+    lt_cv_sys_max_cmd_len=8192;
+    ;;
+
   amigaos*)
     # On AmigaOS with pdksh, this test takes hours, literally.
     # So we just punt and use a minimum line length of 8192.
@@ -10443,7 +10449,7 @@ _LT_EOF
       fi
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # _LT_TAGVAR(hardcode_libdir_flag_spec, ) is actually meaningless,
       # as there is no search path for DLLs.
       hardcode_libdir_flag_spec='-L$libdir'
@@ -10880,7 +10886,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
       export_dynamic_flag_spec=-rdynamic
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # When not using gcc, we currently assume that we are using
       # Microsoft Visual C++.
       # hardcode_libdir_flag_spec is actually meaningless, as there is
@@ -11784,14 +11790,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -11815,7 +11821,7 @@ cygwin* | mingw* | pw32* | cegcc*)
 
       sys_lib_search_path_spec="$sys_lib_search_path_spec /usr/lib/w32api"
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -12444,7 +12450,7 @@ else
     lt_cv_dlopen_self=yes
     ;;
 
-  mingw* | pw32* | cegcc*)
+  mingw* | msys* | pw32* | cegcc*)
     lt_cv_dlopen="LoadLibrary"
     lt_cv_dlopen_libs=
     ;;
@@ -13078,7 +13084,7 @@ CC="$lt_save_CC"
 
 
 case $host in
-  *-cygwin* | *-mingw*)
+  *-cygwin* | *-mingw* | *-msys*)
     # 'host' will be top-level target in the case of a target lib,
     # we must compare to with_cross_host to decide if this is a native
     # or cross-compiler and select where to install dlls appropriately.
@@ -14292,7 +14298,7 @@ _LT_EOF
       fi
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # _LT_TAGVAR(hardcode_libdir_flag_spec, FC) is actually meaningless,
       # as there is no search path for DLLs.
       hardcode_libdir_flag_spec_FC='-L$libdir'
@@ -14717,7 +14723,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
       export_dynamic_flag_spec_FC=-rdynamic
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # When not using gcc, we currently assume that we are using
       # Microsoft Visual C++.
       # hardcode_libdir_flag_spec is actually meaningless, as there is
@@ -15415,14 +15421,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -15445,7 +15451,7 @@ cygwin* | mingw* | pw32* | cegcc*)
       soname_spec='`echo ${libname} | sed -e 's/^lib/cyg/'``echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
 
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
diff --git a/libgfortran/generated/matmul_c10.c b/libgfortran/generated/matmul_c10.c
index b8172e8845d..515b98d108c 100644
--- a/libgfortran/generated/matmul_c10.c
+++ b/libgfortran/generated/matmul_c10.c
@@ -242,6 +242,8 @@ matmul_c10_avx (gfc_array_c10 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -811,6 +813,8 @@ matmul_c10_avx2 (gfc_array_c10 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -1380,6 +1384,8 @@ matmul_c10_avx512f (gfc_array_c10 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -1963,6 +1969,8 @@ matmul_c10_vanilla (gfc_array_c10 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -2605,6 +2613,8 @@ matmul_c10 (gfc_array_c10 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
diff --git a/libgfortran/generated/matmul_c16.c b/libgfortran/generated/matmul_c16.c
index a97e06f0155..f13bf4da39e 100644
--- a/libgfortran/generated/matmul_c16.c
+++ b/libgfortran/generated/matmul_c16.c
@@ -242,6 +242,8 @@ matmul_c16_avx (gfc_array_c16 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -811,6 +813,8 @@ matmul_c16_avx2 (gfc_array_c16 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -1380,6 +1384,8 @@ matmul_c16_avx512f (gfc_array_c16 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -1963,6 +1969,8 @@ matmul_c16_vanilla (gfc_array_c16 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -2605,6 +2613,8 @@ matmul_c16 (gfc_array_c16 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
diff --git a/libgfortran/generated/matmul_c4.c b/libgfortran/generated/matmul_c4.c
index f884a4ba8f1..c25b815ef5a 100644
--- a/libgfortran/generated/matmul_c4.c
+++ b/libgfortran/generated/matmul_c4.c
@@ -242,6 +242,8 @@ matmul_c4_avx (gfc_array_c4 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -811,6 +813,8 @@ matmul_c4_avx2 (gfc_array_c4 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -1380,6 +1384,8 @@ matmul_c4_avx512f (gfc_array_c4 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -1963,6 +1969,8 @@ matmul_c4_vanilla (gfc_array_c4 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -2605,6 +2613,8 @@ matmul_c4 (gfc_array_c4 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
diff --git a/libgfortran/generated/matmul_c8.c b/libgfortran/generated/matmul_c8.c
index 29fbaa2f8b5..774432d0349 100644
--- a/libgfortran/generated/matmul_c8.c
+++ b/libgfortran/generated/matmul_c8.c
@@ -242,6 +242,8 @@ matmul_c8_avx (gfc_array_c8 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -811,6 +813,8 @@ matmul_c8_avx2 (gfc_array_c8 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -1380,6 +1384,8 @@ matmul_c8_avx512f (gfc_array_c8 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -1963,6 +1969,8 @@ matmul_c8_vanilla (gfc_array_c8 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -2605,6 +2613,8 @@ matmul_c8 (gfc_array_c8 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
diff --git a/libgfortran/generated/matmul_i1.c b/libgfortran/generated/matmul_i1.c
index 285d37cda71..0bd8bc986c7 100644
--- a/libgfortran/generated/matmul_i1.c
+++ b/libgfortran/generated/matmul_i1.c
@@ -242,6 +242,8 @@ matmul_i1_avx (gfc_array_i1 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -811,6 +813,8 @@ matmul_i1_avx2 (gfc_array_i1 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -1380,6 +1384,8 @@ matmul_i1_avx512f (gfc_array_i1 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -1963,6 +1969,8 @@ matmul_i1_vanilla (gfc_array_i1 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -2605,6 +2613,8 @@ matmul_i1 (gfc_array_i1 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
diff --git a/libgfortran/generated/matmul_i16.c b/libgfortran/generated/matmul_i16.c
index d54a7d966d5..1b0d31a2a49 100644
--- a/libgfortran/generated/matmul_i16.c
+++ b/libgfortran/generated/matmul_i16.c
@@ -242,6 +242,8 @@ matmul_i16_avx (gfc_array_i16 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -811,6 +813,8 @@ matmul_i16_avx2 (gfc_array_i16 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -1380,6 +1384,8 @@ matmul_i16_avx512f (gfc_array_i16 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
diff --git a/libgfortran/generated/matmul_i2.c b/libgfortran/generated/matmul_i2.c
index eca6daad2d8..737d1f2fbb0 100644
--- a/libgfortran/generated/matmul_i2.c
+++ b/libgfortran/generated/matmul_i2.c
@@ -242,6 +242,8 @@ matmul_i2_avx (gfc_array_i2 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -811,6 +813,8 @@ matmul_i2_avx2 (gfc_array_i2 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -1380,6 +1384,8 @@ matmul_i2_avx512f (gfc_array_i2 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -1963,6 +1969,8 @@ matmul_i2_vanilla (gfc_array_i2 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -2605,6 +2613,8 @@ matmul_i2 (gfc_array_i2 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
diff --git a/libgfortran/generated/matmul_i4.c b/libgfortran/generated/matmul_i4.c
index a33bb6afaa6..ae2b5145659 100644
--- a/libgfortran/generated/matmul_i4.c
+++ b/libgfortran/generated/matmul_i4.c
@@ -242,6 +242,8 @@ matmul_i4_avx (gfc_array_i4 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -811,6 +813,8 @@ matmul_i4_avx2 (gfc_array_i4 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -1380,6 +1384,8 @@ matmul_i4_avx512f (gfc_array_i4 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -1963,6 +1969,8 @@ matmul_i4_vanilla (gfc_array_i4 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -2605,6 +2613,8 @@ matmul_i4 (gfc_array_i4 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
diff --git a/libgfortran/generated/matmul_i8.c b/libgfortran/generated/matmul_i8.c
index f49b8c0a185..a048e2adeab 100644
--- a/libgfortran/generated/matmul_i8.c
+++ b/libgfortran/generated/matmul_i8.c
@@ -242,6 +242,8 @@ matmul_i8_avx (gfc_array_i8 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -811,6 +813,8 @@ matmul_i8_avx2 (gfc_array_i8 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -1380,6 +1384,8 @@ matmul_i8_avx512f (gfc_array_i8 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -1963,6 +1969,8 @@ matmul_i8_vanilla (gfc_array_i8 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -2605,6 +2613,8 @@ matmul_i8 (gfc_array_i8 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
diff --git a/libgfortran/generated/matmul_r10.c b/libgfortran/generated/matmul_r10.c
index 6cb59bda7ca..41dd66e304c 100644
--- a/libgfortran/generated/matmul_r10.c
+++ b/libgfortran/generated/matmul_r10.c
@@ -242,6 +242,8 @@ matmul_r10_avx (gfc_array_r10 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -811,6 +813,8 @@ matmul_r10_avx2 (gfc_array_r10 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -1380,6 +1384,8 @@ matmul_r10_avx512f (gfc_array_r10 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -1963,6 +1969,8 @@ matmul_r10_vanilla (gfc_array_r10 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -2605,6 +2613,8 @@ matmul_r10 (gfc_array_r10 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
diff --git a/libgfortran/generated/matmul_r16.c b/libgfortran/generated/matmul_r16.c
index aca9bd2a140..c3dfc813898 100644
--- a/libgfortran/generated/matmul_r16.c
+++ b/libgfortran/generated/matmul_r16.c
@@ -242,6 +242,8 @@ matmul_r16_avx (gfc_array_r16 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -811,6 +813,8 @@ matmul_r16_avx2 (gfc_array_r16 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -1380,6 +1384,8 @@ matmul_r16_avx512f (gfc_array_r16 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -1963,6 +1969,8 @@ matmul_r16_vanilla (gfc_array_r16 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -2605,6 +2613,8 @@ matmul_r16 (gfc_array_r16 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
diff --git a/libgfortran/generated/matmul_r4.c b/libgfortran/generated/matmul_r4.c
index 4e0caa6cfe6..5a61f76b43b 100644
--- a/libgfortran/generated/matmul_r4.c
+++ b/libgfortran/generated/matmul_r4.c
@@ -242,6 +242,8 @@ matmul_r4_avx (gfc_array_r4 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -811,6 +813,8 @@ matmul_r4_avx2 (gfc_array_r4 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -1380,6 +1384,8 @@ matmul_r4_avx512f (gfc_array_r4 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -1963,6 +1969,8 @@ matmul_r4_vanilla (gfc_array_r4 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -2605,6 +2613,8 @@ matmul_r4 (gfc_array_r4 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
diff --git a/libgfortran/generated/matmul_r8.c b/libgfortran/generated/matmul_r8.c
index d4e825c8155..8c8a36bbeb9 100644
--- a/libgfortran/generated/matmul_r8.c
+++ b/libgfortran/generated/matmul_r8.c
@@ -242,6 +242,8 @@ matmul_r8_avx (gfc_array_r8 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -811,6 +813,8 @@ matmul_r8_avx2 (gfc_array_r8 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -1380,6 +1384,8 @@ matmul_r8_avx512f (gfc_array_r8 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -1963,6 +1969,8 @@ matmul_r8_vanilla (gfc_array_r8 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -2605,6 +2613,8 @@ matmul_r8 (gfc_array_r8 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
diff --git a/libgfortran/generated/matmulavx128_c10.c b/libgfortran/generated/matmulavx128_c10.c
index e21e6cbe253..b23f4c27516 100644
--- a/libgfortran/generated/matmulavx128_c10.c
+++ b/libgfortran/generated/matmulavx128_c10.c
@@ -207,6 +207,8 @@ matmul_c10_avx128_fma3 (gfc_array_c10 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -777,6 +779,8 @@ matmul_c10_avx128_fma4 (gfc_array_c10 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
diff --git a/libgfortran/generated/matmulavx128_c16.c b/libgfortran/generated/matmulavx128_c16.c
index 1cf686a7e4b..c73a93238f4 100644
--- a/libgfortran/generated/matmulavx128_c16.c
+++ b/libgfortran/generated/matmulavx128_c16.c
@@ -207,6 +207,8 @@ matmul_c16_avx128_fma3 (gfc_array_c16 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -777,6 +779,8 @@ matmul_c16_avx128_fma4 (gfc_array_c16 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
diff --git a/libgfortran/generated/matmulavx128_c4.c b/libgfortran/generated/matmulavx128_c4.c
index 64f4886399b..5c11ff4556e 100644
--- a/libgfortran/generated/matmulavx128_c4.c
+++ b/libgfortran/generated/matmulavx128_c4.c
@@ -207,6 +207,8 @@ matmul_c4_avx128_fma3 (gfc_array_c4 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -777,6 +779,8 @@ matmul_c4_avx128_fma4 (gfc_array_c4 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
diff --git a/libgfortran/generated/matmulavx128_c8.c b/libgfortran/generated/matmulavx128_c8.c
index d0846d7be8a..f0ab39f6fd0 100644
--- a/libgfortran/generated/matmulavx128_c8.c
+++ b/libgfortran/generated/matmulavx128_c8.c
@@ -207,6 +207,8 @@ matmul_c8_avx128_fma3 (gfc_array_c8 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -777,6 +779,8 @@ matmul_c8_avx128_fma4 (gfc_array_c8 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
diff --git a/libgfortran/generated/matmulavx128_i1.c b/libgfortran/generated/matmulavx128_i1.c
index aa161ba0056..97c444678e3 100644
--- a/libgfortran/generated/matmulavx128_i1.c
+++ b/libgfortran/generated/matmulavx128_i1.c
@@ -207,6 +207,8 @@ matmul_i1_avx128_fma3 (gfc_array_i1 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -777,6 +779,8 @@ matmul_i1_avx128_fma4 (gfc_array_i1 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
diff --git a/libgfortran/generated/matmulavx128_i16.c b/libgfortran/generated/matmulavx128_i16.c
index a28b226a080..10251b57fa8 100644
--- a/libgfortran/generated/matmulavx128_i16.c
+++ b/libgfortran/generated/matmulavx128_i16.c
@@ -207,6 +207,8 @@ matmul_i16_avx128_fma3 (gfc_array_i16 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -777,6 +779,8 @@ matmul_i16_avx128_fma4 (gfc_array_i16 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
diff --git a/libgfortran/generated/matmulavx128_i2.c b/libgfortran/generated/matmulavx128_i2.c
index cd54a519417..2d7e0f32d94 100644
--- a/libgfortran/generated/matmulavx128_i2.c
+++ b/libgfortran/generated/matmulavx128_i2.c
@@ -207,6 +207,8 @@ matmul_i2_avx128_fma3 (gfc_array_i2 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -777,6 +779,8 @@ matmul_i2_avx128_fma4 (gfc_array_i2 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
diff --git a/libgfortran/generated/matmulavx128_i4.c b/libgfortran/generated/matmulavx128_i4.c
index ece1ddd668e..76530618538 100644
--- a/libgfortran/generated/matmulavx128_i4.c
+++ b/libgfortran/generated/matmulavx128_i4.c
@@ -207,6 +207,8 @@ matmul_i4_avx128_fma3 (gfc_array_i4 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -777,6 +779,8 @@ matmul_i4_avx128_fma4 (gfc_array_i4 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
diff --git a/libgfortran/generated/matmulavx128_i8.c b/libgfortran/generated/matmulavx128_i8.c
index b63a7feba50..e289122cdcd 100644
--- a/libgfortran/generated/matmulavx128_i8.c
+++ b/libgfortran/generated/matmulavx128_i8.c
@@ -207,6 +207,8 @@ matmul_i8_avx128_fma3 (gfc_array_i8 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -777,6 +779,8 @@ matmul_i8_avx128_fma4 (gfc_array_i8 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
diff --git a/libgfortran/generated/matmulavx128_r10.c b/libgfortran/generated/matmulavx128_r10.c
index bc2ea08a1b8..920edd1ce71 100644
--- a/libgfortran/generated/matmulavx128_r10.c
+++ b/libgfortran/generated/matmulavx128_r10.c
@@ -207,6 +207,8 @@ matmul_r10_avx128_fma3 (gfc_array_r10 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -777,6 +779,8 @@ matmul_r10_avx128_fma4 (gfc_array_r10 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
diff --git a/libgfortran/generated/matmulavx128_r16.c b/libgfortran/generated/matmulavx128_r16.c
index 228dde8f537..94bbdd5c042 100644
--- a/libgfortran/generated/matmulavx128_r16.c
+++ b/libgfortran/generated/matmulavx128_r16.c
@@ -207,6 +207,8 @@ matmul_r16_avx128_fma3 (gfc_array_r16 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -777,6 +779,8 @@ matmul_r16_avx128_fma4 (gfc_array_r16 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
diff --git a/libgfortran/generated/matmulavx128_r4.c b/libgfortran/generated/matmulavx128_r4.c
index 32f634b07c9..3dc4a2341bb 100644
--- a/libgfortran/generated/matmulavx128_r4.c
+++ b/libgfortran/generated/matmulavx128_r4.c
@@ -207,6 +207,8 @@ matmul_r4_avx128_fma3 (gfc_array_r4 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -777,6 +779,8 @@ matmul_r4_avx128_fma4 (gfc_array_r4 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
diff --git a/libgfortran/generated/matmulavx128_r8.c b/libgfortran/generated/matmulavx128_r8.c
index 01bea4f0949..eaae2705b1b 100644
--- a/libgfortran/generated/matmulavx128_r8.c
+++ b/libgfortran/generated/matmulavx128_r8.c
@@ -207,6 +207,8 @@ matmul_r8_avx128_fma3 (gfc_array_r8 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
@@ -777,6 +779,8 @@ matmul_r8_avx128_fma4 (gfc_array_r8 * const restrict retarray,
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
diff --git a/libgfortran/intrinsics/date_and_time.c b/libgfortran/intrinsics/date_and_time.c
index 8213127ec95..c2d7257efbc 100644
--- a/libgfortran/intrinsics/date_and_time.c
+++ b/libgfortran/intrinsics/date_and_time.c
@@ -126,6 +126,9 @@ extern void date_and_time (char *, char *, char *, gfc_array_i4 *,
 			   GFC_INTEGER_4, GFC_INTEGER_4, GFC_INTEGER_4);
 export_proto(date_and_time);
 
+#pragma GCC diagnostic ignored "-Wformat-truncation"
+
+
 void
 date_and_time (char *__date, char *__time, char *__zone,
 	       gfc_array_i4 *__values, GFC_INTEGER_4 __date_len,
diff --git a/libgfortran/intrinsics/execute_command_line.c b/libgfortran/intrinsics/execute_command_line.c
index 5d41667df9e..809de33a060 100644
--- a/libgfortran/intrinsics/execute_command_line.c
+++ b/libgfortran/intrinsics/execute_command_line.c
@@ -99,6 +99,9 @@ execute_command_line (const char *command, bool wait, int *exitstat,
       set_cmdstat (cmdstat, EXEC_NOERROR);
 
 #if defined(HAVE_SIGACTION) && defined(HAVE_WAITPID)
+#ifndef SA_RESTART
+#  define SA_RESTART 0
+#endif
       static bool sig_init_saved;
       bool sig_init = __atomic_load_n (&sig_init_saved, __ATOMIC_RELAXED);
       if (!sig_init)
diff --git a/libgfortran/io/async.c b/libgfortran/io/async.c
index 247008ca801..e93b06657af 100644
--- a/libgfortran/io/async.c
+++ b/libgfortran/io/async.c
@@ -501,6 +501,9 @@ init_async_unit (gfc_unit *u)
 void
 enqueue_transfer (async_unit *au, transfer_args *arg, enum aio_do type)
 {
+  (void)au;
+  (void)arg;
+  (void)type;
   return;
 }
 
@@ -509,6 +512,8 @@ enqueue_transfer (async_unit *au, transfer_args *arg, enum aio_do type)
 int
 enqueue_done_id (async_unit *au, enum aio_do type)
 {
+  (void)au;
+  (void)type;
   return 0;
 }
 
@@ -517,6 +522,8 @@ enqueue_done_id (async_unit *au, enum aio_do type)
 void
 enqueue_done (async_unit *au, enum aio_do type)
 {
+  (void)au;
+  (void)type;
   return;
 }
 
@@ -525,6 +532,7 @@ enqueue_done (async_unit *au, enum aio_do type)
 void
 enqueue_close (async_unit *au)
 {
+  (void)au;
   return;
 }
 
@@ -533,6 +541,9 @@ enqueue_close (async_unit *au)
 void
 enqueue_data_transfer_init (async_unit *au, st_parameter_dt *dt, int read_flag)
 {
+  (void)au;
+  (void)dt;
+  (void)read_flag;
   return;
 }
 
@@ -541,6 +552,8 @@ enqueue_data_transfer_init (async_unit *au, st_parameter_dt *dt, int read_flag)
 bool
 collect_async_errors (st_parameter_common *cmp, async_unit *au)
 {
+  (void)cmp;
+  (void)au;
   return false;
 }
 
@@ -549,6 +562,9 @@ collect_async_errors (st_parameter_common *cmp, async_unit *au)
 bool
 async_wait_id (st_parameter_common *cmp, async_unit *au, int i)
 {
+  (void)cmp;
+  (void)au;
+  (void)i;
   return false;
 }
 
@@ -557,6 +573,8 @@ async_wait_id (st_parameter_common *cmp, async_unit *au, int i)
 bool
 async_wait (st_parameter_common *cmp, async_unit *au)
 {
+  (void)cmp;
+  (void)au;
   return false;
 }
 
@@ -565,6 +583,7 @@ async_wait (st_parameter_common *cmp, async_unit *au)
 void
 async_close (async_unit *au)
 {
+  (void)au;
   return;
 }
 
diff --git a/libgfortran/io/list_read.c b/libgfortran/io/list_read.c
index 8cc7ddbe8e2..15d3c40f767 100644
--- a/libgfortran/io/list_read.c
+++ b/libgfortran/io/list_read.c
@@ -2222,7 +2222,7 @@ list_formatted_read_scalar (st_parameter_dt *dtp, bt type, void *p,
 
 	  /* Call the user defined formatted READ procedure.  */
 	  dtp->u.p.current_unit->child_dtio++;
-	  dtp->u.p.fdtio_ptr (p, &unit, iotype, &vlist,
+	  dtp->u.p.fdtio_ptr (p, &unit, iotype, (gfc_array_i4 *)&vlist,
 			      child_iostat, child_iomsg,
 			      iotype_len, child_iomsg_len);
 	  dtp->u.p.child_saved_iostat = *child_iostat;
@@ -3024,7 +3024,7 @@ nml_read_obj (st_parameter_dt *dtp, namelist_info *nl, index_type offset,
 
 		/* Call the user defined formatted READ procedure.  */
 		dtp->u.p.current_unit->child_dtio++;
-		dtio_ptr ((void *)&list_obj, &unit, iotype, &vlist,
+		dtio_ptr ((void *)&list_obj, &unit, iotype, (gfc_array_i4 *)&vlist,
 			  child_iostat, child_iomsg,
 			  iotype_len, child_iomsg_len);
 		dtp->u.p.child_saved_iostat = *child_iostat;
diff --git a/libgfortran/io/transfer.c b/libgfortran/io/transfer.c
index 36e35b48cd3..49fe3357740 100644
--- a/libgfortran/io/transfer.c
+++ b/libgfortran/io/transfer.c
@@ -2674,7 +2674,7 @@ us_read (st_parameter_dt *dtp, int continued)
   else
     n = compile_options.record_marker;
 
-  nr = sread (dtp->u.p.current_unit->s, &i, n);
+  nr = sread (dtp->u.p.current_unit->s, &i8, n);
   if (unlikely (nr < 0))
     {
       generate_error (&dtp->common, LIBERROR_BAD_US, NULL);
@@ -2697,12 +2697,11 @@ us_read (st_parameter_dt *dtp, int continued)
       switch (nr)
 	{
 	case sizeof(GFC_INTEGER_4):
-	  memcpy (&i4, &i, sizeof (i4));
+	  memcpy (&i4, &i8, sizeof (i4));
 	  i = i4;
 	  break;
 
 	case sizeof(GFC_INTEGER_8):
-	  memcpy (&i8, &i, sizeof (i8));
 	  i = i8;
 	  break;
 
@@ -2718,14 +2717,14 @@ us_read (st_parameter_dt *dtp, int continued)
       switch (nr)
 	{
 	case sizeof(GFC_INTEGER_4):
-	  memcpy (&u32, &i, sizeof (u32));
+	  memcpy (&u32, &i8, sizeof (u32));
 	  u32 = __builtin_bswap32 (u32);
 	  memcpy (&i4, &u32, sizeof (i4));
 	  i = i4;
 	  break;
 
 	case sizeof(GFC_INTEGER_8):
-	  memcpy (&u64, &i, sizeof (u64));
+	  memcpy (&u64, &i8, sizeof (u64));
 	  u64 = __builtin_bswap64 (u64);
 	  memcpy (&i8, &u64, sizeof (i8));
 	  i = i8;
@@ -2760,7 +2759,7 @@ static void
 us_write (st_parameter_dt *dtp, int continued)
 {
   ssize_t nbytes;
-  gfc_offset dummy;
+  uint64_t dummy;
 
   dummy = 0;
 
diff --git a/libgfortran/io/unit.c b/libgfortran/io/unit.c
index b0cc6ab2301..0d529b7dffa 100644
--- a/libgfortran/io/unit.c
+++ b/libgfortran/io/unit.c
@@ -599,7 +599,7 @@ init_units (void)
 
   if (sizeof (max_offset) == 8)
     {
-      max_offset = GFC_INTEGER_8_HUGE;
+      max_offset = (gfc_offset) GFC_INTEGER_8_HUGE;
       /* Why this weird value? Because if the recl specifier in the
 	 inquire statement is a 4 byte value, u->recl is truncated,
 	 and this trick ensures it becomes HUGE(0) rather than -1.
diff --git a/libgfortran/io/write.c b/libgfortran/io/write.c
index 278cd47cabb..a52a04e324f 100644
--- a/libgfortran/io/write.c
+++ b/libgfortran/io/write.c
@@ -1939,7 +1939,7 @@ list_formatted_write_scalar (st_parameter_dt *dtp, bt type, void *p, int kind,
 
 	  /* Call the user defined formatted WRITE procedure.  */
 	  dtp->u.p.current_unit->child_dtio++;
-	  dtp->u.p.fdtio_ptr (p, &unit, iotype, &vlist,
+	  dtp->u.p.fdtio_ptr (p, &unit, iotype, (gfc_full_array_i4 *)&vlist,
 			      child_iostat, child_iomsg,
 			      iotype_len, child_iomsg_len);
 	  dtp->u.p.current_unit->child_dtio--;
@@ -2271,13 +2271,13 @@ nml_write_obj (st_parameter_dt *dtp, namelist_info *obj, index_type offset,
 		      list_obj.data = p;
 		      list_obj.vptr = obj->vtable;
 		      list_obj.len = 0;
-		      dtio_ptr ((void *)&list_obj, &unit, iotype, &vlist,
+		      dtio_ptr ((void *)&list_obj, &unit, iotype, (gfc_full_array_i4 *)&vlist,
 				child_iostat, child_iomsg,
 				iotype_len, child_iomsg_len);
 		    }
 		  else
 		    {
-		      dtio_ptr (p, &unit, iotype, &vlist,
+		      dtio_ptr (p, &unit, iotype, (gfc_full_array_i4 *)&vlist,
 				child_iostat, child_iomsg,
 				iotype_len, child_iomsg_len);
 		    }
diff --git a/libgfortran/m4/matmul_internal.m4 b/libgfortran/m4/matmul_internal.m4
index 0e96207a0fc..9b677adffd0 100644
--- a/libgfortran/m4/matmul_internal.m4
+++ b/libgfortran/m4/matmul_internal.m4
@@ -158,6 +158,8 @@ sinclude(`matmul_asm_'rtype_code`.m4')dnl
      itself.  */
 
 #define POW3(x) (((float) (x)) * ((float) (x)) * ((float) (x)))
+#undef min
+#undef max
 #define min(a,b) ((a) <= (b) ? (a) : (b))
 #define max(a,b) ((a) >= (b) ? (a) : (b))
 
diff --git a/libgfortran/runtime/error.c b/libgfortran/runtime/error.c
index b9c75742690..997cc4c1e66 100644
--- a/libgfortran/runtime/error.c
+++ b/libgfortran/runtime/error.c
@@ -24,8 +24,8 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
 
 
 #include "libgfortran.h"
-#include "io.h"
-#include "async.h"
+#include "io/io.h"
+#include "io/async.h"
 
 #include <assert.h>
 #include <string.h>
diff --git a/libgo/config/libtool.m4 b/libgo/config/libtool.m4
index 4ca90ee71bc..98c2c5d39d9 100644
--- a/libgo/config/libtool.m4
+++ b/libgo/config/libtool.m4
@@ -1733,7 +1733,7 @@ else
     lt_cv_dlopen_self=yes
     ;;
 
-  mingw* | pw32* | cegcc*)
+  mingw* | msys* | pw32* | cegcc*)
     lt_cv_dlopen="LoadLibrary"
     lt_cv_dlopen_libs=
     ;;
@@ -2209,14 +2209,14 @@ bsdi[[45]]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -2240,7 +2240,7 @@ cygwin* | mingw* | pw32* | cegcc*)
 m4_if([$1], [],[
       sys_lib_search_path_spec="$sys_lib_search_path_spec /usr/lib/w32api"])
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[[.]]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -2836,7 +2836,7 @@ if test "$GCC" = yes; then
   # Check if gcc -print-prog-name=ld gives a path.
   AC_MSG_CHECKING([for ld used by $CC])
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -4398,7 +4398,7 @@ _LT_EOF
       fi
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # _LT_TAGVAR(hardcode_libdir_flag_spec, $1) is actually meaningless,
       # as there is no search path for DLLs.
       _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'
@@ -4771,7 +4771,7 @@ _LT_EOF
       _LT_TAGVAR(export_dynamic_flag_spec, $1)=-rdynamic
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # When not using gcc, we currently assume that we are using
       # Microsoft Visual C++.
       # hardcode_libdir_flag_spec is actually meaningless, as there is
@@ -5715,7 +5715,7 @@ if test "$_lt_caught_CXX_error" != yes; then
         esac
         ;;
 
-      cygwin* | mingw* | pw32* | cegcc*)
+      cygwin* | mingw* | msys* | pw32* | cegcc*)
         # _LT_TAGVAR(hardcode_libdir_flag_spec, $1) is actually meaningless,
         # as there is no search path for DLLs.
         _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'
diff --git a/libgo/configure b/libgo/configure
index 70f64c974fd..2ecc01f5479 100755
--- a/libgo/configure
+++ b/libgo/configure
@@ -5166,7 +5166,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -9288,7 +9288,7 @@ _LT_EOF
       fi
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # _LT_TAGVAR(hardcode_libdir_flag_spec, ) is actually meaningless,
       # as there is no search path for DLLs.
       hardcode_libdir_flag_spec='-L$libdir'
@@ -9719,7 +9719,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
       export_dynamic_flag_spec=-rdynamic
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # When not using gcc, we currently assume that we are using
       # Microsoft Visual C++.
       # hardcode_libdir_flag_spec is actually meaningless, as there is
@@ -10620,14 +10620,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -10651,7 +10651,7 @@ cygwin* | mingw* | pw32* | cegcc*)
 
       sys_lib_search_path_spec="$sys_lib_search_path_spec /usr/lib/w32api"
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -11272,7 +11272,7 @@ else
     lt_cv_dlopen_self=yes
     ;;
 
-  mingw* | pw32* | cegcc*)
+  mingw* | msys* | pw32* | cegcc*)
     lt_cv_dlopen="LoadLibrary"
     lt_cv_dlopen_libs=
     ;;
@@ -12695,7 +12695,7 @@ _LT_EOF
       fi
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # _LT_TAGVAR(hardcode_libdir_flag_spec, GO) is actually meaningless,
       # as there is no search path for DLLs.
       hardcode_libdir_flag_spec_GO='-L$libdir'
@@ -13126,7 +13126,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
       export_dynamic_flag_spec_GO=-rdynamic
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # When not using gcc, we currently assume that we are using
       # Microsoft Visual C++.
       # hardcode_libdir_flag_spec is actually meaningless, as there is
diff --git a/libgomp/configure b/libgomp/configure
index 07a0efef8ea..b0ebc62e2ea 100755
--- a/libgomp/configure
+++ b/libgomp/configure
@@ -5359,7 +5359,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -5711,6 +5711,12 @@ else
     lt_cv_sys_max_cmd_len=8192;
     ;;
 
+  mint*)
+    # On MiNT this test can take minutes to run, and I'm not sure it's
+    # healthy for this platform. Let's restrict it to 8192.
+    lt_cv_sys_max_cmd_len=8192;
+    ;;
+
   amigaos*)
     # On AmigaOS with pdksh, this test takes hours, literally.
     # So we just punt and use a minimum line length of 8192.
@@ -9161,7 +9167,7 @@ _LT_EOF
       fi
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # _LT_TAGVAR(hardcode_libdir_flag_spec, ) is actually meaningless,
       # as there is no search path for DLLs.
       hardcode_libdir_flag_spec='-L$libdir'
@@ -9592,7 +9598,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
       export_dynamic_flag_spec=-rdynamic
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # When not using gcc, we currently assume that we are using
       # Microsoft Visual C++.
       # hardcode_libdir_flag_spec is actually meaningless, as there is
@@ -10493,14 +10499,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -10524,7 +10530,7 @@ cygwin* | mingw* | pw32* | cegcc*)
 
       sys_lib_search_path_spec="$sys_lib_search_path_spec /usr/lib/w32api"
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -11150,7 +11156,7 @@ else
     lt_cv_dlopen_self=yes
     ;;
 
-  mingw* | pw32* | cegcc*)
+  mingw* | msys* | pw32* | cegcc*)
     lt_cv_dlopen="LoadLibrary"
     lt_cv_dlopen_libs=
     ;;
@@ -11769,7 +11775,7 @@ CC="$lt_save_CC"
 
 
 case $host in
-  *-cygwin* | *-mingw*)
+  *-cygwin* | *-mingw* | *-msys*)
     # 'host' will be top-level target in the case of a target lib,
     # we must compare to with_cross_host to decide if this is a native
     # or cross-compiler and select where to install dlls appropriately.
@@ -13021,7 +13027,7 @@ _LT_EOF
       fi
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # _LT_TAGVAR(hardcode_libdir_flag_spec, FC) is actually meaningless,
       # as there is no search path for DLLs.
       hardcode_libdir_flag_spec_FC='-L$libdir'
@@ -13440,7 +13446,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
       export_dynamic_flag_spec_FC=-rdynamic
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # When not using gcc, we currently assume that we are using
       # Microsoft Visual C++.
       # hardcode_libdir_flag_spec is actually meaningless, as there is
@@ -14135,14 +14141,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -14165,7 +14171,7 @@ cygwin* | mingw* | pw32* | cegcc*)
       soname_spec='`echo ${libname} | sed -e 's/^lib/cyg/'``echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
 
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -16104,7 +16110,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
diff --git a/libgomp/configure.tgt b/libgomp/configure.tgt
index fe2bf1dac51..cbbfcac7936 100644
--- a/libgomp/configure.tgt
+++ b/libgomp/configure.tgt
@@ -137,7 +137,7 @@ case "${target}" in
 	esac
 	;;
 
-  *-*-mingw32*)
+  *-*-mingw*)
 	config_path="mingw32 posix"
 	;;
 
diff --git a/libhsail-rt/configure b/libhsail-rt/configure
index c6bf7f7b9d0..d119e0cc6a7 100755
--- a/libhsail-rt/configure
+++ b/libhsail-rt/configure
@@ -5169,7 +5169,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -8970,7 +8970,7 @@ _LT_EOF
       fi
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # _LT_TAGVAR(hardcode_libdir_flag_spec, ) is actually meaningless,
       # as there is no search path for DLLs.
       hardcode_libdir_flag_spec='-L$libdir'
@@ -9401,7 +9401,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
       export_dynamic_flag_spec=-rdynamic
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # When not using gcc, we currently assume that we are using
       # Microsoft Visual C++.
       # hardcode_libdir_flag_spec is actually meaningless, as there is
@@ -10302,14 +10302,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -10333,7 +10333,7 @@ cygwin* | mingw* | pw32* | cegcc*)
 
       sys_lib_search_path_spec="$sys_lib_search_path_spec /usr/lib/w32api"
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -10959,7 +10959,7 @@ else
     lt_cv_dlopen_self=yes
     ;;
 
-  mingw* | pw32* | cegcc*)
+  mingw* | msys* | pw32* | cegcc*)
     lt_cv_dlopen="LoadLibrary"
     lt_cv_dlopen_libs=
     ;;
@@ -11833,7 +11833,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -12186,7 +12186,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
         esac
         ;;
 
-      cygwin* | mingw* | pw32* | cegcc*)
+      cygwin* | mingw* | msys* | pw32* | cegcc*)
         # _LT_TAGVAR(hardcode_libdir_flag_spec, CXX) is actually meaningless,
         # as there is no search path for DLLs.
         hardcode_libdir_flag_spec_CXX='-L$libdir'
@@ -13959,14 +13959,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -13989,7 +13989,7 @@ cygwin* | mingw* | pw32* | cegcc*)
       soname_spec='`echo ${libname} | sed -e 's/^lib/cyg/'``echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
 
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
diff --git a/libiberty/configure b/libiberty/configure
index 26c882e7a97..95df2ff4fac 100755
--- a/libiberty/configure
+++ b/libiberty/configure
@@ -5183,7 +5183,9 @@ case "${host}" in
 	;;
     i[34567]86-*-cygwin* | x86_64-*-cygwin*)
 	;;
-    i[34567]86-*-mingw* | x86_64-*-mingw*)
+    i[34567]86-*-mingw* | x86_64-*-mingw* | x86_64-*-msys*)
+	;;
+    *-*-mint*)
 	;;
     i[34567]86-*-interix[3-9]*)
 	# Interix 3.x gcc -fpic/-fPIC options generate broken code.
@@ -6236,7 +6238,7 @@ _ACEOF
   # Mingw provides and which ones we will be expected to provide.
 
   case "${host}" in
-  *-*-mingw*)
+  *-*-mingw* | *-*-msys*)
     case " $LIBOBJS " in
   *" asprintf.$ac_objext "* ) ;;
   *) LIBOBJS="$LIBOBJS asprintf.$ac_objext"
@@ -6452,7 +6454,7 @@ fi
 
 
 case "${host}" in
-  *-*-cygwin* | *-*-mingw*)
+  *-*-cygwin* | *-*-mingw* | *-*-mint* | *-*-msys*)
     $as_echo "#define HAVE_SYS_ERRLIST 1" >>confdefs.h
 
     $as_echo "#define HAVE_SYS_NERR 1" >>confdefs.h
@@ -6582,7 +6584,7 @@ esac
 
     ;;
 
-  *-*-mingw32*)
+  *-*-mingw32* | *-*-msys*)
     # Under mingw32, sys_nerr and sys_errlist exist, but they are
     # macros, so the test below won't find them.
     libiberty_cv_var_sys_nerr=yes
@@ -7360,7 +7362,7 @@ fi
 
 # Figure out which version of pexecute to use.
 case "${host}" in
-     *-*-mingw* | *-*-winnt*)	pexecute=pex-win32  ;;
+     *-*-mingw* | *-*-winnt* | *-*-msys*)	pexecute=pex-win32  ;;
      *-*-msdosdjgpp*)		pexecute=pex-djgpp  ;;
      *-*-msdos*)		pexecute=pex-msdos  ;;
      *)				pexecute=pex-unix   ;;
diff --git a/libiberty/configure.ac b/libiberty/configure.ac
index dd62ce5a0b9..694dda60568 100644
--- a/libiberty/configure.ac
+++ b/libiberty/configure.ac
@@ -481,7 +481,7 @@ if test -n "${with_target_subdir}"; then
   # Mingw provides and which ones we will be expected to provide.
 
   case "${host}" in
-  *-*-mingw*)
+  *-*-mingw* | *-*-msys*)
     AC_LIBOBJ([asprintf])
     AC_LIBOBJ([basename])
     AC_LIBOBJ([bcmp])
@@ -560,7 +560,7 @@ AC_SUBST(CHECK)
 AC_SUBST(target_header_dir)
 
 case "${host}" in
-  *-*-cygwin* | *-*-mingw*)
+  *-*-cygwin* | *-*-mingw* | *-*-mint* | *-*-msys*)
     AC_DEFINE(HAVE_SYS_ERRLIST)
     AC_DEFINE(HAVE_SYS_NERR)
     ;;
@@ -624,7 +624,7 @@ if test -z "${setobjs}"; then
     AC_LIBOBJ([vsnprintf])
     ;;
 
-  *-*-mingw32*)
+  *-*-mingw32* | *-*-msys*)
     # Under mingw32, sys_nerr and sys_errlist exist, but they are
     # macros, so the test below won't find them.
     libiberty_cv_var_sys_nerr=yes
@@ -715,7 +715,7 @@ fi
 
 # Figure out which version of pexecute to use.
 case "${host}" in
-     *-*-mingw* | *-*-winnt*)	pexecute=pex-win32  ;;
+     *-*-mingw* | *-*-winnt* | *-*-msys*)	pexecute=pex-win32  ;;
      *-*-msdosdjgpp*)		pexecute=pex-djgpp  ;;
      *-*-msdos*)		pexecute=pex-msdos  ;;
      *)				pexecute=pex-unix   ;;
diff --git a/libiberty/hex.c b/libiberty/hex.c
index 76fb33f3c06..6d617983b45 100644
--- a/libiberty/hex.c
+++ b/libiberty/hex.c
@@ -24,7 +24,7 @@ Boston, MA 02110-1301, USA.  */
 #include "libiberty.h"
 #include "safe-ctype.h" /* for HOST_CHARSET_ASCII */
 
-#if EOF != -1
+#if !(EOF == -1)	/* gcc 2.95.3 has bug in '!=' operator for negative constants */
  #error "hex.c requires EOF == -1"
 #endif
 
diff --git a/libiberty/lrealpath.c b/libiberty/lrealpath.c
index 83bdd173867..bd2ca177d1e 100644
--- a/libiberty/lrealpath.c
+++ b/libiberty/lrealpath.c
@@ -138,15 +138,26 @@ lrealpath (const char *filename)
   {
     char buf[MAX_PATH];
     char* basename;
+    char* slash;
     DWORD len = GetFullPathName (filename, MAX_PATH, buf, &basename);
     if (len == 0 || len > MAX_PATH - 1)
       return strdup (filename);
     else
       {
-	/* The file system is case-preserving but case-insensitive,
-	   Canonicalize to lowercase, using the codepage associated
-	   with the process locale.  */
-        CharLowerBuff (buf, len);
+	/* Turn all back slashes back into forward slashes
+	   and don't make it lowercase.
+	   Rationale:
+	   Windows is as happy with / as it is with \. This will
+	   have been built using Cygwin, MSYS* or cross-compiled
+	   from a system where dirsep is / so it is cleaner just
+	   to keep the dirseps as / (and the case un-modified).
+	   This way, the value will be consistent with the build
+	   system and string operations (be they internal to this
+	   software or external to it, e.g. processing map files
+	   with sed) work as expected.  */
+	slash = buf;
+	while ((slash = strchr(slash,'\\')) !=  NULL)
+	  *slash = '/';
         return strdup (buf);
       }
   }
diff --git a/libiberty/safe-ctype.c b/libiberty/safe-ctype.c
index 3eeb33fd767..865034073ac 100644
--- a/libiberty/safe-ctype.c
+++ b/libiberty/safe-ctype.c
@@ -118,7 +118,7 @@ sets of characters:
 #include <safe-ctype.h>
 #include <stdio.h>  /* for EOF */
 
-#if EOF != -1
+#if !(EOF == -1)	/* gcc 2.95.3 has bug in '!=' operator for negative constants */
  #error "<safe-ctype.h> requires EOF == -1"
 #endif
 
diff --git a/libiberty/strsignal.c b/libiberty/strsignal.c
index 666b1b4f15e..2f607023097 100644
--- a/libiberty/strsignal.c
+++ b/libiberty/strsignal.c
@@ -551,7 +551,7 @@ followed by a newline.
 #ifndef HAVE_PSIGNAL
 
 void
-psignal (int signo, char *message)
+psignal (int signo, const char *message)
 {
   if (signal_names == NULL)
     {
diff --git a/libitm/configure b/libitm/configure
index b8f1e2360d0..144929db3b9 100755
--- a/libitm/configure
+++ b/libitm/configure
@@ -5992,7 +5992,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -9795,7 +9795,7 @@ _LT_EOF
       fi
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # _LT_TAGVAR(hardcode_libdir_flag_spec, ) is actually meaningless,
       # as there is no search path for DLLs.
       hardcode_libdir_flag_spec='-L$libdir'
@@ -10226,7 +10226,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
       export_dynamic_flag_spec=-rdynamic
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # When not using gcc, we currently assume that we are using
       # Microsoft Visual C++.
       # hardcode_libdir_flag_spec is actually meaningless, as there is
@@ -11127,14 +11127,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -11158,7 +11158,7 @@ cygwin* | mingw* | pw32* | cegcc*)
 
       sys_lib_search_path_spec="$sys_lib_search_path_spec /usr/lib/w32api"
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -11784,7 +11784,7 @@ else
     lt_cv_dlopen_self=yes
     ;;
 
-  mingw* | pw32* | cegcc*)
+  mingw* | msys* | pw32* | cegcc*)
     lt_cv_dlopen="LoadLibrary"
     lt_cv_dlopen_libs=
     ;;
@@ -12658,7 +12658,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -13011,7 +13011,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
         esac
         ;;
 
-      cygwin* | mingw* | pw32* | cegcc*)
+      cygwin* | mingw* | msys* | pw32* | cegcc*)
         # _LT_TAGVAR(hardcode_libdir_flag_spec, CXX) is actually meaningless,
         # as there is no search path for DLLs.
         hardcode_libdir_flag_spec_CXX='-L$libdir'
@@ -14784,14 +14784,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -14814,7 +14814,7 @@ cygwin* | mingw* | pw32* | cegcc*)
       soname_spec='`echo ${libname} | sed -e 's/^lib/cyg/'``echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
 
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -16104,7 +16104,7 @@ else
    # Systems known to be in this category are Windows (all variants),
    # VMS, and Darwin.
    case "$host_os" in
-     *vms* | cygwin* | pe | mingw* | darwin* | ultrix* | hpux10* | hpux11.00)
+     *vms* | cygwin* | pe | mingw* | msys* | darwin* | ultrix* | hpux10* | hpux11.00)
         gcc_cv_func_mmap_dev_zero=no ;;
      *)
         gcc_cv_func_mmap_dev_zero=yes;;
@@ -16161,7 +16161,7 @@ else
    # above for use of /dev/zero.
    # Systems known to be in this category are Windows, VMS, and SCO Unix.
    case "$host_os" in
-     *vms* | cygwin* | pe | mingw* | sco* | udk* )
+     *vms* | cygwin* | pe | mingw* | msys* | sco* | udk* )
         gcc_cv_func_mmap_anon=no ;;
      *)
         gcc_cv_func_mmap_anon=yes;;
@@ -16910,7 +16910,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
diff --git a/libobjc/configure b/libobjc/configure
index 5d1b424a66d..5ecc692f72d 100755
--- a/libobjc/configure
+++ b/libobjc/configure
@@ -3412,7 +3412,7 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu
 
 
 case $host in
-  *-cygwin* | *-mingw*)
+  *-cygwin* | *-mingw* | *-msys*)
     # 'host' will be top-level target in the case of a target lib,
     # we must compare to with_cross_host to decide if this is a native
     # or cross-compiler and select where to install dlls appropriately.
@@ -3435,7 +3435,7 @@ case "${host}" in
     # Darwin needs -single_module when linking libobjc
     extra_ldflags_libobjc='$(lt_host_flags) -Wl,-single_module'
     ;;
-  *-cygwin*|*-mingw*)
+  *-cygwin*|*-mingw*|*-*-msys*)
     # Tell libtool to build DLLs on Windows
     extra_ldflags_libobjc='$(lt_host_flags)'
     ;;
@@ -4639,7 +4639,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -4991,6 +4991,12 @@ else
     lt_cv_sys_max_cmd_len=8192;
     ;;
 
+  mint*)
+    # On MiNT this test can take minutes to run, and I'm not sure it's
+    # healthy for this platform. Let's restrict it to 8192.
+    lt_cv_sys_max_cmd_len=8192;
+    ;;
+
   amigaos*)
     # On AmigaOS with pdksh, this test takes hours, literally.
     # So we just punt and use a minimum line length of 8192.
@@ -8483,7 +8489,7 @@ _LT_EOF
       fi
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # _LT_TAGVAR(hardcode_libdir_flag_spec, ) is actually meaningless,
       # as there is no search path for DLLs.
       hardcode_libdir_flag_spec='-L$libdir'
@@ -8920,7 +8926,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
       export_dynamic_flag_spec=-rdynamic
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # When not using gcc, we currently assume that we are using
       # Microsoft Visual C++.
       # hardcode_libdir_flag_spec is actually meaningless, as there is
@@ -9824,14 +9830,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -9855,7 +9861,7 @@ cygwin* | mingw* | pw32* | cegcc*)
 
       sys_lib_search_path_spec="$sys_lib_search_path_spec /usr/lib/w32api"
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -10484,7 +10490,7 @@ else
     lt_cv_dlopen_self=yes
     ;;
 
-  mingw* | pw32* | cegcc*)
+  mingw* | msys* | pw32* | cegcc*)
     lt_cv_dlopen="LoadLibrary"
     lt_cv_dlopen_libs=
     ;;
diff --git a/libobjc/configure.ac b/libobjc/configure.ac
index c1104db85f0..c599d9791de 100644
--- a/libobjc/configure.ac
+++ b/libobjc/configure.ac
@@ -152,7 +152,7 @@ case "${host}" in
     # Darwin needs -single_module when linking libobjc
     extra_ldflags_libobjc='$(lt_host_flags) -Wl,-single_module'
     ;;
-  *-cygwin*|*-mingw*)
+  *-cygwin*|*-mingw*|*-*-msys*)
     # Tell libtool to build DLLs on Windows
     extra_ldflags_libobjc='$(lt_host_flags)'
     ;;
diff --git a/liboffloadmic/configure b/liboffloadmic/configure
index dfa8287fd75..55e8955d54a 100644
--- a/liboffloadmic/configure
+++ b/liboffloadmic/configure
@@ -5628,7 +5628,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -9159,7 +9159,7 @@ _LT_EOF
       fi
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # _LT_TAGVAR(hardcode_libdir_flag_spec, ) is actually meaningless,
       # as there is no search path for DLLs.
       hardcode_libdir_flag_spec='-L$libdir'
@@ -9590,7 +9590,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
       export_dynamic_flag_spec=-rdynamic
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # When not using gcc, we currently assume that we are using
       # Microsoft Visual C++.
       # hardcode_libdir_flag_spec is actually meaningless, as there is
@@ -10491,14 +10491,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -10522,7 +10522,7 @@ cygwin* | mingw* | pw32* | cegcc*)
 
       sys_lib_search_path_spec="$sys_lib_search_path_spec /usr/lib/w32api"
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -11148,7 +11148,7 @@ else
     lt_cv_dlopen_self=yes
     ;;
 
-  mingw* | pw32* | cegcc*)
+  mingw* | msys* | pw32* | cegcc*)
     lt_cv_dlopen="LoadLibrary"
     lt_cv_dlopen_libs=
     ;;
@@ -12022,7 +12022,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -12375,7 +12375,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
         esac
         ;;
 
-      cygwin* | mingw* | pw32* | cegcc*)
+      cygwin* | mingw* | msys* | pw32* | cegcc*)
         # _LT_TAGVAR(hardcode_libdir_flag_spec, CXX) is actually meaningless,
         # as there is no search path for DLLs.
         hardcode_libdir_flag_spec_CXX='-L$libdir'
@@ -14148,14 +14148,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -14178,7 +14178,7 @@ cygwin* | mingw* | pw32* | cegcc*)
       soname_spec='`echo ${libname} | sed -e 's/^lib/cyg/'``echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
 
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
diff --git a/liboffloadmic/plugin/configure b/liboffloadmic/plugin/configure
index 0b21d7d4eed..1c02cd37470 100644
--- a/liboffloadmic/plugin/configure
+++ b/liboffloadmic/plugin/configure
@@ -5007,7 +5007,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -8806,7 +8806,7 @@ _LT_EOF
       fi
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # _LT_TAGVAR(hardcode_libdir_flag_spec, ) is actually meaningless,
       # as there is no search path for DLLs.
       hardcode_libdir_flag_spec='-L$libdir'
@@ -9237,7 +9237,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
       export_dynamic_flag_spec=-rdynamic
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # When not using gcc, we currently assume that we are using
       # Microsoft Visual C++.
       # hardcode_libdir_flag_spec is actually meaningless, as there is
@@ -10138,14 +10138,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -10169,7 +10169,7 @@ cygwin* | mingw* | pw32* | cegcc*)
 
       sys_lib_search_path_spec="$sys_lib_search_path_spec /usr/lib/w32api"
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -10795,7 +10795,7 @@ else
     lt_cv_dlopen_self=yes
     ;;
 
-  mingw* | pw32* | cegcc*)
+  mingw* | msys* | pw32* | cegcc*)
     lt_cv_dlopen="LoadLibrary"
     lt_cv_dlopen_libs=
     ;;
@@ -11669,7 +11669,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -12022,7 +12022,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
         esac
         ;;
 
-      cygwin* | mingw* | pw32* | cegcc*)
+      cygwin* | mingw* | msys* | pw32* | cegcc*)
         # _LT_TAGVAR(hardcode_libdir_flag_spec, CXX) is actually meaningless,
         # as there is no search path for DLLs.
         hardcode_libdir_flag_spec_CXX='-L$libdir'
@@ -13795,14 +13795,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -13825,7 +13825,7 @@ cygwin* | mingw* | pw32* | cegcc*)
       soname_spec='`echo ${libname} | sed -e 's/^lib/cyg/'``echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
 
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
diff --git a/libquadmath/configure b/libquadmath/configure
index 31918507f62..3ed1da56510 100755
--- a/libquadmath/configure
+++ b/libquadmath/configure
@@ -4978,7 +4978,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -8518,7 +8518,7 @@ _LT_EOF
       fi
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # _LT_TAGVAR(hardcode_libdir_flag_spec, ) is actually meaningless,
       # as there is no search path for DLLs.
       hardcode_libdir_flag_spec='-L$libdir'
@@ -8955,7 +8955,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
       export_dynamic_flag_spec=-rdynamic
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # When not using gcc, we currently assume that we are using
       # Microsoft Visual C++.
       # hardcode_libdir_flag_spec is actually meaningless, as there is
@@ -9859,14 +9859,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -9890,7 +9890,7 @@ cygwin* | mingw* | pw32* | cegcc*)
 
       sys_lib_search_path_spec="$sys_lib_search_path_spec /usr/lib/w32api"
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -10519,7 +10519,7 @@ else
     lt_cv_dlopen_self=yes
     ;;
 
-  mingw* | pw32* | cegcc*)
+  mingw* | msys* | pw32* | cegcc*)
     lt_cv_dlopen="LoadLibrary"
     lt_cv_dlopen_libs=
     ;;
@@ -11153,7 +11153,7 @@ CC="$lt_save_CC"
 
 
 case $host in
-  *-cygwin* | *-mingw*)
+  *-cygwin* | *-mingw* | *-msys*)
     # 'host' will be top-level target in the case of a target lib,
     # we must compare to with_cross_host to decide if this is a native
     # or cross-compiler and select where to install dlls appropriately.
diff --git a/libsanitizer/configure b/libsanitizer/configure
index 8bdde896fe7..5a6d7c13920 100755
--- a/libsanitizer/configure
+++ b/libsanitizer/configure
@@ -6562,7 +6562,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -10095,7 +10095,7 @@ _LT_EOF
       fi
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # _LT_TAGVAR(hardcode_libdir_flag_spec, ) is actually meaningless,
       # as there is no search path for DLLs.
       hardcode_libdir_flag_spec='-L$libdir'
@@ -10526,7 +10526,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
       export_dynamic_flag_spec=-rdynamic
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # When not using gcc, we currently assume that we are using
       # Microsoft Visual C++.
       # hardcode_libdir_flag_spec is actually meaningless, as there is
@@ -11427,14 +11427,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -11458,7 +11458,7 @@ cygwin* | mingw* | pw32* | cegcc*)
 
       sys_lib_search_path_spec="$sys_lib_search_path_spec /usr/lib/w32api"
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -12084,7 +12084,7 @@ else
     lt_cv_dlopen_self=yes
     ;;
 
-  mingw* | pw32* | cegcc*)
+  mingw* | msys* | pw32* | cegcc*)
     lt_cv_dlopen="LoadLibrary"
     lt_cv_dlopen_libs=
     ;;
@@ -12958,7 +12958,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -13311,7 +13311,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
         esac
         ;;
 
-      cygwin* | mingw* | pw32* | cegcc*)
+      cygwin* | mingw* | msys* | pw32* | cegcc*)
         # _LT_TAGVAR(hardcode_libdir_flag_spec, CXX) is actually meaningless,
         # as there is no search path for DLLs.
         hardcode_libdir_flag_spec_CXX='-L$libdir'
@@ -15084,14 +15084,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -15114,7 +15114,7 @@ cygwin* | mingw* | pw32* | cegcc*)
       soname_spec='`echo ${libname} | sed -e 's/^lib/cyg/'``echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
 
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -16715,7 +16715,7 @@ fi
 # Check for the fcntl function.
 if test -n "${with_target_subdir}"; then
    case "${host}" in
-   *-*-mingw*) have_fcntl=no ;;
+   *-*-mingw* | *-*-msys*) have_fcntl=no ;;
    *) have_fcntl=yes ;;
    esac
 else
diff --git a/libsanitizer/configure.ac b/libsanitizer/configure.ac
index ac24b4b593b..ed0049aa67f 100644
--- a/libsanitizer/configure.ac
+++ b/libsanitizer/configure.ac
@@ -304,7 +304,7 @@ fi
 # Check for the fcntl function.
 if test -n "${with_target_subdir}"; then
    case "${host}" in
-   *-*-mingw*) have_fcntl=no ;;
+   *-*-mingw* | *-*-msys*) have_fcntl=no ;;
    *) have_fcntl=yes ;;
    esac
 else
diff --git a/libssp/configure b/libssp/configure
index 10ba209bde8..23ad028f996 100755
--- a/libssp/configure
+++ b/libssp/configure
@@ -5164,7 +5164,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -5516,6 +5516,12 @@ else
     lt_cv_sys_max_cmd_len=8192;
     ;;
 
+  mint*)
+    # On MiNT this test can take minutes to run, and I'm not sure it's
+    # healthy for this platform. Let's restrict it to 8192.
+    lt_cv_sys_max_cmd_len=8192;
+    ;;
+
   amigaos*)
     # On AmigaOS with pdksh, this test takes hours, literally.
     # So we just punt and use a minimum line length of 8192.
@@ -8704,7 +8710,7 @@ _LT_EOF
       fi
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # _LT_TAGVAR(hardcode_libdir_flag_spec, ) is actually meaningless,
       # as there is no search path for DLLs.
       hardcode_libdir_flag_spec='-L$libdir'
@@ -9141,7 +9147,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
       export_dynamic_flag_spec=-rdynamic
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # When not using gcc, we currently assume that we are using
       # Microsoft Visual C++.
       # hardcode_libdir_flag_spec is actually meaningless, as there is
@@ -10045,14 +10051,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -10076,7 +10082,7 @@ cygwin* | mingw* | pw32* | cegcc*)
 
       sys_lib_search_path_spec="$sys_lib_search_path_spec /usr/lib/w32api"
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -10705,7 +10711,7 @@ else
     lt_cv_dlopen_self=yes
     ;;
 
-  mingw* | pw32* | cegcc*)
+  mingw* | msys* | pw32* | cegcc*)
     lt_cv_dlopen="LoadLibrary"
     lt_cv_dlopen_libs=
     ;;
@@ -11339,7 +11345,7 @@ CC="$lt_save_CC"
 
 
 case $host in
-  *-cygwin* | *-mingw*)
+  *-cygwin* | *-mingw* | *-msys*)
     # 'host' will be top-level target in the case of a target lib,
     # we must compare to with_cross_host to decide if this is a native
     # or cross-compiler and select where to install dlls appropriately.
diff --git a/libssp/ssp.c b/libssp/ssp.c
index 6e911f087f1..85e1e3e42c0 100644
--- a/libssp/ssp.c
+++ b/libssp/ssp.c
@@ -65,6 +65,9 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
 #ifdef HAVE_SYSLOG_H
 # include <syslog.h>
 #endif
+#ifdef __MINT__
+#include <mint/osbind.h>
+#endif
 
 void *__stack_chk_guard = 0;
 
@@ -114,6 +117,9 @@ fail (const char *msg1, size_t msg1len, const char *msg3)
 {
 #ifdef __GNU_LIBRARY__
   extern char * __progname;
+#elif defined (__MINT__)
+  extern char * program_invocation_short_name;
+  #define __progname program_invocation_short_name
 #else
   static const char __progname[] = "";
 #endif
@@ -155,6 +161,9 @@ fail (const char *msg1, size_t msg1len, const char *msg3)
     syslog (LOG_CRIT, "%s", msg3);
 #endif /* HAVE_SYSLOG_H */
 
+#ifdef __MINT__
+    Pterm(127);
+#else
   /* Try very hard to exit.  Note that signals may be blocked preventing
      the first two options from working.  The use of volatile is here to
      prevent optimizers from "knowing" that __builtin_trap is called first,
@@ -176,6 +185,7 @@ fail (const char *msg1, size_t msg1len, const char *msg3)
           break;
         }
   }
+#endif
 }
 
 void
diff --git a/libstdc++-v3/acinclude.m4 b/libstdc++-v3/acinclude.m4
index e2a12607d5d..89ad6a1cb6a 100644
--- a/libstdc++-v3/acinclude.m4
+++ b/libstdc++-v3/acinclude.m4
@@ -2784,7 +2784,7 @@ AC_DEFUN([GLIBCXX_ENABLE_VTABLE_VERIFY], [
   vtv_cygmin=no
   if test $enable_vtable_verify = yes; then
     case ${target_os} in
-      cygwin*|mingw32*)
+      cygwin*|mingw*)
         VTV_CXXFLAGS="-fvtable-verify=std -Wl,-lvtv,-u_vtable_map_vars_start,-u_vtable_map_vars_end"
         VTV_CXXLINKFLAGS="-L${toplevel_builddir}/libvtv/.libs -Wl,--rpath -Wl,${toplevel_builddir}/libvtv/.libs"
         vtv_cygmin=yes
diff --git a/libstdc++-v3/config/abi/pre/gnu.ver b/libstdc++-v3/config/abi/pre/gnu.ver
index 5323c7f0604..cfa42d3f26a 100644
--- a/libstdc++-v3/config/abi/pre/gnu.ver
+++ b/libstdc++-v3/config/abi/pre/gnu.ver
@@ -2589,7 +2589,7 @@ CXXABI_1.3.6 {
     __cxa_allocate_dependent_exception;
     __cxa_free_dependent_exception;
     __cxa_deleted_virtual;
-
+    _ZTC*;
 } CXXABI_1.3.5;
 
 CXXABI_1.3.7 {
diff --git a/libstdc++-v3/config/locale/dragonfly/c_locale.h b/libstdc++-v3/config/locale/dragonfly/c_locale.h
index cf4281cebbf..d6afb99c815 100644
--- a/libstdc++-v3/config/locale/dragonfly/c_locale.h
+++ b/libstdc++-v3/config/locale/dragonfly/c_locale.h
@@ -55,7 +55,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
   // fall back to the unsafe vsprintf which, in general, can be dangerous
   // and should be avoided.
   inline int
-  __convert_from_v(const __c_locale& __cloc, char* __out,
+  __convert_from_v(const __c_locale& __cloc, char* ___out,
 		   const int __size __attribute__ ((__unused__)),
 		   const char* __fmt, ...)
   {
@@ -65,9 +65,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
     __builtin_va_start(__args, __fmt);
 
 #if _GLIBCXX_USE_C99_STDIO
-    const int __ret = __builtin_vsnprintf(__out, __size, __fmt, __args);
+    const int __ret = __builtin_vsnprintf(___out, __size, __fmt, __args);
 #else
-    const int __ret = __builtin_vsprintf(__out, __fmt, __args);
+    const int __ret = __builtin_vsprintf(___out, __fmt, __args);
 #endif
 
     __builtin_va_end(__args);
diff --git a/libstdc++-v3/config/locale/generic/c_locale.h b/libstdc++-v3/config/locale/generic/c_locale.h
index fbad3bbc8aa..32954b9dca1 100644
--- a/libstdc++-v3/config/locale/generic/c_locale.h
+++ b/libstdc++-v3/config/locale/generic/c_locale.h
@@ -53,7 +53,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
   // fall back to the unsafe vsprintf which, in general, can be dangerous
   // and should be avoided.
   inline int
-  __convert_from_v(const __c_locale&, char* __out,
+  __convert_from_v(const __c_locale&, char* ___out,
 		   const int __size __attribute__((__unused__)),
 		   const char* __fmt, ...)
   {
@@ -71,9 +71,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
     __builtin_va_start(__args, __fmt);
 
 #if _GLIBCXX_USE_C99_STDIO && !_GLIBCXX_HAVE_BROKEN_VSNPRINTF
-    const int __ret = __builtin_vsnprintf(__out, __size, __fmt, __args);
+    const int __ret = __builtin_vsnprintf(___out, __size, __fmt, __args);
 #else
-    const int __ret = __builtin_vsprintf(__out, __fmt, __args);
+    const int __ret = __builtin_vsprintf(___out, __fmt, __args);
 #endif
 
     __builtin_va_end(__args);
diff --git a/libstdc++-v3/config/locale/gnu/c_locale.h b/libstdc++-v3/config/locale/gnu/c_locale.h
index bc2435570ae..436adb0cb03 100644
--- a/libstdc++-v3/config/locale/gnu/c_locale.h
+++ b/libstdc++-v3/config/locale/gnu/c_locale.h
@@ -67,7 +67,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
   // and should be avoided.
   inline int
   __convert_from_v(const __c_locale& __cloc __attribute__ ((__unused__)),
-		   char* __out,
+		   char* ___out,
 		   const int __size __attribute__ ((__unused__)),
 		   const char* __fmt, ...)
   {
@@ -89,9 +89,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
     __builtin_va_start(__args, __fmt);
 
 #if _GLIBCXX_USE_C99_STDIO
-    const int __ret = __builtin_vsnprintf(__out, __size, __fmt, __args);
+    const int __ret = __builtin_vsnprintf(___out, __size, __fmt, __args);
 #else
-    const int __ret = __builtin_vsprintf(__out, __fmt, __args);
+    const int __ret = __builtin_vsprintf(___out, __fmt, __args);
 #endif
 
     __builtin_va_end(__args);
diff --git a/libstdc++-v3/config/os/mint/ctype_base.h b/libstdc++-v3/config/os/mint/ctype_base.h
new file mode 100644
index 00000000000..0f2e672c6fe
--- /dev/null
+++ b/libstdc++-v3/config/os/mint/ctype_base.h
@@ -0,0 +1,67 @@
+// Locale support -*- C++ -*-
+
+// Copyright (C) 1997-2023 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+//
+// ISO C++ 14882: 22.1  Locales
+//
+
+//  We don't use the C-locale masks defined in /usr/include/ctype.h
+//  because those masks do not conform to the requirements of 22.2.1.
+//  In particular, a separate 'print' bitmask does not exist (isprint(c)
+//  relies on a combination of flags) and the  '_ALPHA' mask is also a
+//  combination of simple bitmasks.  Thus, we define libstdc++-specific
+//  masks here, based on the generic masks, and the corresponding
+//  classic_table in ctype_noninline.h.
+
+namespace std _GLIBCXX_VISIBILITY(default)
+{
+_GLIBCXX_BEGIN_NAMESPACE_VERSION
+
+  /// @brief  Base class for ctype.
+  struct ctype_base
+  {
+    // Non-standard typedefs.
+    typedef const int* 		__to_type;
+
+    // NB: Offsets into ctype<char>::_M_table force a particular size
+    // on the mask type. Because of this, we don't use an enum.
+    typedef unsigned short 	mask;
+    static const mask upper	= 1 << 0;
+    static const mask lower	= 1 << 1;
+    static const mask alpha	= 1 << 2;
+    static const mask digit	= 1 << 3;
+    static const mask xdigit	= 1 << 4;
+    static const mask space	= 1 << 5;
+    static const mask print	= 1 << 6;
+    static const mask graph	= (1 << 2) | (1 << 3) | (1 << 9);  // alnum|punct
+    static const mask cntrl	= 1 << 8;
+    static const mask punct 	= 1 << 9;
+    static const mask alnum	= (1 << 2) | (1 << 3);  // alpha|digit
+#if __cplusplus >= 201103L
+    static const mask blank	= 1 << 10;
+#endif
+  };
+
+_GLIBCXX_END_NAMESPACE_VERSION
+} // namespace
diff --git a/libstdc++-v3/config/os/mint/ctype_configure_char.cc b/libstdc++-v3/config/os/mint/ctype_configure_char.cc
new file mode 100644
index 00000000000..840c4730312
--- /dev/null
+++ b/libstdc++-v3/config/os/mint/ctype_configure_char.cc
@@ -0,0 +1,243 @@
+// Locale support -*- C++ -*-
+
+// Copyright (C) 2011-2017 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+/** @file ctype_configure_char.cc */
+
+//
+// ISO C++ 14882: 22.1  Locales
+//
+
+#include <locale>
+#include <cstdlib>
+#include <cstring>
+
+namespace std _GLIBCXX_VISIBILITY(default)
+{
+_GLIBCXX_BEGIN_NAMESPACE_VERSION
+
+  // The classic table used in libstdc++ is *not* the C _ctype table
+  // used by mscvrt, but is based on the ctype masks defined for libstdc++
+  // in ctype_base.h.
+
+  const ctype_base::mask*
+  ctype<char>::classic_table() throw()
+  {
+    static const ctype_base::mask _S_classic_table[256] =
+    {
+      cntrl /* null */,
+      cntrl /* ^A */,
+      cntrl /* ^B */,
+      cntrl /* ^C */,
+      cntrl /* ^D */,
+      cntrl /* ^E */,
+      cntrl /* ^F */,
+      cntrl /* ^G */,
+      cntrl /* ^H */,
+      ctype_base::mask(space | cntrl | blank) /* tab */,
+      ctype_base::mask(space | cntrl) /* LF */,
+      ctype_base::mask(space | cntrl) /* ^K */,
+      ctype_base::mask(space | cntrl) /* FF */,
+      ctype_base::mask(space | cntrl) /* ^M */,
+      cntrl /* ^N */,
+      cntrl /* ^O */,
+      cntrl /* ^P */,
+      cntrl /* ^Q */,
+      cntrl /* ^R */,
+      cntrl /* ^S */,
+      cntrl /* ^T */,
+      cntrl /* ^U */,
+      cntrl /* ^V */,
+      cntrl /* ^W */,
+      cntrl /* ^X */,
+      cntrl /* ^Y */,
+      cntrl /* ^Z */,
+      cntrl /* esc */,
+      cntrl /* ^\ */,
+      cntrl /* ^] */,
+      cntrl /* ^^ */,
+      cntrl /* ^_ */,
+      ctype_base::mask(space | print | blank) /*   */,
+      ctype_base::mask(punct | print) /* ! */,
+      ctype_base::mask(punct | print) /* " */,
+      ctype_base::mask(punct | print) /* # */,
+      ctype_base::mask(punct | print) /* $ */,
+      ctype_base::mask(punct | print) /* % */,
+      ctype_base::mask(punct | print) /* & */,
+      ctype_base::mask(punct | print) /* ' */,
+      ctype_base::mask(punct | print) /* ( */,
+      ctype_base::mask(punct | print) /* ) */,
+      ctype_base::mask(punct | print) /* * */,
+      ctype_base::mask(punct | print) /* + */,
+      ctype_base::mask(punct | print) /* , */,
+      ctype_base::mask(punct | print) /* - */,
+      ctype_base::mask(punct | print) /* . */,
+      ctype_base::mask(punct | print) /* / */,
+      ctype_base::mask(digit | xdigit | print) /* 0 */,
+      ctype_base::mask(digit | xdigit | print) /* 1 */,
+      ctype_base::mask(digit | xdigit | print) /* 2 */,
+      ctype_base::mask(digit | xdigit | print) /* 3 */,
+      ctype_base::mask(digit | xdigit | print) /* 4 */,
+      ctype_base::mask(digit | xdigit | print) /* 5 */,
+      ctype_base::mask(digit | xdigit | print) /* 6 */,
+      ctype_base::mask(digit | xdigit | print) /* 7 */,
+      ctype_base::mask(digit | xdigit | print) /* 8 */,
+      ctype_base::mask(digit | xdigit | print) /* 9 */,
+      ctype_base::mask(punct | print) /* : */,
+      ctype_base::mask(punct | print) /* ; */,
+      ctype_base::mask(punct | print) /* < */,
+      ctype_base::mask(punct | print) /* = */,
+      ctype_base::mask(punct | print) /* > */,
+      ctype_base::mask(punct | print) /* ? */,
+      ctype_base::mask(punct | print) /* ! */,
+      ctype_base::mask(alpha | upper | xdigit | print) /* A */,
+      ctype_base::mask(alpha | upper | xdigit | print) /* B */,
+      ctype_base::mask(alpha | upper | xdigit | print) /* C */,
+      ctype_base::mask(alpha | upper | xdigit | print) /* D */,
+      ctype_base::mask(alpha | upper | xdigit | print) /* E */,
+      ctype_base::mask(alpha | upper | xdigit | print) /* F */,
+      ctype_base::mask(alpha | upper | print) /* G */,
+      ctype_base::mask(alpha | upper | print) /* H */,
+      ctype_base::mask(alpha | upper | print) /* I */,
+      ctype_base::mask(alpha | upper | print) /* J */,
+      ctype_base::mask(alpha | upper | print) /* K */,
+      ctype_base::mask(alpha | upper | print) /* L */,
+      ctype_base::mask(alpha | upper | print) /* M */,
+      ctype_base::mask(alpha | upper | print) /* N */,
+      ctype_base::mask(alpha | upper | print) /* O */,
+      ctype_base::mask(alpha | upper | print) /* P */,
+      ctype_base::mask(alpha | upper | print) /* Q */,
+      ctype_base::mask(alpha | upper | print) /* R */,
+      ctype_base::mask(alpha | upper | print) /* S */,
+      ctype_base::mask(alpha | upper | print) /* T */,
+      ctype_base::mask(alpha | upper | print) /* U */,
+      ctype_base::mask(alpha | upper | print) /* V */,
+      ctype_base::mask(alpha | upper | print) /* W */,
+      ctype_base::mask(alpha | upper | print) /* X */,
+      ctype_base::mask(alpha | upper | print) /* Y */,
+      ctype_base::mask(alpha | upper | print) /* Z */,
+      ctype_base::mask(punct | print) /* [ */,
+      ctype_base::mask(punct | print) /* \ */,
+      ctype_base::mask(punct | print) /* ] */,
+      ctype_base::mask(punct | print) /* ^ */,
+      ctype_base::mask(punct | print) /* _ */,
+      ctype_base::mask(punct | print) /* ` */,
+      ctype_base::mask(alpha | lower | xdigit | print) /* a */,
+      ctype_base::mask(alpha | lower | xdigit | print) /* b */,
+      ctype_base::mask(alpha | lower | xdigit | print) /* c */,
+      ctype_base::mask(alpha | lower | xdigit | print) /* d */,
+      ctype_base::mask(alpha | lower | xdigit | print) /* e */,
+      ctype_base::mask(alpha | lower | xdigit | print) /* f */,
+      ctype_base::mask(alpha | lower | print) /* g */,
+      ctype_base::mask(alpha | lower | print) /* h */,
+      ctype_base::mask(alpha | lower | print) /* i */,
+      ctype_base::mask(alpha | lower | print) /* j */,
+      ctype_base::mask(alpha | lower | print) /* k */,
+      ctype_base::mask(alpha | lower | print) /* l */,
+      ctype_base::mask(alpha | lower | print) /* m */,
+      ctype_base::mask(alpha | lower | print) /* n */,
+      ctype_base::mask(alpha | lower | print) /* o */,
+      ctype_base::mask(alpha | lower | print) /* p */,
+      ctype_base::mask(alpha | lower | print) /* q */,
+      ctype_base::mask(alpha | lower | print) /* r */,
+      ctype_base::mask(alpha | lower | print) /* s */,
+      ctype_base::mask(alpha | lower | print) /* t */,
+      ctype_base::mask(alpha | lower | print) /* u */,
+      ctype_base::mask(alpha | lower | print) /* v */,
+      ctype_base::mask(alpha | lower | print) /* w */,
+      ctype_base::mask(alpha | lower | print) /* x */,
+      ctype_base::mask(alpha | lower | print) /* y */,
+      ctype_base::mask(alpha | lower | print) /* x */,
+      ctype_base::mask(punct | print) /* { */,
+      ctype_base::mask(punct | print) /* | */,
+      ctype_base::mask(punct | print) /* } */,
+      ctype_base::mask(punct | print) /* ~ */,
+      cntrl /* del (0x7f)*/,
+      /* The next 128 entries are all 0.   */
+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+    };
+    return _S_classic_table;
+  }
+
+  ctype<char>::ctype(__c_locale, const mask* __table, bool __del,
+		     size_t __refs)
+  : facet(__refs), _M_del(__table != 0 && __del),
+  _M_toupper(NULL), _M_tolower(NULL),
+  _M_table(__table ? __table : classic_table())
+  {
+    memset(_M_widen, 0, sizeof(_M_widen));
+    _M_widen_ok = 0;
+    memset(_M_narrow, 0, sizeof(_M_narrow));
+    _M_narrow_ok = 0;
+  }
+
+  ctype<char>::ctype(const mask* __table, bool __del, size_t __refs)
+  : facet(__refs), _M_del(__table != 0 && __del),
+  _M_toupper(NULL), _M_tolower(NULL),
+  _M_table(__table ? __table : classic_table())
+  {
+    memset(_M_widen, 0, sizeof(_M_widen));
+    _M_widen_ok = 0;
+    memset(_M_narrow, 0, sizeof(_M_narrow));
+    _M_narrow_ok = 0;
+  }
+
+  char
+  ctype<char>::do_toupper(char __c) const
+  { return (this->is(ctype_base::lower, __c) ? (__c - 'a' + 'A') : __c); }
+
+  const char*
+  ctype<char>::do_toupper(char* __low, const char* __high) const
+  {
+    while (__low < __high)
+      {
+	*__low = this->do_toupper(*__low);
+	++__low;
+      }
+    return __high;
+  }
+
+  char
+  ctype<char>::do_tolower(char __c) const
+  { return (this->is(ctype_base::upper, __c) ? (__c - 'A' + 'a') : __c); }
+
+  const char*
+  ctype<char>::do_tolower(char* __low, const char* __high) const
+  {
+    while (__low < __high)
+      {
+	*__low = this->do_tolower(*__low);
+	++__low;
+      }
+    return __high;
+  }
+
+_GLIBCXX_END_NAMESPACE_VERSION
+} // namespace
diff --git a/libstdc++-v3/config/os/mint/ctype_inline.h b/libstdc++-v3/config/os/mint/ctype_inline.h
new file mode 100644
index 00000000000..b2d7b9861bf
--- /dev/null
+++ b/libstdc++-v3/config/os/mint/ctype_inline.h
@@ -0,0 +1,75 @@
+// Locale support -*- C++ -*-
+
+// Copyright (C) 2000-2023 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+/** @file bits/ctype_inline.h
+ *  This is an internal header file, included by other library headers.
+ *  Do not attempt to use it directly. @headername{locale}
+ */
+
+//
+// ISO C++ 14882: 22.1  Locales
+//
+
+// ctype bits to be inlined go here. Non-inlinable (ie virtual do_*)
+// functions go in ctype.cc
+
+namespace std _GLIBCXX_VISIBILITY(default)
+{
+_GLIBCXX_BEGIN_NAMESPACE_VERSION
+
+  bool
+  ctype<char>::
+  is(mask __m, char __c) const
+  { return (_M_table[static_cast<unsigned char>(__c) ] & __m); }
+
+
+  const char*
+  ctype<char>::
+  is(const char* __low, const char* __high, mask* __vec) const
+  {
+    while (__low < __high)
+      *__vec++ = _M_table[static_cast<unsigned char>(*__low++)];
+    return __high;
+  }
+
+  const char*
+  ctype<char>::
+  scan_is(mask __m, const char* __low, const char* __high) const
+  {
+    while (__low < __high && !this->is(__m, *__low))
+      ++__low;
+    return __low;
+  }
+
+  const char*
+  ctype<char>::
+  scan_not(mask __m, const char* __low, const char* __high) const
+  {
+    while (__low < __high && this->is(__m, *__low) != 0)
+      ++__low;
+    return __low;
+  }
+
+_GLIBCXX_END_NAMESPACE_VERSION
+} // namespace
diff --git a/libstdc++-v3/config/os/mint/os_defines.h b/libstdc++-v3/config/os/mint/os_defines.h
new file mode 100644
index 00000000000..11d2f9e1c82
--- /dev/null
+++ b/libstdc++-v3/config/os/mint/os_defines.h
@@ -0,0 +1,36 @@
+// Specific definitions for generic platforms  -*- C++ -*-
+
+// Copyright (C) 2000-2017 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// Under Section 7 of GPL version 3, you are granted additional
+// permissions described in the GCC Runtime Library Exception, version
+// 3.1, as published by the Free Software Foundation.
+
+// You should have received a copy of the GNU General Public License and
+// a copy of the GCC Runtime Library Exception along with this program;
+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
+// <http://www.gnu.org/licenses/>.
+
+/** @file bits/os_defines.h
+ *  This is an internal header file, included by other library headers.
+ *  Do not attempt to use it directly. @headername{iosfwd}
+ */
+
+#ifndef _GLIBCXX_OS_DEFINES
+#define _GLIBCXX_OS_DEFINES 1
+
+// System-specific #define, typedefs, corrections, etc, go here.  This
+// file will come before all others.
+
+#endif
diff --git a/libstdc++-v3/configure b/libstdc++-v3/configure
index 64f2552afe5..2d481a14310 100755
--- a/libstdc++-v3/configure
+++ b/libstdc++-v3/configure
@@ -6233,7 +6233,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -6574,6 +6574,12 @@ else
     lt_cv_sys_max_cmd_len=8192;
     ;;
 
+  mint*)
+    # On MiNT this test can take minutes to run, and I'm not sure it's
+    # healthy for this platform. Let's restrict it to 8192.
+    lt_cv_sys_max_cmd_len=8192;
+    ;;
+
   amigaos*)
     # On AmigaOS with pdksh, this test takes hours, literally.
     # So we just punt and use a minimum line length of 8192.
@@ -9890,7 +9896,7 @@ _LT_EOF
       fi
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # _LT_TAGVAR(hardcode_libdir_flag_spec, ) is actually meaningless,
       # as there is no search path for DLLs.
       hardcode_libdir_flag_spec='-L$libdir'
@@ -10327,7 +10333,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
       export_dynamic_flag_spec=-rdynamic
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # When not using gcc, we currently assume that we are using
       # Microsoft Visual C++.
       # hardcode_libdir_flag_spec is actually meaningless, as there is
@@ -11231,14 +11237,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -11262,7 +11268,7 @@ cygwin* | mingw* | pw32* | cegcc*)
 
       sys_lib_search_path_spec="$sys_lib_search_path_spec /usr/lib/w32api"
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -11891,7 +11897,7 @@ else
     lt_cv_dlopen_self=yes
     ;;
 
-  mingw* | pw32* | cegcc*)
+  mingw* | msys* | pw32* | cegcc*)
     lt_cv_dlopen="LoadLibrary"
     lt_cv_dlopen_libs=
     ;;
@@ -12780,7 +12786,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -13139,7 +13145,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
         esac
         ;;
 
-      cygwin* | mingw* | pw32* | cegcc*)
+      cygwin* | mingw* | msys* | pw32* | cegcc*)
         # _LT_TAGVAR(hardcode_libdir_flag_spec, CXX) is actually meaningless,
         # as there is no search path for DLLs.
         hardcode_libdir_flag_spec_CXX='-L$libdir'
@@ -14912,14 +14918,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -14942,7 +14948,7 @@ cygwin* | mingw* | pw32* | cegcc*)
       soname_spec='`echo ${libname} | sed -e 's/^lib/cyg/'``echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
 
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -15545,7 +15551,7 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu
 
 
 case $host in
-  *-cygwin* | *-mingw*)
+  *-cygwin* | *-mingw* | *-msys*)
     # 'host' will be top-level target in the case of a target lib,
     # we must compare to with_cross_host to decide if this is a native
     # or cross-compiler and select where to install dlls appropriately.
@@ -18824,7 +18830,7 @@ $as_echo "$enable_vtable_verify" >&6; }
   vtv_cygmin=no
   if test $enable_vtable_verify = yes; then
     case ${target_os} in
-      cygwin*|mingw32*)
+      cygwin*|mingw*)
         VTV_CXXFLAGS="-fvtable-verify=std -Wl,-lvtv,-u_vtable_map_vars_start,-u_vtable_map_vars_end"
         VTV_CXXLINKFLAGS="-L${toplevel_builddir}/libvtv/.libs -Wl,--rpath -Wl,${toplevel_builddir}/libvtv/.libs"
         vtv_cygmin=yes
@@ -22148,7 +22154,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -28533,7 +28539,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by GCC" >&5
 $as_echo_n "checking for ld used by GCC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -48026,7 +48032,7 @@ $as_echo "#define HAVE_TLS 1" >>confdefs.h
 	;;
     esac
     ;;
-  *-linux* | *-uclinux* | *-gnu* | *-kfreebsd*-gnu | *-cygwin* | *-solaris*)
+  *-linux* | *-uclinux* | *-gnu* | *-kfreebsd*-gnu | *-cygwin* | *-solaris* | *-mint*)
 
   # All these tests are for C++; save the language and the compiler flags.
   # The CXXFLAGS thing is suspicious, but based on similar bits previously
@@ -54469,7 +54475,7 @@ _ACEOF
   fi
 
     ;;
-  *-mingw32*)
+  *-mingw*)
 
   # If we're not using GNU ld, then there's no point in even trying these
   # tests.  Check for that first.  We should have already tested for gld
diff --git a/libstdc++-v3/configure.host b/libstdc++-v3/configure.host
index ec32980aa0d..14a94116113 100644
--- a/libstdc++-v3/configure.host
+++ b/libstdc++-v3/configure.host
@@ -283,6 +283,10 @@ case "${host_os}" in
     esac
     OPT_LDFLAGS="${OPT_LDFLAGS} \$(lt_host_flags)"
     ;;
+  mint*)
+    SECTION_FLAGS="${SECTION_FLAGS} -D_GNU_SOURCE"
+    os_include_dir="os/mint"
+    ;;
   netbsd*)
     os_include_dir="os/bsd/netbsd"
     ;;
diff --git a/libstdc++-v3/crossconfig.m4 b/libstdc++-v3/crossconfig.m4
index ff44d5ae019..db6ebad182e 100644
--- a/libstdc++-v3/crossconfig.m4
+++ b/libstdc++-v3/crossconfig.m4
@@ -183,7 +183,7 @@ case "${host}" in
 	;;
     esac
     ;;
-  *-linux* | *-uclinux* | *-gnu* | *-kfreebsd*-gnu | *-cygwin* | *-solaris*)
+  *-linux* | *-uclinux* | *-gnu* | *-kfreebsd*-gnu | *-cygwin* | *-solaris* | *-mint*)
     GLIBCXX_CHECK_COMPILER_FEATURES
     GLIBCXX_CHECK_LINKER_FEATURES
     GLIBCXX_CHECK_MATH_SUPPORT
@@ -198,7 +198,7 @@ case "${host}" in
     AC_CHECK_FUNCS(uselocale)
     AM_ICONV
     ;;
-  *-mingw32*)
+  *-mingw*)
     GLIBCXX_CHECK_LINKER_FEATURES
     GLIBCXX_CHECK_MATH_SUPPORT
     GLIBCXX_CHECK_STDLIB_SUPPORT
diff --git a/libstdc++-v3/include/bits/basic_string.h b/libstdc++-v3/include/bits/basic_string.h
index e6fa6eb2354..78c887f6079 100644
--- a/libstdc++-v3/include/bits/basic_string.h
+++ b/libstdc++-v3/include/bits/basic_string.h
@@ -6590,13 +6590,13 @@ _GLIBCXX_END_NAMESPACE_CXX11
 
   template<>
     basic_istream<char>&
-    getline(basic_istream<char>& __in, basic_string<char>& __str,
+    getline(basic_istream<char>& ___in, basic_string<char>& __str,
 	    char __delim);
 
 #ifdef _GLIBCXX_USE_WCHAR_T
   template<>
     basic_istream<wchar_t>&
-    getline(basic_istream<wchar_t>& __in, basic_string<wchar_t>& __str,
+    getline(basic_istream<wchar_t>& ___in, basic_string<wchar_t>& __str,
 	    wchar_t __delim);
 #endif  
 
diff --git a/libstdc++-v3/include/bits/basic_string.tcc b/libstdc++-v3/include/bits/basic_string.tcc
index 35b60865f58..b324e2d01dd 100644
--- a/libstdc++-v3/include/bits/basic_string.tcc
+++ b/libstdc++-v3/include/bits/basic_string.tcc
@@ -1482,7 +1482,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
   // 21.3.7.9 basic_string::getline and operators
   template<typename _CharT, typename _Traits, typename _Alloc>
     basic_istream<_CharT, _Traits>&
-    operator>>(basic_istream<_CharT, _Traits>& __in,
+    operator>>(basic_istream<_CharT, _Traits>& ___in,
 	       basic_string<_CharT, _Traits, _Alloc>& __str)
     {
       typedef basic_istream<_CharT, _Traits>		__istream_type;
@@ -1495,7 +1495,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 
       __size_type __extracted = 0;
       typename __ios_base::iostate __err = __ios_base::goodbit;
-      typename __istream_type::sentry __cerb(__in, false);
+      typename __istream_type::sentry __cerb(___in, false);
       if (__cerb)
 	{
 	  __try
@@ -1504,12 +1504,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	      __str.erase();
 	      _CharT __buf[128];
 	      __size_type __len = 0;	      
-	      const streamsize __w = __in.width();
+	      const streamsize __w = ___in.width();
 	      const __size_type __n = __w > 0 ? static_cast<__size_type>(__w)
 		                              : __str.max_size();
-	      const __ctype_type& __ct = use_facet<__ctype_type>(__in.getloc());
+	      const __ctype_type& __ct = use_facet<__ctype_type>(___in.getloc());
 	      const __int_type __eof = _Traits::eof();
-	      __int_type __c = __in.rdbuf()->sgetc();
+	      __int_type __c = ___in.rdbuf()->sgetc();
 
 	      while (__extracted < __n
 		     && !_Traits::eq_int_type(__c, __eof)
@@ -1523,17 +1523,17 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 		    }
 		  __buf[__len++] = _Traits::to_char_type(__c);
 		  ++__extracted;
-		  __c = __in.rdbuf()->snextc();
+		  __c = ___in.rdbuf()->snextc();
 		}
 	      __str.append(__buf, __len);
 
 	      if (__extracted < __n && _Traits::eq_int_type(__c, __eof))
 		__err |= __ios_base::eofbit;
-	      __in.width(0);
+	      ___in.width(0);
 	    }
 	  __catch(__cxxabiv1::__forced_unwind&)
 	    {
-	      __in._M_setstate(__ios_base::badbit);
+	      ___in._M_setstate(__ios_base::badbit);
 	      __throw_exception_again;
 	    }
 	  __catch(...)
@@ -1541,20 +1541,20 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	      // _GLIBCXX_RESOLVE_LIB_DEFECTS
 	      // 91. Description of operator>> and getline() for string<>
 	      // might cause endless loop
-	      __in._M_setstate(__ios_base::badbit);
+	      ___in._M_setstate(__ios_base::badbit);
 	    }
 	}
       // 211.  operator>>(istream&, string&) doesn't set failbit
       if (!__extracted)
 	__err |= __ios_base::failbit;
       if (__err)
-	__in.setstate(__err);
-      return __in;
+	___in.setstate(__err);
+      return ___in;
     }
 
   template<typename _CharT, typename _Traits, typename _Alloc>
     basic_istream<_CharT, _Traits>&
-    getline(basic_istream<_CharT, _Traits>& __in,
+    getline(basic_istream<_CharT, _Traits>& ___in,
 	    basic_string<_CharT, _Traits, _Alloc>& __str, _CharT __delim)
     {
       typedef basic_istream<_CharT, _Traits>		__istream_type;
@@ -1566,7 +1566,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
       __size_type __extracted = 0;
       const __size_type __n = __str.max_size();
       typename __ios_base::iostate __err = __ios_base::goodbit;
-      typename __istream_type::sentry __cerb(__in, true);
+      typename __istream_type::sentry __cerb(___in, true);
       if (__cerb)
 	{
 	  __try
@@ -1574,7 +1574,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	      __str.erase();
 	      const __int_type __idelim = _Traits::to_int_type(__delim);
 	      const __int_type __eof = _Traits::eof();
-	      __int_type __c = __in.rdbuf()->sgetc();
+	      __int_type __c = ___in.rdbuf()->sgetc();
 
 	      while (__extracted < __n
 		     && !_Traits::eq_int_type(__c, __eof)
@@ -1582,7 +1582,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 		{
 		  __str += _Traits::to_char_type(__c);
 		  ++__extracted;
-		  __c = __in.rdbuf()->snextc();
+		  __c = ___in.rdbuf()->snextc();
 		}
 
 	      if (_Traits::eq_int_type(__c, __eof))
@@ -1590,14 +1590,14 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	      else if (_Traits::eq_int_type(__c, __idelim))
 		{
 		  ++__extracted;		  
-		  __in.rdbuf()->sbumpc();
+		  ___in.rdbuf()->sbumpc();
 		}
 	      else
 		__err |= __ios_base::failbit;
 	    }
 	  __catch(__cxxabiv1::__forced_unwind&)
 	    {
-	      __in._M_setstate(__ios_base::badbit);
+	      ___in._M_setstate(__ios_base::badbit);
 	      __throw_exception_again;
 	    }
 	  __catch(...)
@@ -1605,14 +1605,14 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	      // _GLIBCXX_RESOLVE_LIB_DEFECTS
 	      // 91. Description of operator>> and getline() for string<>
 	      // might cause endless loop
-	      __in._M_setstate(__ios_base::badbit);
+	      ___in._M_setstate(__ios_base::badbit);
 	    }
 	}
       if (!__extracted)
 	__err |= __ios_base::failbit;
       if (__err)
-	__in.setstate(__err);
-      return __in;
+	___in.setstate(__err);
+      return ___in;
     }
 
   // Inhibit implicit instantiations for required instantiations,
diff --git a/libstdc++-v3/include/bits/istream.tcc b/libstdc++-v3/include/bits/istream.tcc
index 1b046bec937..cf4d09e650a 100644
--- a/libstdc++-v3/include/bits/istream.tcc
+++ b/libstdc++-v3/include/bits/istream.tcc
@@ -44,21 +44,21 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 
   template<typename _CharT, typename _Traits>
     basic_istream<_CharT, _Traits>::sentry::
-    sentry(basic_istream<_CharT, _Traits>& __in, bool __noskip) : _M_ok(false)
+    sentry(basic_istream<_CharT, _Traits>& ___in, bool __noskip) : _M_ok(false)
     {
       ios_base::iostate __err = ios_base::goodbit;
-      if (__in.good())
+      if (___in.good())
 	__try
 	  {
-	    if (__in.tie())
-	      __in.tie()->flush();
-	    if (!__noskip && bool(__in.flags() & ios_base::skipws))
+	    if (___in.tie())
+	      ___in.tie()->flush();
+	    if (!__noskip && bool(___in.flags() & ios_base::skipws))
 	      {
 		const __int_type __eof = traits_type::eof();
-		__streambuf_type* __sb = __in.rdbuf();
+		__streambuf_type* __sb = ___in.rdbuf();
 		__int_type __c = __sb->sgetc();
 
-		const __ctype_type& __ct = __check_facet(__in._M_ctype);
+		const __ctype_type& __ct = __check_facet(___in._M_ctype);
 		while (!traits_type::eq_int_type(__c, __eof)
 		       && __ct.is(ctype_base::space,
 				  traits_type::to_char_type(__c)))
@@ -73,18 +73,18 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	  }
 	__catch(__cxxabiv1::__forced_unwind&)
 	  {
-	    __in._M_setstate(ios_base::badbit);
+	    ___in._M_setstate(ios_base::badbit);
 	    __throw_exception_again;
 	  }
 	__catch(...)
-	  { __in._M_setstate(ios_base::badbit); }
+	  { ___in._M_setstate(ios_base::badbit); }
 
-      if (__in.good() && __err == ios_base::goodbit)
+      if (___in.good() && __err == ios_base::goodbit)
 	_M_ok = true;
       else
 	{
 	  __err |= ios_base::failbit;
-	  __in.setstate(__err);
+	  ___in.setstate(__err);
 	}
     }
 
@@ -955,18 +955,18 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
   // 27.6.1.2.3 Character extraction templates
   template<typename _CharT, typename _Traits>
     basic_istream<_CharT, _Traits>&
-    operator>>(basic_istream<_CharT, _Traits>& __in, _CharT& __c)
+    operator>>(basic_istream<_CharT, _Traits>& ___in, _CharT& __c)
     {
       typedef basic_istream<_CharT, _Traits>		__istream_type;
       typedef typename __istream_type::int_type         __int_type;
 
-      typename __istream_type::sentry __cerb(__in, false);
+      typename __istream_type::sentry __cerb(___in, false);
       if (__cerb)
 	{
 	  ios_base::iostate __err = ios_base::goodbit;
 	  __try
 	    {
-	      const __int_type __cb = __in.rdbuf()->sbumpc();
+	      const __int_type __cb = ___in.rdbuf()->sbumpc();
 	      if (!_Traits::eq_int_type(__cb, _Traits::eof()))
 		__c = _Traits::to_char_type(__cb);
 	      else
@@ -974,20 +974,20 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	    }
 	  __catch(__cxxabiv1::__forced_unwind&)
 	    {
-	      __in._M_setstate(ios_base::badbit);
+	      ___in._M_setstate(ios_base::badbit);
 	      __throw_exception_again;
 	    }
 	  __catch(...)
-	    { __in._M_setstate(ios_base::badbit); }
+	    { ___in._M_setstate(ios_base::badbit); }
 	  if (__err)
-	    __in.setstate(__err);
+	    ___in.setstate(__err);
 	}
-      return __in;
+      return ___in;
     }
 
   template<typename _CharT, typename _Traits>
     void
-    __istream_extract(basic_istream<_CharT, _Traits>& __in, _CharT* __s,
+    __istream_extract(basic_istream<_CharT, _Traits>& ___in, _CharT* __s,
 		      streamsize __num)
     {
       typedef basic_istream<_CharT, _Traits>		__istream_type;
@@ -998,20 +998,20 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 
       streamsize __extracted = 0;
       ios_base::iostate __err = ios_base::goodbit;
-      typename __istream_type::sentry __cerb(__in, false);
+      typename __istream_type::sentry __cerb(___in, false);
       if (__cerb)
 	{
 	  __try
 	    {
 	      // Figure out how many characters to extract.
-	      streamsize __width = __in.width();
+	      streamsize __width = ___in.width();
 	      if (0 < __width && __width < __num)
 		__num = __width;
 
-	      const __ctype_type& __ct = use_facet<__ctype_type>(__in.getloc());
+	      const __ctype_type& __ct = use_facet<__ctype_type>(___in.getloc());
 
 	      const int_type __eof = _Traits::eof();
-	      __streambuf_type* __sb = __in.rdbuf();
+	      __streambuf_type* __sb = ___in.rdbuf();
 	      int_type __c = __sb->sgetc();
 
 	      while (__extracted < __num - 1
@@ -1031,35 +1031,35 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	      // _GLIBCXX_RESOLVE_LIB_DEFECTS
 	      // 68.  Extractors for char* should store null at end
 	      *__s = char_type();
-	      __in.width(0);
+	      ___in.width(0);
 	    }
 	  __catch(__cxxabiv1::__forced_unwind&)
 	    {
-	      __in._M_setstate(ios_base::badbit);
+	      ___in._M_setstate(ios_base::badbit);
 	      __throw_exception_again;
 	    }
 	  __catch(...)
-	    { __in._M_setstate(ios_base::badbit); }
+	    { ___in._M_setstate(ios_base::badbit); }
 	}
       if (!__extracted)
 	__err |= ios_base::failbit;
       if (__err)
-	__in.setstate(__err);
+	___in.setstate(__err);
     }
 
   // 27.6.1.4 Standard basic_istream manipulators
   template<typename _CharT, typename _Traits>
     basic_istream<_CharT, _Traits>&
-    ws(basic_istream<_CharT, _Traits>& __in)
+    ws(basic_istream<_CharT, _Traits>& ___in)
     {
       typedef basic_istream<_CharT, _Traits>		__istream_type;
       typedef basic_streambuf<_CharT, _Traits>          __streambuf_type;
       typedef typename __istream_type::int_type		__int_type;
       typedef ctype<_CharT>				__ctype_type;
 
-      const __ctype_type& __ct = use_facet<__ctype_type>(__in.getloc());
+      const __ctype_type& __ct = use_facet<__ctype_type>(___in.getloc());
       const __int_type __eof = _Traits::eof();
-      __streambuf_type* __sb = __in.rdbuf();
+      __streambuf_type* __sb = ___in.rdbuf();
       __int_type __c = __sb->sgetc();
 
       while (!_Traits::eq_int_type(__c, __eof)
@@ -1067,8 +1067,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	__c = __sb->snextc();
 
        if (_Traits::eq_int_type(__c, __eof))
-	 __in.setstate(ios_base::eofbit);
-      return __in;
+	 ___in.setstate(ios_base::eofbit);
+      return ___in;
     }
 
   // Inhibit implicit instantiations for required instantiations,
diff --git a/libstdc++-v3/include/bits/locale_conv.h b/libstdc++-v3/include/bits/locale_conv.h
index 0e409da9876..bddc8270a7b 100644
--- a/libstdc++-v3/include/bits/locale_conv.h
+++ b/libstdc++-v3/include/bits/locale_conv.h
@@ -315,10 +315,10 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11
       {
 	if (!_M_with_cvtstate)
 	  _M_state = state_type();
-	wide_string __out{ _M_wide_err_string.get_allocator() };
-	if (__str_codecvt_in(__first, __last, __out, *_M_cvt, _M_state,
+	wide_string ___out{ _M_wide_err_string.get_allocator() };
+	if (__str_codecvt_in(__first, __last, ___out, *_M_cvt, _M_state,
 			     _M_count))
-	  return __out;
+	  return ___out;
 	if (_M_with_strings)
 	  return _M_wide_err_string;
 	__throw_range_error("wstring_convert::from_bytes");
@@ -351,10 +351,10 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11
       {
 	if (!_M_with_cvtstate)
 	  _M_state = state_type();
-	byte_string __out{ _M_byte_err_string.get_allocator() };
-	if (__str_codecvt_out(__first, __last, __out, *_M_cvt, _M_state,
+	byte_string ___out{ _M_byte_err_string.get_allocator() };
+	if (__str_codecvt_out(__first, __last, ___out, *_M_cvt, _M_state,
 			      _M_count))
-	  return __out;
+	  return ___out;
 	if (_M_with_strings)
 	  return _M_byte_err_string;
 	__throw_range_error("wstring_convert::to_bytes");
@@ -447,13 +447,13 @@ _GLIBCXX_END_NAMESPACE_CXX11
       { return _M_buf && _M_conv_put() && !_M_buf->pubsync() ? 0 : -1; }
 
       typename _Wide_streambuf::int_type
-      overflow(typename _Wide_streambuf::int_type __out)
+      overflow(typename _Wide_streambuf::int_type ___out)
       {
 	if (!_M_buf || !_M_conv_put())
 	  return _Tr::eof();
-	else if (!_Tr::eq_int_type(__out, _Tr::eof()))
-	  return this->sputc(__out);
-	return _Tr::not_eof(__out);
+	else if (!_Tr::eq_int_type(___out, _Tr::eof()))
+	  return this->sputc(___out);
+	return _Tr::not_eof(___out);
       }
 
       typename _Wide_streambuf::int_type
diff --git a/libstdc++-v3/include/bits/locale_facets.h b/libstdc++-v3/include/bits/locale_facets.h
index 03724cf7d68..40570966723 100644
--- a/libstdc++-v3/include/bits/locale_facets.h
+++ b/libstdc++-v3/include/bits/locale_facets.h
@@ -1991,7 +1991,7 @@ _GLIBCXX_BEGIN_NAMESPACE_LDBL
        *  except if the value is 1, sets @a v to true, if the value is 0, sets
        *  @a v to false, and otherwise set err to ios_base::failbit.
        *
-       *  @param  __in  Start of input stream.
+       *  @param  ___in  Start of input stream.
        *  @param  __end  End of input stream.
        *  @param  __io  Source of locale and flags.
        *  @param  __err  Error flags to set.
@@ -1999,9 +1999,9 @@ _GLIBCXX_BEGIN_NAMESPACE_LDBL
        *  @return  Iterator after reading.
       */
       iter_type
-      get(iter_type __in, iter_type __end, ios_base& __io,
+      get(iter_type ___in, iter_type __end, ios_base& __io,
 	  ios_base::iostate& __err, bool& __v) const
-      { return this->do_get(__in, __end, __io, __err, __v); }
+      { return this->do_get(___in, __end, __io, __err, __v); }
 
       ///@{
       /**
@@ -2028,7 +2028,7 @@ _GLIBCXX_BEGIN_NAMESPACE_LDBL
        *  Otherwise, sets err to ios_base::failbit and leaves @a v unaltered.
        *  Sets err to ios_base::eofbit if the stream is emptied.
        *
-       *  @param  __in  Start of input stream.
+       *  @param  ___in  Start of input stream.
        *  @param  __end  End of input stream.
        *  @param  __io  Source of locale and flags.
        *  @param  __err  Error flags to set.
@@ -2036,35 +2036,35 @@ _GLIBCXX_BEGIN_NAMESPACE_LDBL
        *  @return  Iterator after reading.
       */
       iter_type
-      get(iter_type __in, iter_type __end, ios_base& __io,
+      get(iter_type ___in, iter_type __end, ios_base& __io,
 	  ios_base::iostate& __err, long& __v) const
-      { return this->do_get(__in, __end, __io, __err, __v); }
+      { return this->do_get(___in, __end, __io, __err, __v); }
 
       iter_type
-      get(iter_type __in, iter_type __end, ios_base& __io,
+      get(iter_type ___in, iter_type __end, ios_base& __io,
 	  ios_base::iostate& __err, unsigned short& __v) const
-      { return this->do_get(__in, __end, __io, __err, __v); }
+      { return this->do_get(___in, __end, __io, __err, __v); }
 
       iter_type
-      get(iter_type __in, iter_type __end, ios_base& __io,
+      get(iter_type ___in, iter_type __end, ios_base& __io,
 	  ios_base::iostate& __err, unsigned int& __v)   const
-      { return this->do_get(__in, __end, __io, __err, __v); }
+      { return this->do_get(___in, __end, __io, __err, __v); }
 
       iter_type
-      get(iter_type __in, iter_type __end, ios_base& __io,
+      get(iter_type ___in, iter_type __end, ios_base& __io,
 	  ios_base::iostate& __err, unsigned long& __v)  const
-      { return this->do_get(__in, __end, __io, __err, __v); }
+      { return this->do_get(___in, __end, __io, __err, __v); }
 
 #ifdef _GLIBCXX_USE_LONG_LONG
       iter_type
-      get(iter_type __in, iter_type __end, ios_base& __io,
+      get(iter_type ___in, iter_type __end, ios_base& __io,
 	  ios_base::iostate& __err, long long& __v) const
-      { return this->do_get(__in, __end, __io, __err, __v); }
+      { return this->do_get(___in, __end, __io, __err, __v); }
 
       iter_type
-      get(iter_type __in, iter_type __end, ios_base& __io,
+      get(iter_type ___in, iter_type __end, ios_base& __io,
 	  ios_base::iostate& __err, unsigned long long& __v)  const
-      { return this->do_get(__in, __end, __io, __err, __v); }
+      { return this->do_get(___in, __end, __io, __err, __v); }
 #endif
       ///@}
 
@@ -2088,7 +2088,7 @@ _GLIBCXX_BEGIN_NAMESPACE_LDBL
        *  Otherwise, sets err to ios_base::failbit and leaves @a v unaltered.
        *  Sets err to ios_base::eofbit if the stream is emptied.
        *
-       *  @param  __in  Start of input stream.
+       *  @param  ___in  Start of input stream.
        *  @param  __end  End of input stream.
        *  @param  __io  Source of locale and flags.
        *  @param  __err  Error flags to set.
@@ -2096,19 +2096,19 @@ _GLIBCXX_BEGIN_NAMESPACE_LDBL
        *  @return  Iterator after reading.
       */
       iter_type
-      get(iter_type __in, iter_type __end, ios_base& __io,
+      get(iter_type ___in, iter_type __end, ios_base& __io,
 	  ios_base::iostate& __err, float& __v) const
-      { return this->do_get(__in, __end, __io, __err, __v); }
+      { return this->do_get(___in, __end, __io, __err, __v); }
 
       iter_type
-      get(iter_type __in, iter_type __end, ios_base& __io,
+      get(iter_type ___in, iter_type __end, ios_base& __io,
 	  ios_base::iostate& __err, double& __v) const
-      { return this->do_get(__in, __end, __io, __err, __v); }
+      { return this->do_get(___in, __end, __io, __err, __v); }
 
       iter_type
-      get(iter_type __in, iter_type __end, ios_base& __io,
+      get(iter_type ___in, iter_type __end, ios_base& __io,
 	  ios_base::iostate& __err, long double& __v) const
-      { return this->do_get(__in, __end, __io, __err, __v); }
+      { return this->do_get(___in, __end, __io, __err, __v); }
       ///@}
 
       /**
@@ -2131,7 +2131,7 @@ _GLIBCXX_BEGIN_NAMESPACE_LDBL
        *  Otherwise, sets err to ios_base::failbit and leaves @a v unaltered.
        *  Sets err to ios_base::eofbit if the stream is emptied.
        *
-       *  @param  __in  Start of input stream.
+       *  @param  ___in  Start of input stream.
        *  @param  __end  End of input stream.
        *  @param  __io  Source of locale and flags.
        *  @param  __err  Error flags to set.
@@ -2139,9 +2139,9 @@ _GLIBCXX_BEGIN_NAMESPACE_LDBL
        *  @return  Iterator after reading.
       */
       iter_type
-      get(iter_type __in, iter_type __end, ios_base& __io,
+      get(iter_type ___in, iter_type __end, ios_base& __io,
 	  ios_base::iostate& __err, void*& __v) const
-      { return this->do_get(__in, __end, __io, __err, __v); }
+      { return this->do_get(___in, __end, __io, __err, __v); }
 
     protected:
       /// Destructor.
diff --git a/libstdc++-v3/include/bits/ostream.tcc b/libstdc++-v3/include/bits/ostream.tcc
index 76ca28561c1..994f25e63b2 100644
--- a/libstdc++-v3/include/bits/ostream.tcc
+++ b/libstdc++-v3/include/bits/ostream.tcc
@@ -318,10 +318,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 
   template<typename _CharT, typename _Traits>
     basic_ostream<_CharT, _Traits>&
-    operator<<(basic_ostream<_CharT, _Traits>& __out, const char* __s)
+    operator<<(basic_ostream<_CharT, _Traits>& ___out, const char* __s)
     {
       if (!__s)
-	__out.setstate(ios_base::badbit);
+	___out.setstate(ios_base::badbit);
       else
 	{
 	  // _GLIBCXX_RESOLVE_LIB_DEFECTS
@@ -339,18 +339,18 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 
 	      _CharT *__ws = __pg.__get();
 	      for (size_t  __i = 0; __i < __clen; ++__i)
-		__ws[__i] = __out.widen(__s[__i]);
-	      __ostream_insert(__out, __ws, __clen);
+		__ws[__i] = ___out.widen(__s[__i]);
+	      __ostream_insert(___out, __ws, __clen);
 	    }
 	  __catch(__cxxabiv1::__forced_unwind&)
 	    {
-	      __out._M_setstate(ios_base::badbit);
+	      ___out._M_setstate(ios_base::badbit);
 	      __throw_exception_again;
 	    }
 	  __catch(...)
-	    { __out._M_setstate(ios_base::badbit); }
+	    { ___out._M_setstate(ios_base::badbit); }
 	}
-      return __out;
+      return ___out;
     }
 
   // Inhibit implicit instantiations for required instantiations,
diff --git a/libstdc++-v3/include/bits/ostream_insert.h b/libstdc++-v3/include/bits/ostream_insert.h
index 72eea8b1d05..08451da9c9d 100644
--- a/libstdc++-v3/include/bits/ostream_insert.h
+++ b/libstdc++-v3/include/bits/ostream_insert.h
@@ -42,31 +42,31 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 
   template<typename _CharT, typename _Traits>
     inline void
-    __ostream_write(basic_ostream<_CharT, _Traits>& __out,
+    __ostream_write(basic_ostream<_CharT, _Traits>& ___out,
 		    const _CharT* __s, streamsize __n)
     {
       typedef basic_ostream<_CharT, _Traits>       __ostream_type;      
       typedef typename __ostream_type::ios_base    __ios_base;
 
-      const streamsize __put = __out.rdbuf()->sputn(__s, __n);
+      const streamsize __put = ___out.rdbuf()->sputn(__s, __n);
       if (__put != __n)
-	__out.setstate(__ios_base::badbit);
+	___out.setstate(__ios_base::badbit);
     }
 
   template<typename _CharT, typename _Traits>
     inline void
-    __ostream_fill(basic_ostream<_CharT, _Traits>& __out, streamsize __n)
+    __ostream_fill(basic_ostream<_CharT, _Traits>& ___out, streamsize __n)
     {
       typedef basic_ostream<_CharT, _Traits>       __ostream_type;      
       typedef typename __ostream_type::ios_base    __ios_base;
 
-      const _CharT __c = __out.fill();
+      const _CharT __c = ___out.fill();
       for (; __n > 0; --__n)
 	{
-	  const typename _Traits::int_type __put = __out.rdbuf()->sputc(__c);
+	  const typename _Traits::int_type __put = ___out.rdbuf()->sputc(__c);
 	  if (_Traits::eq_int_type(__put, _Traits::eof()))
 	    {
-	      __out.setstate(__ios_base::badbit);
+	      ___out.setstate(__ios_base::badbit);
 	      break;
 	    }
 	}
@@ -74,43 +74,43 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 
   template<typename _CharT, typename _Traits>
     basic_ostream<_CharT, _Traits>&
-    __ostream_insert(basic_ostream<_CharT, _Traits>& __out,
+    __ostream_insert(basic_ostream<_CharT, _Traits>& ___out,
 		     const _CharT* __s, streamsize __n)
     {
       typedef basic_ostream<_CharT, _Traits>       __ostream_type;
       typedef typename __ostream_type::ios_base    __ios_base;
 
-      typename __ostream_type::sentry __cerb(__out);
+      typename __ostream_type::sentry __cerb(___out);
       if (__cerb)
 	{
 	  __try
 	    {
-	      const streamsize __w = __out.width();
+	      const streamsize __w = ___out.width();
 	      if (__w > __n)
 		{
-		  const bool __left = ((__out.flags()
+		  const bool __left = ((___out.flags()
 					& __ios_base::adjustfield)
 				       == __ios_base::left);
 		  if (!__left)
-		    __ostream_fill(__out, __w - __n);
-		  if (__out.good())
-		    __ostream_write(__out, __s, __n);
-		  if (__left && __out.good())
-		    __ostream_fill(__out, __w - __n);
+		    __ostream_fill(___out, __w - __n);
+		  if (___out.good())
+		    __ostream_write(___out, __s, __n);
+		  if (__left && ___out.good())
+		    __ostream_fill(___out, __w - __n);
 		}
 	      else
-		__ostream_write(__out, __s, __n);
-	      __out.width(0);
+		__ostream_write(___out, __s, __n);
+	      ___out.width(0);
 	    }
 	  __catch(__cxxabiv1::__forced_unwind&)
 	    {
-	      __out._M_setstate(__ios_base::badbit);
+	      ___out._M_setstate(__ios_base::badbit);
 	      __throw_exception_again;
 	    }
 	  __catch(...)
-	    { __out._M_setstate(__ios_base::badbit); }
+	    { ___out._M_setstate(__ios_base::badbit); }
 	}
-      return __out;
+      return ___out;
     }
 
   // Inhibit implicit instantiations for required instantiations,
diff --git a/libstdc++-v3/include/bits/ranges_algo.h b/libstdc++-v3/include/bits/ranges_algo.h
index 8462521c369..adf476015e2 100644
--- a/libstdc++-v3/include/bits/ranges_algo.h
+++ b/libstdc++-v3/include/bits/ranges_algo.h
@@ -1546,7 +1546,7 @@ namespace ranges
 	&& indirectly_copyable<_Iter, _Out>
 	&& uniform_random_bit_generator<remove_reference_t<_Gen>>
       _Out
-      operator()(_Iter __first, _Sent __last, _Out __out,
+      operator()(_Iter __first, _Sent __last, _Out ___out,
 		 iter_difference_t<_Iter> __n, _Gen&& __g) const
       {
 	if constexpr (forward_iterator<_Iter>)
@@ -1555,7 +1555,7 @@ namespace ranges
 	    // which may take linear time.
 	    auto __lasti = ranges::next(__first, __last);
 	    return _GLIBCXX_STD_A::
-	      sample(std::move(__first), std::move(__lasti), std::move(__out),
+	      sample(std::move(__first), std::move(__lasti), std::move(___out),
 		     __n, std::forward<_Gen>(__g));
 	  }
 	else
@@ -1567,7 +1567,7 @@ namespace ranges
 	    iter_difference_t<_Iter> __sample_sz = 0;
 	    while (__first != __last && __sample_sz != __n)
 	      {
-		__out[__sample_sz++] = *__first;
+		___out[__sample_sz++] = *__first;
 		++__first;
 	      }
 	    for (auto __pop_sz = __sample_sz; __first != __last;
@@ -1575,9 +1575,9 @@ namespace ranges
 	      {
 		const auto __k = __d(__g, __param_type{0, __pop_sz});
 		if (__k < __n)
-		  __out[__k] = *__first;
+		  ___out[__k] = *__first;
 	      }
-	    return __out + __sample_sz;
+	    return ___out + __sample_sz;
 	  }
       }
 
@@ -1586,11 +1586,11 @@ namespace ranges
 	&& indirectly_copyable<iterator_t<_Range>, _Out>
 	&& uniform_random_bit_generator<remove_reference_t<_Gen>>
       _Out
-      operator()(_Range&& __r, _Out __out,
+      operator()(_Range&& __r, _Out ___out,
 		 range_difference_t<_Range> __n, _Gen&& __g) const
       {
 	return (*this)(ranges::begin(__r), ranges::end(__r),
-		       std::move(__out), __n,
+		       std::move(___out), __n,
 		       std::forward<_Gen>(__g));
       }
   };
@@ -1967,11 +1967,11 @@ namespace ranges
 				      projected<iterator_t<_Range2>, _Proj2>>
       constexpr partial_sort_copy_result<borrowed_iterator_t<_Range1>,
 					 borrowed_iterator_t<_Range2>>
-      operator()(_Range1&& __r, _Range2&& __out, _Comp __comp = {},
+      operator()(_Range1&& __r, _Range2&& ___out, _Comp __comp = {},
 		 _Proj1 __proj1 = {}, _Proj2 __proj2 = {}) const
       {
 	return (*this)(ranges::begin(__r), ranges::end(__r),
-		       ranges::begin(__out), ranges::end(__out),
+		       ranges::begin(___out), ranges::end(___out),
 		       std::move(__comp),
 		       std::move(__proj1), std::move(__proj2));
       }
diff --git a/libstdc++-v3/include/bits/ranges_algobase.h b/libstdc++-v3/include/bits/ranges_algobase.h
index 08f536f4fce..dbfcc3c6ce2 100644
--- a/libstdc++-v3/include/bits/ranges_algobase.h
+++ b/libstdc++-v3/include/bits/ranges_algobase.h
@@ -218,34 +218,34 @@ namespace ranges
       using __detail::__is_normal_iterator;
       if constexpr (__is_move_iterator<_Iter> && same_as<_Iter, _Sent>)
 	{
-	  auto [__in, __out]
+	  auto [___in, ____out]
 	    = ranges::__copy_or_move<true>(std::move(__first).base(),
 					   std::move(__last).base(),
 					   std::move(__result));
-	  return {move_iterator{std::move(__in)}, std::move(__out)};
+	  return {move_iterator{std::move(___in)}, std::move(___out)};
 	}
       else if constexpr (__is_reverse_iterator<_Iter> && same_as<_Iter, _Sent>
 			 && __is_reverse_iterator<_Out>)
 	{
-	  auto [__in,__out]
+	  auto [___in,___out]
 	    = ranges::__copy_or_move_backward<_IsMove>(std::move(__last).base(),
 						       std::move(__first).base(),
 						       std::move(__result).base());
-	  return {reverse_iterator{std::move(__in)},
-		  reverse_iterator{std::move(__out)}};
+	  return {reverse_iterator{std::move(___in)},
+		  reverse_iterator{std::move(___out)}};
 	}
       else if constexpr (__is_normal_iterator<_Iter> && same_as<_Iter, _Sent>)
 	{
-	  auto [__in,__out]
+	  auto [___in,___out]
 	    = ranges::__copy_or_move<_IsMove>(__first.base(), __last.base(),
 					      std::move(__result));
-	  return {decltype(__first){__in}, std::move(__out)};
+	  return {decltype(__first){___in}, std::move(___out)};
 	}
       else if constexpr (__is_normal_iterator<_Out>)
 	{
-	  auto [__in,__out]
+	  auto [___in,___out]
 	    = ranges::__copy_or_move<_IsMove>(std::move(__first), __last, __result.base());
-	  return {std::move(__in), decltype(__result){__out}};
+	  return {std::move(___in), decltype(__result){___out}};
 	}
       else if constexpr (sized_sentinel_for<_Sent, _Iter>)
 	{
@@ -361,28 +361,28 @@ namespace ranges
       if constexpr (__is_reverse_iterator<_Iter> && same_as<_Iter, _Sent>
 		    && __is_reverse_iterator<_Out>)
 	{
-	  auto [__in,__out]
+	  auto [___in,___out]
 	    = ranges::__copy_or_move<_IsMove>(std::move(__last).base(),
 					      std::move(__first).base(),
 					      std::move(__result).base());
-	  return {reverse_iterator{std::move(__in)},
-		  reverse_iterator{std::move(__out)}};
+	  return {reverse_iterator{std::move(___in)},
+		  reverse_iterator{std::move(___out)}};
 	}
       else if constexpr (__is_normal_iterator<_Iter> && same_as<_Iter, _Sent>)
 	{
-	  auto [__in,__out]
+	  auto [___in,___out]
 	    = ranges::__copy_or_move_backward<_IsMove>(__first.base(),
 						       __last.base(),
 						       std::move(__result));
-	  return {decltype(__first){__in}, std::move(__out)};
+	  return {decltype(__first){___in}, std::move(___out)};
 	}
       else if constexpr (__is_normal_iterator<_Out>)
 	{
-	  auto [__in,__out]
+	  auto [___in,___out]
 	    = ranges::__copy_or_move_backward<_IsMove>(std::move(__first),
 						       std::move(__last),
 						       __result.base());
-	  return {std::move(__in), decltype(__result){__out}};
+	  return {std::move(___in), decltype(__result){___out}};
 	}
       else if constexpr (sized_sentinel_for<_Sent, _Iter>)
 	{
diff --git a/libstdc++-v3/include/bits/ranges_uninitialized.h b/libstdc++-v3/include/bits/ranges_uninitialized.h
index 40664ea7a04..ef27f2e036f 100644
--- a/libstdc++-v3/include/bits/ranges_uninitialized.h
+++ b/libstdc++-v3/include/bits/ranges_uninitialized.h
@@ -361,10 +361,10 @@ namespace ranges
 	  {
 	    auto __d1 = __ilast - __ifirst;
 	    auto __d2 = __olast - __ofirst;
-	    auto [__in, __out]
+	    auto [___in, ___out]
 	      = ranges::copy_n(std::make_move_iterator(std::move(__ifirst)),
 			       std::min(__d1, __d2), __ofirst);
-	    return {std::move(__in).base(), __out};
+	    return {std::move(___in).base(), ___out};
 	  }
 	else
 	  {
@@ -412,10 +412,10 @@ namespace ranges
 						 iter_rvalue_reference_t<_Iter>>)
 	  {
 	    auto __d = __olast - __ofirst;
-	    auto [__in, __out]
+	    auto [___in, ___out]
 	      = ranges::copy_n(std::make_move_iterator(std::move(__ifirst)),
 			       std::min(__n, __d), __ofirst);
-	    return {std::move(__in).base(), __out};
+	    return {std::move(___in).base(), ___out};
 	  }
 	else
 	  {
diff --git a/libstdc++-v3/include/bits/regex.h b/libstdc++-v3/include/bits/regex.h
index 314849a6bff..528b6124079 100644
--- a/libstdc++-v3/include/bits/regex.h
+++ b/libstdc++-v3/include/bits/regex.h
@@ -1970,7 +1970,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11
        */
       template<typename _Out_iter>
 	_Out_iter
-	format(_Out_iter __out, const char_type* __fmt_first,
+	format(_Out_iter ___out, const char_type* __fmt_first,
 	       const char_type* __fmt_last,
 	       match_flag_type __flags = regex_constants::format_default) const;
 
@@ -1979,10 +1979,10 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11
        */
       template<typename _Out_iter, typename _St, typename _Sa>
 	_Out_iter
-	format(_Out_iter __out, const basic_string<char_type, _St, _Sa>& __fmt,
+	format(_Out_iter ___out, const basic_string<char_type, _St, _Sa>& __fmt,
 	       match_flag_type __flags = regex_constants::format_default) const
 	{
-	  return format(__out, __fmt.data(), __fmt.data() + __fmt.size(),
+	  return format(___out, __fmt.data(), __fmt.data() + __fmt.size(),
 			__flags);
 	}
 
@@ -2485,7 +2485,7 @@ _GLIBCXX_END_NAMESPACE_CXX11
   template<typename _Out_iter, typename _Bi_iter,
 	   typename _Rx_traits, typename _Ch_type>
     _Out_iter
-    __regex_replace(_Out_iter __out, _Bi_iter __first, _Bi_iter __last,
+    __regex_replace(_Out_iter ___out, _Bi_iter __first, _Bi_iter __last,
 		    const basic_regex<_Ch_type, _Rx_traits>& __e,
 		    const _Ch_type* __fmt, size_t __len,
 		    regex_constants::match_flag_type __flags);
@@ -2493,53 +2493,53 @@ _GLIBCXX_END_NAMESPACE_CXX11
   /**
    * @brief Search for a regular expression within a range for multiple times,
    and replace the matched parts through filling a format string.
-   * @param __out   [OUT] The output iterator.
+   * @param ___out   [OUT] The output iterator.
    * @param __first [IN]  The start of the string to search.
    * @param __last  [IN]  One-past-the-end of the string to search.
    * @param __e     [IN]  The regular expression to search for.
    * @param __fmt   [IN]  The format string.
    * @param __flags [IN]  Search and replace policy flags.
    *
-   * @returns __out
+   * @returns ___out
    * @throws an exception of type regex_error.
    */
   template<typename _Out_iter, typename _Bi_iter,
 	   typename _Rx_traits, typename _Ch_type,
 	   typename _St, typename _Sa>
     inline _Out_iter
-    regex_replace(_Out_iter __out, _Bi_iter __first, _Bi_iter __last,
+    regex_replace(_Out_iter ___out, _Bi_iter __first, _Bi_iter __last,
 		  const basic_regex<_Ch_type, _Rx_traits>& __e,
 		  const basic_string<_Ch_type, _St, _Sa>& __fmt,
 		  regex_constants::match_flag_type __flags
 		  = regex_constants::match_default)
     {
-      return std::__regex_replace(__out, __first, __last, __e, __fmt.c_str(),
+      return std::__regex_replace(___out, __first, __last, __e, __fmt.c_str(),
 				  __fmt.length(), __flags);
     }
 
   /**
    * @brief Search for a regular expression within a range for multiple times,
    and replace the matched parts through filling a format C-string.
-   * @param __out   [OUT] The output iterator.
+   * @param ___out   [OUT] The output iterator.
    * @param __first [IN]  The start of the string to search.
    * @param __last  [IN]  One-past-the-end of the string to search.
    * @param __e     [IN]  The regular expression to search for.
    * @param __fmt   [IN]  The format C-string.
    * @param __flags [IN]  Search and replace policy flags.
    *
-   * @returns __out
+   * @returns ___out
    * @throws an exception of type regex_error.
    */
   template<typename _Out_iter, typename _Bi_iter,
 	   typename _Rx_traits, typename _Ch_type>
     _Out_iter
-    regex_replace(_Out_iter __out, _Bi_iter __first, _Bi_iter __last,
+    regex_replace(_Out_iter ___out, _Bi_iter __first, _Bi_iter __last,
 		  const basic_regex<_Ch_type, _Rx_traits>& __e,
 		  const _Ch_type* __fmt,
 		  regex_constants::match_flag_type __flags
 		  = regex_constants::match_default)
     {
-      return std::__regex_replace(__out, __first, __last, __e, __fmt,
+      return std::__regex_replace(___out, __first, __last, __e, __fmt,
 				  char_traits<_Ch_type>::length(__fmt),
 				  __flags);
     }
diff --git a/libstdc++-v3/include/bits/regex.tcc b/libstdc++-v3/include/bits/regex.tcc
index ef152851e55..dcf3716539b 100644
--- a/libstdc++-v3/include/bits/regex.tcc
+++ b/libstdc++-v3/include/bits/regex.tcc
@@ -352,7 +352,7 @@ namespace __detail
   template<typename _Out_iter>
     _Out_iter
     match_results<_Bi_iter, _Alloc>::
-    format(_Out_iter __out,
+    format(_Out_iter ___out,
 	   const match_results<_Bi_iter, _Alloc>::char_type* __fmt_first,
 	   const match_results<_Bi_iter, _Alloc>::char_type* __fmt_last,
 	   match_flag_type __flags) const
@@ -367,7 +367,7 @@ namespace __detail
 	{
 	  auto& __sub = (*this)[__idx];
 	  if (__sub.matched)
-	    __out = std::copy(__sub.first, __sub.second, __out);
+	    ___out = std::copy(__sub.first, __sub.second, ___out);
 	};
 
       if (__flags & regex_constants::format_sed)
@@ -381,7 +381,7 @@ namespace __detail
 		  if (__fctyp.is(__ctype_type::digit, *__fmt_first))
 		    __output(__traits.value(*__fmt_first, 10));
 		  else
-		    *__out++ = *__fmt_first;
+		    *___out++ = *__fmt_first;
 		  continue;
 		}
 	      if (*__fmt_first == '\\')
@@ -394,10 +394,10 @@ namespace __detail
 		  __output(0);
 		  continue;
 		}
-	      *__out++ = *__fmt_first;
+	      *___out++ = *__fmt_first;
 	    }
 	  if (__escaping)
-	    *__out++ = '\\';
+	    *___out++ = '\\';
 	}
       else
 	{
@@ -407,7 +407,7 @@ namespace __detail
 	      if (__next == __fmt_last)
 		break;
 
-	      __out = std::copy(__fmt_first, __next, __out);
+	      ___out = std::copy(__fmt_first, __next, ___out);
 
 	      auto __eat = [&](char __ch) -> bool
 		{
@@ -420,22 +420,22 @@ namespace __detail
 		};
 
 	      if (++__next == __fmt_last)
-		*__out++ = '$';
+		*___out++ = '$';
 	      else if (__eat('$'))
-		*__out++ = '$';
+		*___out++ = '$';
 	      else if (__eat('&'))
 		__output(0);
 	      else if (__eat('`'))
 		{
 		  auto& __sub = _M_prefix();
 		  if (__sub.matched)
-		    __out = std::copy(__sub.first, __sub.second, __out);
+		    ___out = std::copy(__sub.first, __sub.second, ___out);
 		}
 	      else if (__eat('\''))
 		{
 		  auto& __sub = _M_suffix();
 		  if (__sub.matched)
-		    __out = std::copy(__sub.first, __sub.second, __out);
+		    ___out = std::copy(__sub.first, __sub.second, ___out);
 		}
 	      else if (__fctyp.is(__ctype_type::digit, *__next))
 		{
@@ -450,18 +450,18 @@ namespace __detail
 		    __output(__num);
 		}
 	      else
-		*__out++ = '$';
+		*___out++ = '$';
 	      __fmt_first = __next;
 	    }
-	  __out = std::copy(__fmt_first, __fmt_last, __out);
+	  ___out = std::copy(__fmt_first, __fmt_last, ___out);
 	}
-      return __out;
+      return ___out;
     }
 
   template<typename _Out_iter, typename _Bi_iter,
 	   typename _Rx_traits, typename _Ch_type>
     _Out_iter
-    __regex_replace(_Out_iter __out, _Bi_iter __first, _Bi_iter __last,
+    __regex_replace(_Out_iter ___out, _Bi_iter __first, _Bi_iter __last,
 		    const basic_regex<_Ch_type, _Rx_traits>& __e,
 		    const _Ch_type* __fmt, size_t __len,
 		    regex_constants::match_flag_type __flags)
@@ -472,7 +472,7 @@ namespace __detail
       if (__i == __end)
 	{
 	  if (!(__flags & regex_constants::format_no_copy))
-	    __out = std::copy(__first, __last, __out);
+	    ___out = std::copy(__first, __last, ___out);
 	}
       else
 	{
@@ -480,17 +480,17 @@ namespace __detail
 	  for (; __i != __end; ++__i)
 	    {
 	      if (!(__flags & regex_constants::format_no_copy))
-		__out = std::copy(__i->prefix().first, __i->prefix().second,
-				  __out);
-	      __out = __i->format(__out, __fmt, __fmt + __len, __flags);
+		___out = std::copy(__i->prefix().first, __i->prefix().second,
+				  ___out);
+	      ___out = __i->format(___out, __fmt, __fmt + __len, __flags);
 	      __last = __i->suffix();
 	      if (__flags & regex_constants::format_first_only)
 		break;
 	    }
 	  if (!(__flags & regex_constants::format_no_copy))
-	    __out = std::copy(__last.first, __last.second, __out);
+	    ___out = std::copy(__last.first, __last.second, ___out);
 	}
-      return __out;
+      return ___out;
     }
 
   template<typename _Bi_iter,
diff --git a/libstdc++-v3/include/bits/std_thread.h b/libstdc++-v3/include/bits/std_thread.h
index 976526001c5..07f23ec481e 100644
--- a/libstdc++-v3/include/bits/std_thread.h
+++ b/libstdc++-v3/include/bits/std_thread.h
@@ -105,7 +105,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 
       template<class _CharT, class _Traits>
 	friend basic_ostream<_CharT, _Traits>&
-	operator<<(basic_ostream<_CharT, _Traits>& __out, id __id);
+	operator<<(basic_ostream<_CharT, _Traits>& ___out, id __id);
     };
 
   private:
diff --git a/libstdc++-v3/include/bits/stl_algo.h b/libstdc++-v3/include/bits/stl_algo.h
index a18bb000d0c..74d47742c65 100644
--- a/libstdc++-v3/include/bits/stl_algo.h
+++ b/libstdc++-v3/include/bits/stl_algo.h
@@ -5746,7 +5746,7 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO
            typename _Size, typename _UniformRandomBitGenerator>
     _RandomAccessIterator
     __sample(_InputIterator __first, _InputIterator __last, input_iterator_tag,
-	     _RandomAccessIterator __out, random_access_iterator_tag,
+	     _RandomAccessIterator ___out, random_access_iterator_tag,
 	     _Size __n, _UniformRandomBitGenerator&& __g)
     {
       using __distrib_type = uniform_int_distribution<_Size>;
@@ -5755,7 +5755,7 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO
       _Size __sample_sz = 0;
       while (__first != __last && __sample_sz != __n)
 	{
-	  __out[__sample_sz++] = *__first;
+	  ___out[__sample_sz++] = *__first;
 	  ++__first;
 	}
       for (auto __pop_sz = __sample_sz; __first != __last;
@@ -5763,9 +5763,9 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO
 	{
 	  const auto __k = __d(__g, __param_type{0, __pop_sz});
 	  if (__k < __n)
-	    __out[__k] = *__first;
+	    ___out[__k] = *__first;
 	}
-      return __out + __sample_sz;
+      return ___out + __sample_sz;
     }
 
   /// Selection sampling algorithm.
@@ -5774,7 +5774,7 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO
     _OutputIterator
     __sample(_ForwardIterator __first, _ForwardIterator __last,
 	     forward_iterator_tag,
-	     _OutputIterator __out, _Cat,
+	     _OutputIterator ___out, _Cat,
 	     _Size __n, _UniformRandomBitGenerator&& __g)
     {
       using __distrib_type = uniform_int_distribution<_Size>;
@@ -5784,7 +5784,7 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO
       using __uc_type = common_type_t<typename _Gen::result_type, _USize>;
 
       if (__first == __last)
-	return __out;
+	return ___out;
 
       __distrib_type __d{};
       _Size __unsampled_sz = std::distance(__first, __last);
@@ -5806,7 +5806,7 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO
 	      --__unsampled_sz;
 	      if (__p.first < __n)
 		{
-		  *__out++ = *__first;
+		  *___out++ = *__first;
 		  --__n;
 		}
 
@@ -5817,7 +5817,7 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO
 	      --__unsampled_sz;
 	      if (__p.second < __n)
 		{
-		  *__out++ = *__first;
+		  *___out++ = *__first;
 		  --__n;
 		}
 
@@ -5830,10 +5830,10 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO
       for (; __n != 0; ++__first)
 	if (__d(__g, __param_type{0, --__unsampled_sz}) < __n)
 	  {
-	    *__out++ = *__first;
+	    *___out++ = *__first;
 	    --__n;
 	  }
-      return __out;
+      return ___out;
     }
 
 #if __cplusplus > 201402L
@@ -5843,7 +5843,7 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO
            typename _Distance, typename _UniformRandomBitGenerator>
     _SampleIterator
     sample(_PopulationIterator __first, _PopulationIterator __last,
-	   _SampleIterator __out, _Distance __n,
+	   _SampleIterator ___out, _Distance __n,
 	   _UniformRandomBitGenerator&& __g)
     {
       using __pop_cat = typename
@@ -5862,7 +5862,7 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO
 
       typename iterator_traits<_PopulationIterator>::difference_type __d = __n;
       return _GLIBCXX_STD_A::
-	__sample(__first, __last, __pop_cat{}, __out, __samp_cat{}, __d,
+	__sample(__first, __last, __pop_cat{}, ___out, __samp_cat{}, __d,
 		 std::forward<_UniformRandomBitGenerator>(__g));
     }
 #endif // C++17
diff --git a/libstdc++-v3/include/experimental/algorithm b/libstdc++-v3/include/experimental/algorithm
index 1b98567a587..74ba0c2ba1f 100644
--- a/libstdc++-v3/include/experimental/algorithm
+++ b/libstdc++-v3/include/experimental/algorithm
@@ -59,7 +59,7 @@ inline namespace fundamentals_v2
            typename _Distance, typename _UniformRandomNumberGenerator>
     _SampleIterator
     sample(_PopulationIterator __first, _PopulationIterator __last,
-	   _SampleIterator __out, _Distance __n,
+	   _SampleIterator ___out, _Distance __n,
 	   _UniformRandomNumberGenerator&& __g)
     {
       using __pop_cat = typename
@@ -78,7 +78,7 @@ inline namespace fundamentals_v2
 
       typename iterator_traits<_PopulationIterator>::difference_type __d = __n;
       return _GLIBCXX_STD_A::
-	__sample(__first, __last, __pop_cat{}, __out, __samp_cat{}, __d,
+	__sample(__first, __last, __pop_cat{}, ___out, __samp_cat{}, __d,
 		 std::forward<_UniformRandomNumberGenerator>(__g));
     }
 
@@ -86,9 +86,9 @@ inline namespace fundamentals_v2
            typename _Distance>
     inline _SampleIterator
     sample(_PopulationIterator __first, _PopulationIterator __last,
-	   _SampleIterator __out, _Distance __n)
+	   _SampleIterator ___out, _Distance __n)
     {
-      return experimental::sample(__first, __last, __out, __n,
+      return experimental::sample(__first, __last, ___out, __n,
 				  _S_randint_engine());
     }
 
diff --git a/libstdc++-v3/include/experimental/bits/simd.h b/libstdc++-v3/include/experimental/bits/simd.h
index 56ec9dd4a84..b6b941a5de6 100644
--- a/libstdc++-v3/include/experimental/bits/simd.h
+++ b/libstdc++-v3/include/experimental/bits/simd.h
@@ -2046,20 +2046,20 @@ template <int _Offset,
 	  typename _TVT = _VectorTraits<_Tp>,
 	  typename _R = __vector_type_t<typename _TVT::value_type, _TVT::_S_full_size / _SplitBy>>
   _GLIBCXX_SIMD_INTRINSIC constexpr _R
-  __extract(_Tp __in)
+  __extract(_Tp ___in)
   {
     using value_type = typename _TVT::value_type;
 #if _GLIBCXX_SIMD_X86INTRIN // {{{
     if constexpr (sizeof(_Tp) == 64 && _SplitBy == 4 && _Offset > 0)
       {
 	if constexpr (__have_avx512dq && is_same_v<double, value_type>)
-	  return _mm512_extractf64x2_pd(__to_intrin(__in), _Offset);
+	  return _mm512_extractf64x2_pd(__to_intrin(___in), _Offset);
 	else if constexpr (is_floating_point_v<value_type>)
 	  return __vector_bitcast<value_type>(
-	    _mm512_extractf32x4_ps(__intrin_bitcast<__m512>(__in), _Offset));
+	    _mm512_extractf32x4_ps(__intrin_bitcast<__m512>(___in), _Offset));
 	else
 	  return reinterpret_cast<_R>(
-	    _mm512_extracti32x4_epi32(__intrin_bitcast<__m512i>(__in),
+	    _mm512_extracti32x4_epi32(__intrin_bitcast<__m512i>(___in),
 				      _Offset));
       }
     else
@@ -2072,12 +2072,12 @@ template <int _Offset,
 	static_assert(sizeof(_R) % sizeof(_W) == 0);
 	constexpr int __return_width = sizeof(_R) / sizeof(_W);
 	using _Up = __vector_type_t<_W, __return_width>;
-	const auto __x = __vector_bitcast<_W>(__in);
+	const auto __x = __vector_bitcast<_W>(___in);
 #else
       constexpr int __return_width = _TVT::_S_full_size / _SplitBy;
       using _Up = _R;
       const __vector_type_t<value_type, _TVT::_S_full_size>& __x
-	= __in; // only needed for _Tp = _SimdWrapper<value_type, _Np>
+	= ___in; // only needed for _Tp = _SimdWrapper<value_type, _Np>
 #endif
 	constexpr int _O = _Offset * __return_width;
 	return __call_with_subscripts<__return_width, _O>(
diff --git a/libstdc++-v3/include/experimental/internet b/libstdc++-v3/include/experimental/internet
index 07eb137fb80..af2c5e4b82f 100644
--- a/libstdc++-v3/include/experimental/internet
+++ b/libstdc++-v3/include/experimental/internet
@@ -791,9 +791,9 @@ namespace ip
     if (__p == nullptr)
       return __make_address_v6(__str, nullptr, __ec);
     char __buf[64];
-    char* __out = __buf;
+    char* ___out = __buf;
     bool __skip_leading_zero = true;
-    while (__str < __p && __out < std::end(__buf))
+    while (__str < __p && ___out < std::end(__buf))
       {
 	if (!__skip_leading_zero || *__str != '0')
 	  {
@@ -801,18 +801,18 @@ namespace ip
 	      __skip_leading_zero = true;
 	    else
 	      __skip_leading_zero = false;
-	    *__out = *__str;
+	    *___out = *__str;
 	  }
 	__str++;
       }
-    if (__out == std::end(__buf))
+    if (___out == std::end(__buf))
       {
 	__ec = std::make_error_code(std::errc::invalid_argument);
 	return {};
       }
     else
       {
-	*__out = '\0';
+	*___out = '\0';
 	return __make_address_v6(__buf, __p + 1, __ec);
       }
   }
@@ -828,10 +828,10 @@ namespace ip
     if (__pos == string::npos)
       return __make_address_v6(__str.c_str(), nullptr, __ec);
     char __buf[64];
-    char* __out = __buf;
+    char* ___out = __buf;
     bool __skip_leading_zero = true;
     size_t __n = 0;
-    while (__n < __pos && __out < std::end(__buf))
+    while (__n < __pos && ___out < std::end(__buf))
       {
 	if (!__skip_leading_zero || __str[__n] != '0')
 	  {
@@ -839,18 +839,18 @@ namespace ip
 	      __skip_leading_zero = true;
 	    else
 	      __skip_leading_zero = false;
-	    *__out = __str[__n];
+	    *___out = __str[__n];
 	  }
 	__n++;
       }
-    if (__out == std::end(__buf))
+    if (___out == std::end(__buf))
       {
 	__ec = std::make_error_code(std::errc::invalid_argument);
 	return {};
       }
     else
       {
-	*__out = '\0';
+	*___out = '\0';
 	return __make_address_v6(__buf, __str.c_str() + __pos + 1, __ec);
       }
   }
@@ -863,20 +863,20 @@ namespace ip
   make_address_v6(string_view __str, error_code& __ec) noexcept
   {
     char __buf[64];
-    char* __out = __buf;
+    char* ___out = __buf;
     char* __scope = nullptr;
     bool __skip_leading_zero = true;
     size_t __n = 0;
-    while (__n < __str.length() && __out < std::end(__buf))
+    while (__n < __str.length() && ___out < std::end(__buf))
       {
 	if (__str[__n] == '%')
 	  {
 	    if (__scope)
-	      __out = std::end(__buf);
+	      ___out = std::end(__buf);
 	    else
 	      {
-		*__out = '\0';
-		__scope = ++__out;
+		*___out = '\0';
+		__scope = ++___out;
 		__skip_leading_zero = true;
 	      }
 	  }
@@ -886,19 +886,19 @@ namespace ip
 	      __skip_leading_zero = true;
 	    else
 	      __skip_leading_zero = false;
-	    *__out = __str[__n];
-	    __out++;
+	    *___out = __str[__n];
+	    ___out++;
 	  }
 	__n++;
       }
-    if (__out == std::end(__buf))
+    if (___out == std::end(__buf))
       {
 	__ec = std::make_error_code(std::errc::invalid_argument);
 	return {};
       }
     else
       {
-	*__out = '\0';
+	*___out = '\0';
 	return __make_address_v6(__buf, __scope, __ec);
       }
   }
diff --git a/libstdc++-v3/include/ext/algorithm b/libstdc++-v3/include/ext/algorithm
index 6dce6239471..1a9a1684fa9 100644
--- a/libstdc++-v3/include/ext/algorithm
+++ b/libstdc++-v3/include/ext/algorithm
@@ -258,7 +258,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	   typename _Distance>
     _OutputIterator
     random_sample_n(_ForwardIterator __first, _ForwardIterator __last,
-                    _OutputIterator __out, const _Distance __n)
+                    _OutputIterator ___out, const _Distance __n)
     {
       // concept requirements
       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
@@ -273,14 +273,14 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	{
 	  if ((std::rand() % __remaining) < __m)
 	    {
-	      *__out = *__first;
-	      ++__out;
+	      *___out = *__first;
+	      ++___out;
 	      --__m;
 	    }
 	  --__remaining;
 	  ++__first;
 	}
-      return __out;
+      return ___out;
     }
 
   /**
@@ -292,7 +292,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	   typename _Distance, typename _RandomNumberGenerator>
     _OutputIterator
     random_sample_n(_ForwardIterator __first, _ForwardIterator __last,
-                   _OutputIterator __out, const _Distance __n,
+                   _OutputIterator ___out, const _Distance __n,
 		   _RandomNumberGenerator& __rand)
     {
       // concept requirements
@@ -310,44 +310,44 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	{
 	  if (__rand(__remaining) < __m)
 	    {
-	      *__out = *__first;
-	      ++__out;
+	      *___out = *__first;
+	      ++___out;
 	      --__m;
 	    }
 	  --__remaining;
 	  ++__first;
 	}
-      return __out;
+      return ___out;
     }
 
   template<typename _InputIterator, typename _RandomAccessIterator,
 	   typename _Distance>
     _RandomAccessIterator
     __random_sample(_InputIterator __first, _InputIterator __last,
-		    _RandomAccessIterator __out,
+		    _RandomAccessIterator ___out,
 		    const _Distance __n)
     {
       _Distance __m = 0;
       _Distance __t = __n;
       for ( ; __first != __last && __m < __n; ++__m, ++__first)
-	__out[__m] = *__first;
+	___out[__m] = *__first;
 
       while (__first != __last)
 	{
 	  ++__t;
 	  _Distance __M = std::rand() % (__t);
 	  if (__M < __n)
-	    __out[__M] = *__first;
+	    ___out[__M] = *__first;
 	  ++__first;
 	}
-      return __out + __m;
+      return ___out + __m;
     }
 
   template<typename _InputIterator, typename _RandomAccessIterator,
 	   typename _RandomNumberGenerator, typename _Distance>
     _RandomAccessIterator
     __random_sample(_InputIterator __first, _InputIterator __last,
-		    _RandomAccessIterator __out,
+		    _RandomAccessIterator ___out,
 		    _RandomNumberGenerator& __rand,
 		    const _Distance __n)
     {
@@ -358,17 +358,17 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
       _Distance __m = 0;
       _Distance __t = __n;
       for ( ; __first != __last && __m < __n; ++__m, ++__first)
-	__out[__m] = *__first;
+	___out[__m] = *__first;
 
       while (__first != __last)
 	{
 	  ++__t;
 	  _Distance __M = __rand(__t);
 	  if (__M < __n)
-	    __out[__M] = *__first;
+	    ___out[__M] = *__first;
 	  ++__first;
 	}
-      return __out + __m;
+      return ___out + __m;
     }
 
   /**
diff --git a/libstdc++-v3/include/ext/pb_ds/detail/debug_map_base.hpp b/libstdc++-v3/include/ext/pb_ds/detail/debug_map_base.hpp
index 84419b3e839..24c8b9818c6 100644
--- a/libstdc++-v3/include/ext/pb_ds/detail/debug_map_base.hpp
+++ b/libstdc++-v3/include/ext/pb_ds/detail/debug_map_base.hpp
@@ -57,9 +57,9 @@ namespace __gnu_pbds
     // Need std::pair ostream extractor.
     template<typename _CharT, typename _Traits, typename _Tp1, typename _Tp2>
     inline std::basic_ostream<_CharT, _Traits>&
-    operator<<(std::basic_ostream<_CharT, _Traits>& __out,
+    operator<<(std::basic_ostream<_CharT, _Traits>& ___out,
 	       const std::pair<_Tp1, _Tp2>& p)
-    { return (__out << '(' << p.first << ',' << p.second << ')'); }
+    { return (___out << '(' << p.first << ',' << p.second << ')'); }
 
 #define PB_DS_CLASS_T_DEC \
     template<typename Key, typename Eq_Fn, typename Const_Key_Reference>
diff --git a/libstdc++-v3/include/ext/random.tcc b/libstdc++-v3/include/ext/random.tcc
index 9bdd97be661..fd5ba95a1be 100644
--- a/libstdc++-v3/include/ext/random.tcc
+++ b/libstdc++-v3/include/ext/random.tcc
@@ -208,38 +208,38 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
   namespace {
 
     template<size_t __shift>
-      inline void __rshift(uint32_t *__out, const uint32_t *__in)
+      inline void __rshift(uint32_t *___out, const uint32_t *___in)
       {
-	uint64_t __th = ((static_cast<uint64_t>(__in[3]) << 32)
-			 | static_cast<uint64_t>(__in[2]));
-	uint64_t __tl = ((static_cast<uint64_t>(__in[1]) << 32)
-			 | static_cast<uint64_t>(__in[0]));
+	uint64_t __th = ((static_cast<uint64_t>(___in[3]) << 32)
+			 | static_cast<uint64_t>(___in[2]));
+	uint64_t __tl = ((static_cast<uint64_t>(___in[1]) << 32)
+			 | static_cast<uint64_t>(___in[0]));
 
 	uint64_t __oh = __th >> (__shift * 8);
 	uint64_t __ol = __tl >> (__shift * 8);
 	__ol |= __th << (64 - __shift * 8);
-	__out[1] = static_cast<uint32_t>(__ol >> 32);
-	__out[0] = static_cast<uint32_t>(__ol);
-	__out[3] = static_cast<uint32_t>(__oh >> 32);
-	__out[2] = static_cast<uint32_t>(__oh);
+	___out[1] = static_cast<uint32_t>(__ol >> 32);
+	___out[0] = static_cast<uint32_t>(__ol);
+	___out[3] = static_cast<uint32_t>(__oh >> 32);
+	___out[2] = static_cast<uint32_t>(__oh);
       }
 
 
     template<size_t __shift>
-      inline void __lshift(uint32_t *__out, const uint32_t *__in)
+      inline void __lshift(uint32_t *___out, const uint32_t *___in)
       {
-	uint64_t __th = ((static_cast<uint64_t>(__in[3]) << 32)
-			 | static_cast<uint64_t>(__in[2]));
-	uint64_t __tl = ((static_cast<uint64_t>(__in[1]) << 32)
-			 | static_cast<uint64_t>(__in[0]));
+	uint64_t __th = ((static_cast<uint64_t>(___in[3]) << 32)
+			 | static_cast<uint64_t>(___in[2]));
+	uint64_t __tl = ((static_cast<uint64_t>(___in[1]) << 32)
+			 | static_cast<uint64_t>(___in[0]));
 
 	uint64_t __oh = __th << (__shift * 8);
 	uint64_t __ol = __tl << (__shift * 8);
 	__oh |= __tl >> (64 - __shift * 8);
-	__out[1] = static_cast<uint32_t>(__ol >> 32);
-	__out[0] = static_cast<uint32_t>(__ol);
-	__out[3] = static_cast<uint32_t>(__oh >> 32);
-	__out[2] = static_cast<uint32_t>(__oh);
+	___out[1] = static_cast<uint32_t>(__ol >> 32);
+	___out[0] = static_cast<uint32_t>(__ol);
+	___out[3] = static_cast<uint32_t>(__oh >> 32);
+	___out[2] = static_cast<uint32_t>(__oh);
       }
 
 
diff --git a/libstdc++-v3/include/ext/vstring.tcc b/libstdc++-v3/include/ext/vstring.tcc
index 59c638d9dc8..8da1ec66d80 100644
--- a/libstdc++-v3/include/ext/vstring.tcc
+++ b/libstdc++-v3/include/ext/vstring.tcc
@@ -549,7 +549,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
   template<typename _CharT, typename _Traits, typename _Alloc,
            template <typename, typename, typename> class _Base>
     basic_istream<_CharT, _Traits>&
-    operator>>(basic_istream<_CharT, _Traits>& __in,
+    operator>>(basic_istream<_CharT, _Traits>& ___in,
 	       __gnu_cxx::__versa_string<_CharT, _Traits,
 	                                 _Alloc, _Base>& __str)
     {
@@ -564,7 +564,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 
       __size_type __extracted = 0;
       typename __ios_base::iostate __err = __ios_base::goodbit;
-      typename __istream_type::sentry __cerb(__in, false);
+      typename __istream_type::sentry __cerb(___in, false);
       if (__cerb)
 	{
 	  __try
@@ -573,12 +573,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	      __str.erase();
 	      _CharT __buf[128];
 	      __size_type __len = 0;
-	      const streamsize __w = __in.width();
+	      const streamsize __w = ___in.width();
 	      const __size_type __n = __w > 0 ? static_cast<__size_type>(__w)
 		                              : __str.max_size();
-	      const __ctype_type& __ct = use_facet<__ctype_type>(__in.getloc());
+	      const __ctype_type& __ct = use_facet<__ctype_type>(___in.getloc());
 	      const __int_type __eof = _Traits::eof();
-	      __int_type __c = __in.rdbuf()->sgetc();
+	      __int_type __c = ___in.rdbuf()->sgetc();
 
 	      while (__extracted < __n
 		     && !_Traits::eq_int_type(__c, __eof)
@@ -592,17 +592,17 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 		    }
 		  __buf[__len++] = _Traits::to_char_type(__c);
 		  ++__extracted;
-		  __c = __in.rdbuf()->snextc();
+		  __c = ___in.rdbuf()->snextc();
 		}
 	      __str.append(__buf, __len);
 
 	      if (_Traits::eq_int_type(__c, __eof))
 		__err |= __ios_base::eofbit;
-	      __in.width(0);
+	      ___in.width(0);
 	    }
 	  __catch(__cxxabiv1::__forced_unwind&)
 	    {
-	      __in._M_setstate(__ios_base::badbit);
+	      ___in._M_setstate(__ios_base::badbit);
 	      __throw_exception_again;
 	    }
 	  __catch(...)
@@ -610,21 +610,21 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	      // _GLIBCXX_RESOLVE_LIB_DEFECTS
 	      // 91. Description of operator>> and getline() for string<>
 	      // might cause endless loop
-	      __in._M_setstate(__ios_base::badbit);
+	      ___in._M_setstate(__ios_base::badbit);
 	    }
 	}
       // 211.  operator>>(istream&, string&) doesn't set failbit
       if (!__extracted)
 	__err |= __ios_base::failbit;
       if (__err)
-	__in.setstate(__err);
-      return __in;
+	___in.setstate(__err);
+      return ___in;
     }      
 
   template<typename _CharT, typename _Traits, typename _Alloc,
            template <typename, typename, typename> class _Base>
     basic_istream<_CharT, _Traits>&
-    getline(basic_istream<_CharT, _Traits>& __in,
+    getline(basic_istream<_CharT, _Traits>& ___in,
 	    __gnu_cxx::__versa_string<_CharT, _Traits, _Alloc, _Base>& __str,
 	    _CharT __delim)
     {
@@ -638,7 +638,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
       __size_type __extracted = 0;
       const __size_type __n = __str.max_size();
       typename __ios_base::iostate __err = __ios_base::goodbit;
-      typename __istream_type::sentry __cerb(__in, true);
+      typename __istream_type::sentry __cerb(___in, true);
       if (__cerb)
 	{
 	  __try
@@ -649,7 +649,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	      __size_type __len = 0;
 	      const __int_type __idelim = _Traits::to_int_type(__delim);
 	      const __int_type __eof = _Traits::eof();
-	      __int_type __c = __in.rdbuf()->sgetc();
+	      __int_type __c = ___in.rdbuf()->sgetc();
 
 	      while (__extracted < __n
 		     && !_Traits::eq_int_type(__c, __eof)
@@ -662,7 +662,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 		    }
 		  __buf[__len++] = _Traits::to_char_type(__c);
 		  ++__extracted;
-		  __c = __in.rdbuf()->snextc();
+		  __c = ___in.rdbuf()->snextc();
 		}
 	      __str.append(__buf, __len);
 
@@ -671,14 +671,14 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	      else if (_Traits::eq_int_type(__c, __idelim))
 		{
 		  ++__extracted;		  
-		  __in.rdbuf()->sbumpc();
+		  ___in.rdbuf()->sbumpc();
 		}
 	      else
 		__err |= __ios_base::failbit;
 	    }
 	  __catch(__cxxabiv1::__forced_unwind&)
 	    {
-	      __in._M_setstate(__ios_base::badbit);
+	      ___in._M_setstate(__ios_base::badbit);
 	      __throw_exception_again;
 	    }
 	  __catch(...)
@@ -686,14 +686,14 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	      // _GLIBCXX_RESOLVE_LIB_DEFECTS
 	      // 91. Description of operator>> and getline() for string<>
 	      // might cause endless loop
-	      __in._M_setstate(__ios_base::badbit);
+	      ___in._M_setstate(__ios_base::badbit);
 	    }
 	}
       if (!__extracted)
 	__err |= __ios_base::failbit;
       if (__err)
-	__in.setstate(__err);
-      return __in;
+	___in.setstate(__err);
+      return ___in;
     }      
 
 _GLIBCXX_END_NAMESPACE_VERSION
diff --git a/libstdc++-v3/include/parallel/algo.h b/libstdc++-v3/include/parallel/algo.h
index 62463af86b7..d1b50561b33 100644
--- a/libstdc++-v3/include/parallel/algo.h
+++ b/libstdc++-v3/include/parallel/algo.h
@@ -289,67 +289,67 @@ namespace __parallel
   // Sequential fallback
   template<typename _IIter, typename _OutputIterator>
     inline _OutputIterator
-    unique_copy(_IIter __begin1, _IIter __end1, _OutputIterator __out,
+    unique_copy(_IIter __begin1, _IIter __end1, _OutputIterator ___out,
 		__gnu_parallel::sequential_tag)
-    { return _GLIBCXX_STD_A::unique_copy(__begin1, __end1, __out); }
+    { return _GLIBCXX_STD_A::unique_copy(__begin1, __end1, ___out); }
 
   // Sequential fallback
   template<typename _IIter, typename _OutputIterator,
 	   typename _Predicate>
     inline _OutputIterator
-    unique_copy(_IIter __begin1, _IIter __end1, _OutputIterator __out,
+    unique_copy(_IIter __begin1, _IIter __end1, _OutputIterator ___out,
 		_Predicate __pred, __gnu_parallel::sequential_tag)
-    { return _GLIBCXX_STD_A::unique_copy(__begin1, __end1, __out, __pred); }
+    { return _GLIBCXX_STD_A::unique_copy(__begin1, __end1, ___out, __pred); }
 
   // Sequential fallback for input iterator case
   template<typename _IIter, typename _OutputIterator,
 	   typename _Predicate, typename _IteratorTag1, typename _IteratorTag2>
     inline _OutputIterator
     __unique_copy_switch(_IIter __begin, _IIter __last,
-		       _OutputIterator __out, _Predicate __pred,
+		       _OutputIterator ___out, _Predicate __pred,
 		       _IteratorTag1, _IteratorTag2)
-    { return _GLIBCXX_STD_A::unique_copy(__begin, __last, __out, __pred); }
+    { return _GLIBCXX_STD_A::unique_copy(__begin, __last, ___out, __pred); }
 
   // Parallel unique_copy for random access iterators
   template<typename _RAIter, typename _RandomAccessOutputIterator,
 	   typename _Predicate>
     _RandomAccessOutputIterator
     __unique_copy_switch(_RAIter __begin, _RAIter __last,
-			 _RandomAccessOutputIterator __out, _Predicate __pred,
+			 _RandomAccessOutputIterator ___out, _Predicate __pred,
 			 random_access_iterator_tag, random_access_iterator_tag)
     {
       if (_GLIBCXX_PARALLEL_CONDITION(
 	    static_cast<__gnu_parallel::_SequenceIndex>(__last - __begin)
 	    > __gnu_parallel::_Settings::get().unique_copy_minimal_n))
 	return __gnu_parallel::__parallel_unique_copy(
-		 __begin, __last, __out, __pred);
+		 __begin, __last, ___out, __pred);
       else
-	return _GLIBCXX_STD_A::unique_copy(__begin, __last, __out, __pred);
+	return _GLIBCXX_STD_A::unique_copy(__begin, __last, ___out, __pred);
     }
 
   // Public interface
   template<typename _IIter, typename _OutputIterator>
     inline _OutputIterator
-    unique_copy(_IIter __begin1, _IIter __end1, _OutputIterator __out)
+    unique_copy(_IIter __begin1, _IIter __end1, _OutputIterator ___out)
     {
       typedef typename std::iterator_traits<_IIter>::value_type _ValueType;
 
       return __unique_copy_switch(
-	       __begin1, __end1, __out, equal_to<_ValueType>(),
+	       __begin1, __end1, ___out, equal_to<_ValueType>(),
 	       std::__iterator_category(__begin1),
-	       std::__iterator_category(__out));
+	       std::__iterator_category(___out));
     }
 
   // Public interface
   template<typename _IIter, typename _OutputIterator, typename _Predicate>
     inline _OutputIterator
-    unique_copy(_IIter __begin1, _IIter __end1, _OutputIterator __out,
+    unique_copy(_IIter __begin1, _IIter __end1, _OutputIterator ___out,
 		_Predicate __pred)
     {
       return __unique_copy_switch(
-	       __begin1, __end1, __out, __pred,
+	       __begin1, __end1, ___out, __pred,
 	       std::__iterator_category(__begin1),
-	       std::__iterator_category(__out));
+	       std::__iterator_category(___out));
     }
 
   // Sequential fallback
@@ -358,9 +358,9 @@ namespace __parallel
     inline _OutputIterator
     set_union(_IIter1 __begin1, _IIter1 __end1,
 	      _IIter2 __begin2, _IIter2 __end2,
-	      _OutputIterator __out, __gnu_parallel::sequential_tag)
+	      _OutputIterator ___out, __gnu_parallel::sequential_tag)
     { return _GLIBCXX_STD_A::set_union(
-	       __begin1, __end1, __begin2, __end2, __out); }
+	       __begin1, __end1, __begin2, __end2, ___out); }
 
   // Sequential fallback
   template<typename _IIter1, typename _IIter2,
@@ -368,10 +368,10 @@ namespace __parallel
     inline _OutputIterator
     set_union(_IIter1 __begin1, _IIter1 __end1,
 	      _IIter2 __begin2, _IIter2 __end2,
-	      _OutputIterator __out, _Predicate __pred,
+	      _OutputIterator ___out, _Predicate __pred,
 	      __gnu_parallel::sequential_tag)
     { return _GLIBCXX_STD_A::set_union(__begin1, __end1,
-				       __begin2, __end2, __out, __pred); }
+				       __begin2, __end2, ___out, __pred); }
 
   // Sequential fallback for input iterator case
   template<typename _IIter1, typename _IIter2, typename _Predicate,
@@ -412,17 +412,17 @@ namespace __parallel
 	   typename _OutputIterator>
     inline _OutputIterator
     set_union(_IIter1 __begin1, _IIter1 __end1,
-	      _IIter2 __begin2, _IIter2 __end2, _OutputIterator __out)
+	      _IIter2 __begin2, _IIter2 __end2, _OutputIterator ___out)
     {
       typedef typename std::iterator_traits<_IIter1>::value_type _ValueType1;
       typedef typename std::iterator_traits<_IIter2>::value_type _ValueType2;
 
       return __set_union_switch(
-	       __begin1, __end1, __begin2, __end2, __out,
+	       __begin1, __end1, __begin2, __end2, ___out,
 	       __gnu_parallel::_Less<_ValueType1, _ValueType2>(),
 	       std::__iterator_category(__begin1),
 	       std::__iterator_category(__begin2),
-	       std::__iterator_category(__out));
+	       std::__iterator_category(___out));
     }
 
   // Public interface
@@ -431,13 +431,13 @@ namespace __parallel
     inline _OutputIterator
     set_union(_IIter1 __begin1, _IIter1 __end1,
 	      _IIter2 __begin2, _IIter2 __end2,
-	      _OutputIterator __out, _Predicate __pred)
+	      _OutputIterator ___out, _Predicate __pred)
     {
       return __set_union_switch(
-	       __begin1, __end1, __begin2, __end2, __out, __pred,
+	       __begin1, __end1, __begin2, __end2, ___out, __pred,
 	       std::__iterator_category(__begin1),
 	       std::__iterator_category(__begin2),
-	       std::__iterator_category(__out));
+	       std::__iterator_category(___out));
     }
 
   // Sequential fallback.
@@ -446,9 +446,9 @@ namespace __parallel
     inline _OutputIterator
     set_intersection(_IIter1 __begin1, _IIter1 __end1,
 		     _IIter2 __begin2, _IIter2 __end2,
-		     _OutputIterator __out, __gnu_parallel::sequential_tag)
+		     _OutputIterator ___out, __gnu_parallel::sequential_tag)
     { return _GLIBCXX_STD_A::set_intersection(__begin1, __end1,
-					      __begin2, __end2, __out); }
+					      __begin2, __end2, ___out); }
 
   // Sequential fallback.
   template<typename _IIter1, typename _IIter2,
@@ -456,10 +456,10 @@ namespace __parallel
     inline _OutputIterator
     set_intersection(_IIter1 __begin1, _IIter1 __end1,
 		     _IIter2 __begin2, _IIter2 __end2,
-		     _OutputIterator __out, _Predicate __pred,
+		     _OutputIterator ___out, _Predicate __pred,
 		     __gnu_parallel::sequential_tag)
     { return _GLIBCXX_STD_A::set_intersection(
-	       __begin1, __end1, __begin2, __end2, __out, __pred); }
+	       __begin1, __end1, __begin2, __end2, ___out, __pred); }
 
   // Sequential fallback for input iterator case
   template<typename _IIter1, typename _IIter2,
@@ -506,17 +506,17 @@ namespace __parallel
     inline _OutputIterator
     set_intersection(_IIter1 __begin1, _IIter1 __end1,
 		     _IIter2 __begin2, _IIter2 __end2,
-		     _OutputIterator __out)
+		     _OutputIterator ___out)
     {
       typedef typename std::iterator_traits<_IIter1>::value_type _ValueType1;
       typedef typename std::iterator_traits<_IIter2>::value_type _ValueType2;
 
       return __set_intersection_switch(
-	       __begin1, __end1, __begin2, __end2, __out,
+	       __begin1, __end1, __begin2, __end2, ___out,
 	       __gnu_parallel::_Less<_ValueType1, _ValueType2>(),
 	       std::__iterator_category(__begin1),
 	       std::__iterator_category(__begin2),
-	       std::__iterator_category(__out));
+	       std::__iterator_category(___out));
     }
 
   template<typename _IIter1, typename _IIter2,
@@ -524,13 +524,13 @@ namespace __parallel
     inline _OutputIterator
     set_intersection(_IIter1 __begin1, _IIter1 __end1,
 		     _IIter2 __begin2, _IIter2 __end2,
-		     _OutputIterator __out, _Predicate __pred)
+		     _OutputIterator ___out, _Predicate __pred)
     {
       return __set_intersection_switch(
-	       __begin1, __end1, __begin2, __end2, __out, __pred,
+	       __begin1, __end1, __begin2, __end2, ___out, __pred,
 	       std::__iterator_category(__begin1),
 	       std::__iterator_category(__begin2),
-	       std::__iterator_category(__out));
+	       std::__iterator_category(___out));
     }
 
   // Sequential fallback
@@ -539,10 +539,10 @@ namespace __parallel
     inline _OutputIterator
     set_symmetric_difference(_IIter1 __begin1, _IIter1 __end1,
 			     _IIter2 __begin2, _IIter2 __end2,
-			     _OutputIterator __out,
+			     _OutputIterator ___out,
 			     __gnu_parallel::sequential_tag)
     { return _GLIBCXX_STD_A::set_symmetric_difference(
-	       __begin1, __end1, __begin2, __end2, __out); }
+	       __begin1, __end1, __begin2, __end2, ___out); }
 
   // Sequential fallback
   template<typename _IIter1, typename _IIter2,
@@ -550,10 +550,10 @@ namespace __parallel
     inline _OutputIterator
     set_symmetric_difference(_IIter1 __begin1, _IIter1 __end1,
 			     _IIter2 __begin2, _IIter2 __end2,
-			     _OutputIterator __out, _Predicate __pred,
+			     _OutputIterator ___out, _Predicate __pred,
 			     __gnu_parallel::sequential_tag)
     { return _GLIBCXX_STD_A::set_symmetric_difference(
-	       __begin1, __end1, __begin2, __end2, __out, __pred); }
+	       __begin1, __end1, __begin2, __end2, ___out, __pred); }
 
   // Sequential fallback for input iterator case
   template<typename _IIter1, typename _IIter2,
@@ -600,17 +600,17 @@ namespace __parallel
     inline _OutputIterator
     set_symmetric_difference(_IIter1 __begin1, _IIter1 __end1,
 			     _IIter2 __begin2, _IIter2 __end2,
-			     _OutputIterator __out)
+			     _OutputIterator ___out)
     {
       typedef typename std::iterator_traits<_IIter1>::value_type _ValueType1;
       typedef typename std::iterator_traits<_IIter2>::value_type _ValueType2;
 
       return __set_symmetric_difference_switch(
-	       __begin1, __end1, __begin2, __end2, __out,
+	       __begin1, __end1, __begin2, __end2, ___out,
 	       __gnu_parallel::_Less<_ValueType1, _ValueType2>(),
 	       std::__iterator_category(__begin1),
 	       std::__iterator_category(__begin2),
-	       std::__iterator_category(__out));
+	       std::__iterator_category(___out));
     }
 
   // Public interface.
@@ -619,13 +619,13 @@ namespace __parallel
     inline _OutputIterator
     set_symmetric_difference(_IIter1 __begin1, _IIter1 __end1,
 			     _IIter2 __begin2, _IIter2 __end2,
-			     _OutputIterator __out, _Predicate __pred)
+			     _OutputIterator ___out, _Predicate __pred)
     {
       return __set_symmetric_difference_switch(
-	       __begin1, __end1, __begin2, __end2, __out, __pred,
+	       __begin1, __end1, __begin2, __end2, ___out, __pred,
 	       std::__iterator_category(__begin1),
 	       std::__iterator_category(__begin2),
-	       std::__iterator_category(__out));
+	       std::__iterator_category(___out));
     }
 
   // Sequential fallback.
@@ -634,9 +634,9 @@ namespace __parallel
     inline _OutputIterator
     set_difference(_IIter1 __begin1, _IIter1 __end1,
 		   _IIter2 __begin2, _IIter2 __end2,
-		   _OutputIterator __out, __gnu_parallel::sequential_tag)
+		   _OutputIterator ___out, __gnu_parallel::sequential_tag)
     { return _GLIBCXX_STD_A::set_difference(
-	       __begin1,__end1, __begin2, __end2, __out); }
+	       __begin1,__end1, __begin2, __end2, ___out); }
 
   // Sequential fallback.
   template<typename _IIter1, typename _IIter2,
@@ -644,10 +644,10 @@ namespace __parallel
     inline _OutputIterator
     set_difference(_IIter1 __begin1, _IIter1 __end1,
 		   _IIter2 __begin2, _IIter2 __end2,
-		   _OutputIterator __out, _Predicate __pred,
+		   _OutputIterator ___out, _Predicate __pred,
 		   __gnu_parallel::sequential_tag)
     { return _GLIBCXX_STD_A::set_difference(__begin1, __end1,
-					    __begin2, __end2, __out, __pred); }
+					    __begin2, __end2, ___out, __pred); }
 
   // Sequential fallback for input iterator case.
   template<typename _IIter1, typename _IIter2, typename _Predicate,
@@ -692,17 +692,17 @@ namespace __parallel
     inline _OutputIterator
     set_difference(_IIter1 __begin1, _IIter1 __end1,
 		   _IIter2 __begin2, _IIter2 __end2,
-		   _OutputIterator __out)
+		   _OutputIterator ___out)
     {
       typedef typename std::iterator_traits<_IIter1>::value_type _ValueType1;
       typedef typename std::iterator_traits<_IIter2>::value_type _ValueType2;
 
       return __set_difference_switch(
-	       __begin1, __end1, __begin2, __end2, __out,
+	       __begin1, __end1, __begin2, __end2, ___out,
 	       __gnu_parallel::_Less<_ValueType1, _ValueType2>(),
 	       std::__iterator_category(__begin1),
 	       std::__iterator_category(__begin2),
-	       std::__iterator_category(__out));
+	       std::__iterator_category(___out));
     }
 
   // Public interface
@@ -711,13 +711,13 @@ namespace __parallel
     inline _OutputIterator
     set_difference(_IIter1 __begin1, _IIter1 __end1,
 		   _IIter2 __begin2, _IIter2 __end2,
-		   _OutputIterator __out, _Predicate __pred)
+		   _OutputIterator ___out, _Predicate __pred)
     {
       return __set_difference_switch(
-	       __begin1, __end1, __begin2, __end2, __out, __pred,
+	       __begin1, __end1, __begin2, __end2, ___out, __pred,
 	       std::__iterator_category(__begin1),
 	       std::__iterator_category(__begin2),
-	       std::__iterator_category(__out));
+	       std::__iterator_category(___out));
     }
 
   // Sequential fallback
diff --git a/libstdc++-v3/include/parallel/multiway_merge.h b/libstdc++-v3/include/parallel/multiway_merge.h
index 334abdacc52..01a81039e00 100644
--- a/libstdc++-v3/include/parallel/multiway_merge.h
+++ b/libstdc++-v3/include/parallel/multiway_merge.h
@@ -1372,7 +1372,7 @@ namespace __gnu_parallel
    *     for (int __j = 0; __i < 10; ++__j)
    *       sequences[__i][__j] = __j;
    *
-   *   int __out[33];
+   *   int ___out[33];
    *   std::vector<std::pair<int*> > seqs;
    *   for (int __i = 0; __i < 10; ++__i)
    *     { seqs.push(std::make_pair<int*>(sequences[__i],
@@ -1733,7 +1733,7 @@ namespace __gnu_parallel
    *     for (int __j = 0; __i < 11; ++__j)
    *       sequences[__i][__j] = __j; // __last one is sentinel!
    *
-   *   int __out[33];
+   *   int ___out[33];
    *   std::vector<std::pair<int*> > seqs;
    *   for (int __i = 0; __i < 10; ++__i)
    *     { seqs.push(std::make_pair<int*>(sequences[__i],
diff --git a/libstdc++-v3/include/parallel/set_operations.h b/libstdc++-v3/include/parallel/set_operations.h
index ed5cb6fa5ed..f858da8e53a 100644
--- a/libstdc++-v3/include/parallel/set_operations.h
+++ b/libstdc++-v3/include/parallel/set_operations.h
@@ -130,12 +130,12 @@ namespace __gnu_parallel
       }
 
       _OutputIterator
-      __first_empty(_IIter __c, _IIter __d, _OutputIterator __out) const
-      { return std::copy(__c, __d, __out); }
+      __first_empty(_IIter __c, _IIter __d, _OutputIterator ___out) const
+      { return std::copy(__c, __d, ___out); }
 
       _OutputIterator
-      __second_empty(_IIter __a, _IIter __b, _OutputIterator __out) const
-      { return std::copy(__a, __b, __out); }
+      __second_empty(_IIter __a, _IIter __b, _OutputIterator ___out) const
+      { return std::copy(__a, __b, ___out); }
     };
 
 
@@ -198,12 +198,12 @@ namespace __gnu_parallel
       }
 
       _OutputIterator
-      __first_empty(_IIter, _IIter, _OutputIterator __out) const
-      { return __out; }
+      __first_empty(_IIter, _IIter, _OutputIterator ___out) const
+      { return ___out; }
 
       _OutputIterator
-      __second_empty(_IIter __a, _IIter __b, _OutputIterator __out) const
-      { return std::copy(__a, __b, __out); }
+      __second_empty(_IIter __a, _IIter __b, _OutputIterator ___out) const
+      { return std::copy(__a, __b, ___out); }
     };
 
 
@@ -265,12 +265,12 @@ namespace __gnu_parallel
       }
 
       _OutputIterator
-      __first_empty(_IIter, _IIter, _OutputIterator __out) const
-      { return __out; }
+      __first_empty(_IIter, _IIter, _OutputIterator ___out) const
+      { return ___out; }
 
       _OutputIterator
-      __second_empty(_IIter, _IIter, _OutputIterator __out) const
-      { return __out; }
+      __second_empty(_IIter, _IIter, _OutputIterator ___out) const
+      { return ___out; }
     };
 
   template<class _IIter, class _OutputIterator, class _Compare>
@@ -335,12 +335,12 @@ namespace __gnu_parallel
       }
 
       _OutputIterator
-      __first_empty(_IIter __c, _IIter __d, _OutputIterator __out) const
-      { return std::copy(__c, __d, __out); }
+      __first_empty(_IIter __c, _IIter __d, _OutputIterator ___out) const
+      { return std::copy(__c, __d, ___out); }
 
       _OutputIterator
-      __second_empty(_IIter __a, _IIter __b, _OutputIterator __out) const
-      { return std::copy(__a, __b, __out); }
+      __second_empty(_IIter __a, _IIter __b, _OutputIterator ___out) const
+      { return std::copy(__a, __b, ___out); }
     };
 
   template<typename _IIter,
diff --git a/libstdc++-v3/include/parallel/unique_copy.h b/libstdc++-v3/include/parallel/unique_copy.h
index 7db26e22b99..2ec43a057c4 100644
--- a/libstdc++-v3/include/parallel/unique_copy.h
+++ b/libstdc++-v3/include/parallel/unique_copy.h
@@ -85,7 +85,7 @@ namespace __gnu_parallel
 	// Check for length without duplicates
 	// Needed for position in output
 	_DifferenceType __i = 0;
-	_OutputIterator __out = __result;
+	_OutputIterator ___out = __result;
 
 	if (__iam == 0)
           {
@@ -93,7 +93,7 @@ namespace __gnu_parallel
             __end = __borders[__iam + 1];
 
             ++__i;
-            *__out++ = *__first;
+            *___out++ = *__first;
 
             for (_IIter __iter = __first + __begin; __iter < __first + __end;
 		 ++__iter)
@@ -101,7 +101,7 @@ namespace __gnu_parallel
         	if (!__binary_pred(*__iter, *(__iter - 1)))
                   {
                     ++__i;
-                    *__out++ = *__iter;
+                    *___out++ = *__iter;
                   }
               }
           }
diff --git a/libstdc++-v3/include/std/istream b/libstdc++-v3/include/std/istream
index 109564b3c0d..85c0b7bac22 100644
--- a/libstdc++-v3/include/std/istream
+++ b/libstdc++-v3/include/std/istream
@@ -738,7 +738,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
   ///@{
   /**
    *  @brief  Character extractors
-   *  @param  __in  An input stream.
+   *  @param  ___in  An input stream.
    *  @param  __c  A character reference.
    *  @return  in
    *
@@ -749,17 +749,17 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
   */
   template<typename _CharT, typename _Traits>
     basic_istream<_CharT, _Traits>&
-    operator>>(basic_istream<_CharT, _Traits>& __in, _CharT& __c);
+    operator>>(basic_istream<_CharT, _Traits>& ___in, _CharT& __c);
 
   template<class _Traits>
     inline basic_istream<char, _Traits>&
-    operator>>(basic_istream<char, _Traits>& __in, unsigned char& __c)
-    { return (__in >> reinterpret_cast<char&>(__c)); }
+    operator>>(basic_istream<char, _Traits>& ___in, unsigned char& __c)
+    { return (___in >> reinterpret_cast<char&>(__c)); }
 
   template<class _Traits>
     inline basic_istream<char, _Traits>&
-    operator>>(basic_istream<char, _Traits>& __in, signed char& __c)
-    { return (__in >> reinterpret_cast<char&>(__c)); }
+    operator>>(basic_istream<char, _Traits>& ___in, signed char& __c)
+    { return (___in >> reinterpret_cast<char&>(__c)); }
   ///@}
 
 
@@ -772,9 +772,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
   ///@{
   /**
    *  @brief  Character string extractors
-   *  @param  __in  An input stream.
+   *  @param  ___in  An input stream.
    *  @param  __s  A character array (or a pointer to an array before C++20).
-   *  @return  __in
+   *  @return  ___in
    *
    *  Behaves like one of the formatted arithmetic extractors described in
    *  `std::basic_istream`.  After constructing a sentry object with good
@@ -800,7 +800,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
   template<typename _CharT, typename _Traits>
     __attribute__((__nonnull__(2), __access__(__write_only__, 2)))
     inline basic_istream<_CharT, _Traits>&
-    operator>>(basic_istream<_CharT, _Traits>& __in, _CharT* __s)
+    operator>>(basic_istream<_CharT, _Traits>& ___in, _CharT* __s)
     {
 #ifdef __OPTIMIZE__
       // Function inlining might make the buffer size known, allowing us to
@@ -811,22 +811,22 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	  // There is not even space for the required null terminator.
 	  __glibcxx_assert(__n >= sizeof(_CharT));
 	  // No point calling __istream_extract, but still need to reset width.
-	  __in.width(0);
-	  __in.setstate(ios_base::failbit);
+	  ___in.width(0);
+	  ___in.setstate(ios_base::failbit);
 	}
       else if (__n != (size_t)-1)
 	{
 	  __n /= sizeof(_CharT);
-	  streamsize __w = __in.width();
-	  std::__istream_extract(__in, __s, __n);
-	  if (__in.good() && (__w <= 0 || __n < __w))
+	  streamsize __w = ___in.width();
+	  std::__istream_extract(___in, __s, __n);
+	  if (___in.good() && (__w <= 0 || __n < __w))
 	    {
 	      // Stopped extracting early to avoid overflowing the buffer,
 	      // but might have stopped anyway (and set eofbit) if at EOF.
-	      const typename _Traits::int_type __c = __in.rdbuf()->sgetc();
+	      const typename _Traits::int_type __c = ___in.rdbuf()->sgetc();
 	      const bool __eof = _Traits::eq_int_type(__c, _Traits::eof());
 	      if (__builtin_expect(__eof, true)) // Assume EOF, not overflow.
-		__in.setstate(ios_base::eofbit);
+		___in.setstate(ios_base::eofbit);
 	    }
 	}
       else
@@ -835,43 +835,43 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	  // Buffer size is unknown, have to assume it's huge.
 	  streamsize __n = __gnu_cxx::__numeric_traits<streamsize>::__max;
 	  __n /= sizeof(_CharT);
-	  std::__istream_extract(__in, __s, __n);
+	  std::__istream_extract(___in, __s, __n);
 	}
-      return __in;
+      return ___in;
     }
 
   template<class _Traits>
     __attribute__((__nonnull__(2), __access__(__write_only__, 2)))
     inline basic_istream<char, _Traits>&
-    operator>>(basic_istream<char, _Traits>& __in, unsigned char* __s)
-    { return __in >> reinterpret_cast<char*>(__s); }
+    operator>>(basic_istream<char, _Traits>& ___in, unsigned char* __s)
+    { return ___in >> reinterpret_cast<char*>(__s); }
 
   template<class _Traits>
     __attribute__((__nonnull__(2), __access__(__write_only__, 2)))
     inline basic_istream<char, _Traits>&
-    operator>>(basic_istream<char, _Traits>& __in, signed char* __s)
-    { return __in >> reinterpret_cast<char*>(__s); }
+    operator>>(basic_istream<char, _Traits>& ___in, signed char* __s)
+    { return ___in >> reinterpret_cast<char*>(__s); }
 #else
   // _GLIBCXX_RESOLVE_LIB_DEFECTS
   // 2499. operator>>(istream&, char*) makes it hard to avoid buffer overflows
   template<typename _CharT, typename _Traits, size_t _Num>
     inline basic_istream<_CharT, _Traits>&
-    operator>>(basic_istream<_CharT, _Traits>& __in, _CharT (&__s)[_Num])
+    operator>>(basic_istream<_CharT, _Traits>& ___in, _CharT (&__s)[_Num])
     {
       static_assert(_Num <= __gnu_cxx::__numeric_traits<streamsize>::__max);
-      std::__istream_extract(__in, __s, _Num);
-      return __in;
+      std::__istream_extract(___in, __s, _Num);
+      return ___in;
     }
 
   template<class _Traits, size_t _Num>
     inline basic_istream<char, _Traits>&
-    operator>>(basic_istream<char, _Traits>& __in, unsigned char (&__s)[_Num])
-    { return __in >> reinterpret_cast<char(&)[_Num]>(__s); }
+    operator>>(basic_istream<char, _Traits>& ___in, unsigned char (&__s)[_Num])
+    { return ___in >> reinterpret_cast<char(&)[_Num]>(__s); }
 
   template<class _Traits, size_t _Num>
     inline basic_istream<char, _Traits>&
-    operator>>(basic_istream<char, _Traits>& __in, signed char (&__s)[_Num])
-    { return __in >> reinterpret_cast<char(&)[_Num]>(__s); }
+    operator>>(basic_istream<char, _Traits>& ___in, signed char (&__s)[_Num])
+    { return ___in >> reinterpret_cast<char(&)[_Num]>(__s); }
 #endif
   ///@}
 
diff --git a/libstdc++-v3/include/std/ostream b/libstdc++-v3/include/std/ostream
index 3569ee1a722..d7fb2c27434 100644
--- a/libstdc++-v3/include/std/ostream
+++ b/libstdc++-v3/include/std/ostream
@@ -495,14 +495,14 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
   ///@{
   /**
    *  @brief  Character inserters
-   *  @param  __out  An output stream.
+   *  @param  ___out  An output stream.
    *  @param  __c  A character.
    *  @return  out
    *
    *  Behaves like one of the formatted arithmetic inserters described in
    *  std::basic_ostream.  After constructing a sentry object with good
    *  status, this function inserts a single character and any required
-   *  padding (as determined by [22.2.2.2.2]).  @c __out.width(0) is then
+   *  padding (as determined by [22.2.2.2.2]).  @c ___out.width(0) is then
    *  called.
    *
    *  If @p __c is of type @c char and the character type of the stream is not
@@ -510,30 +510,30 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
   */
   template<typename _CharT, typename _Traits>
     inline basic_ostream<_CharT, _Traits>&
-    operator<<(basic_ostream<_CharT, _Traits>& __out, _CharT __c)
-    { return __ostream_insert(__out, &__c, 1); }
+    operator<<(basic_ostream<_CharT, _Traits>& ___out, _CharT __c)
+    { return __ostream_insert(___out, &__c, 1); }
 
   template<typename _CharT, typename _Traits>
     inline basic_ostream<_CharT, _Traits>&
-    operator<<(basic_ostream<_CharT, _Traits>& __out, char __c)
-    { return (__out << __out.widen(__c)); }
+    operator<<(basic_ostream<_CharT, _Traits>& ___out, char __c)
+    { return (___out << ___out.widen(__c)); }
 
   // Specialization
   template<typename _Traits>
     inline basic_ostream<char, _Traits>&
-    operator<<(basic_ostream<char, _Traits>& __out, char __c)
-    { return __ostream_insert(__out, &__c, 1); }
+    operator<<(basic_ostream<char, _Traits>& ___out, char __c)
+    { return __ostream_insert(___out, &__c, 1); }
 
   // Signed and unsigned
   template<typename _Traits>
     inline basic_ostream<char, _Traits>&
-    operator<<(basic_ostream<char, _Traits>& __out, signed char __c)
-    { return (__out << static_cast<char>(__c)); }
+    operator<<(basic_ostream<char, _Traits>& ___out, signed char __c)
+    { return (___out << static_cast<char>(__c)); }
 
   template<typename _Traits>
     inline basic_ostream<char, _Traits>&
-    operator<<(basic_ostream<char, _Traits>& __out, unsigned char __c)
-    { return (__out << static_cast<char>(__c)); }
+    operator<<(basic_ostream<char, _Traits>& ___out, unsigned char __c)
+    { return (___out << static_cast<char>(__c)); }
 
 #if __cplusplus > 201703L
   // The following deleted overloads prevent formatting character values as
@@ -578,7 +578,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
   ///@{
   /**
    *  @brief  String inserters
-   *  @param  __out  An output stream.
+   *  @param  ___out  An output stream.
    *  @param  __s  A character string.
    *  @return  out
    *  @pre  @p __s must be a non-NULL pointer
@@ -587,47 +587,47 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
    *  std::basic_ostream.  After constructing a sentry object with good
    *  status, this function inserts @c traits::length(__s) characters starting
    *  at @p __s, widened if necessary, followed by any required padding (as
-   *  determined by [22.2.2.2.2]).  @c __out.width(0) is then called.
+   *  determined by [22.2.2.2.2]).  @c ___out.width(0) is then called.
   */
   template<typename _CharT, typename _Traits>
     inline basic_ostream<_CharT, _Traits>&
-    operator<<(basic_ostream<_CharT, _Traits>& __out, const _CharT* __s)
+    operator<<(basic_ostream<_CharT, _Traits>& ___out, const _CharT* __s)
     {
       if (!__s)
-	__out.setstate(ios_base::badbit);
+	___out.setstate(ios_base::badbit);
       else
-	__ostream_insert(__out, __s,
+	__ostream_insert(___out, __s,
 			 static_cast<streamsize>(_Traits::length(__s)));
-      return __out;
+      return ___out;
     }
 
   template<typename _CharT, typename _Traits>
     basic_ostream<_CharT, _Traits> &
-    operator<<(basic_ostream<_CharT, _Traits>& __out, const char* __s);
+    operator<<(basic_ostream<_CharT, _Traits>& ___out, const char* __s);
 
   // Partial specializations
   template<typename _Traits>
     inline basic_ostream<char, _Traits>&
-    operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
+    operator<<(basic_ostream<char, _Traits>& ___out, const char* __s)
     {
       if (!__s)
-	__out.setstate(ios_base::badbit);
+	___out.setstate(ios_base::badbit);
       else
-	__ostream_insert(__out, __s,
+	__ostream_insert(___out, __s,
 			 static_cast<streamsize>(_Traits::length(__s)));
-      return __out;
+      return ___out;
     }
 
   // Signed and unsigned
   template<typename _Traits>
     inline basic_ostream<char, _Traits>&
-    operator<<(basic_ostream<char, _Traits>& __out, const signed char* __s)
-    { return (__out << reinterpret_cast<const char*>(__s)); }
+    operator<<(basic_ostream<char, _Traits>& ___out, const signed char* __s)
+    { return (___out << reinterpret_cast<const char*>(__s)); }
 
   template<typename _Traits>
     inline basic_ostream<char, _Traits> &
-    operator<<(basic_ostream<char, _Traits>& __out, const unsigned char* __s)
-    { return (__out << reinterpret_cast<const char*>(__s)); }
+    operator<<(basic_ostream<char, _Traits>& ___out, const unsigned char* __s)
+    { return (___out << reinterpret_cast<const char*>(__s)); }
 
 #if __cplusplus > 201703L
    // The following deleted overloads prevent formatting strings as
diff --git a/libstdc++-v3/include/std/thread b/libstdc++-v3/include/std/thread
index 886994c1320..7ffdc4ae688 100644
--- a/libstdc++-v3/include/std/thread
+++ b/libstdc++-v3/include/std/thread
@@ -89,12 +89,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 
   template<class _CharT, class _Traits>
     inline basic_ostream<_CharT, _Traits>&
-    operator<<(basic_ostream<_CharT, _Traits>& __out, thread::id __id)
+    operator<<(basic_ostream<_CharT, _Traits>& ___out, thread::id __id)
     {
       if (__id == thread::id())
-	return __out << "thread::id of a non-executing thread";
+	return ___out << "thread::id of a non-executing thread";
       else
-	return __out << __id._M_thread;
+	return ___out << __id._M_thread;
     }
 
 #ifdef __cpp_lib_jthread
diff --git a/libstdc++-v3/include/std/tuple b/libstdc++-v3/include/std/tuple
index b02b0bfbd59..ea2f4ba38fc 100644
--- a/libstdc++-v3/include/std/tuple
+++ b/libstdc++-v3/include/std/tuple
@@ -302,18 +302,18 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 
       template<typename... _UElements>
 	constexpr
-	_Tuple_impl(const _Tuple_impl<_Idx, _UElements...>& __in)
-	: _Inherited(_Tuple_impl<_Idx, _UElements...>::_M_tail(__in)),
-	  _Base(_Tuple_impl<_Idx, _UElements...>::_M_head(__in))
+	_Tuple_impl(const _Tuple_impl<_Idx, _UElements...>& ___in)
+	: _Inherited(_Tuple_impl<_Idx, _UElements...>::_M_tail(___in)),
+	  _Base(_Tuple_impl<_Idx, _UElements...>::_M_head(___in))
 	{ }
 
       template<typename _UHead, typename... _UTails>
 	constexpr
-	_Tuple_impl(_Tuple_impl<_Idx, _UHead, _UTails...>&& __in)
+	_Tuple_impl(_Tuple_impl<_Idx, _UHead, _UTails...>&& ___in)
 	: _Inherited(std::move
-		     (_Tuple_impl<_Idx, _UHead, _UTails...>::_M_tail(__in))),
+		     (_Tuple_impl<_Idx, _UHead, _UTails...>::_M_tail(___in))),
 	  _Base(std::forward<_UHead>
-		(_Tuple_impl<_Idx, _UHead, _UTails...>::_M_head(__in)))
+		(_Tuple_impl<_Idx, _UHead, _UTails...>::_M_head(___in)))
 	{ }
 
       template<typename _Alloc>
@@ -344,70 +344,70 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
       template<typename _Alloc>
 	_GLIBCXX20_CONSTEXPR
 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
-		    const _Tuple_impl& __in)
-	: _Inherited(__tag, __a, _M_tail(__in)),
-	  _Base(__use_alloc<_Head, _Alloc, _Head>(__a), _M_head(__in))
+		    const _Tuple_impl& ___in)
+	: _Inherited(__tag, __a, _M_tail(___in)),
+	  _Base(__use_alloc<_Head, _Alloc, _Head>(__a), _M_head(___in))
 	{ }
 
       template<typename _Alloc>
 	_GLIBCXX20_CONSTEXPR
 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
-		    _Tuple_impl&& __in)
-	: _Inherited(__tag, __a, std::move(_M_tail(__in))),
+		    _Tuple_impl&& ___in)
+	: _Inherited(__tag, __a, std::move(_M_tail(___in))),
 	  _Base(__use_alloc<_Head, _Alloc, _Head>(__a),
-		std::forward<_Head>(_M_head(__in)))
+		std::forward<_Head>(_M_head(___in)))
 	{ }
 
       template<typename _Alloc, typename _UHead, typename... _UTails>
 	_GLIBCXX20_CONSTEXPR
 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
-		    const _Tuple_impl<_Idx, _UHead, _UTails...>& __in)
+		    const _Tuple_impl<_Idx, _UHead, _UTails...>& ___in)
 	: _Inherited(__tag, __a,
-		     _Tuple_impl<_Idx, _UHead, _UTails...>::_M_tail(__in)),
+		     _Tuple_impl<_Idx, _UHead, _UTails...>::_M_tail(___in)),
 	  _Base(__use_alloc<_Head, _Alloc, const _UHead&>(__a),
-		_Tuple_impl<_Idx, _UHead, _UTails...>::_M_head(__in))
+		_Tuple_impl<_Idx, _UHead, _UTails...>::_M_head(___in))
 	{ }
 
       template<typename _Alloc, typename _UHead, typename... _UTails>
 	_GLIBCXX20_CONSTEXPR
 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
-		    _Tuple_impl<_Idx, _UHead, _UTails...>&& __in)
+		    _Tuple_impl<_Idx, _UHead, _UTails...>&& ___in)
 	: _Inherited(__tag, __a, std::move
-		     (_Tuple_impl<_Idx, _UHead, _UTails...>::_M_tail(__in))),
+		     (_Tuple_impl<_Idx, _UHead, _UTails...>::_M_tail(___in))),
 	  _Base(__use_alloc<_Head, _Alloc, _UHead>(__a),
 		std::forward<_UHead>
-		(_Tuple_impl<_Idx, _UHead, _UTails...>::_M_head(__in)))
+		(_Tuple_impl<_Idx, _UHead, _UTails...>::_M_head(___in)))
 	{ }
 
       template<typename... _UElements>
 	_GLIBCXX20_CONSTEXPR
 	void
-	_M_assign(const _Tuple_impl<_Idx, _UElements...>& __in)
+	_M_assign(const _Tuple_impl<_Idx, _UElements...>& ___in)
 	{
-	  _M_head(*this) = _Tuple_impl<_Idx, _UElements...>::_M_head(__in);
+	  _M_head(*this) = _Tuple_impl<_Idx, _UElements...>::_M_head(___in);
 	  _M_tail(*this)._M_assign(
-	      _Tuple_impl<_Idx, _UElements...>::_M_tail(__in));
+	      _Tuple_impl<_Idx, _UElements...>::_M_tail(___in));
 	}
 
       template<typename _UHead, typename... _UTails>
 	_GLIBCXX20_CONSTEXPR
 	void
-	_M_assign(_Tuple_impl<_Idx, _UHead, _UTails...>&& __in)
+	_M_assign(_Tuple_impl<_Idx, _UHead, _UTails...>&& ___in)
 	{
 	  _M_head(*this) = std::forward<_UHead>
-	    (_Tuple_impl<_Idx, _UHead, _UTails...>::_M_head(__in));
+	    (_Tuple_impl<_Idx, _UHead, _UTails...>::_M_head(___in));
 	  _M_tail(*this)._M_assign(
-	      std::move(_Tuple_impl<_Idx, _UHead, _UTails...>::_M_tail(__in)));
+	      std::move(_Tuple_impl<_Idx, _UHead, _UTails...>::_M_tail(___in)));
 	}
 
     protected:
       _GLIBCXX20_CONSTEXPR
       void
-      _M_swap(_Tuple_impl& __in)
+      _M_swap(_Tuple_impl& ___in)
       {
 	using std::swap;
-	swap(_M_head(*this), _M_head(__in));
-	_Inherited::_M_swap(_M_tail(__in));
+	swap(_M_head(*this), _M_head(___in));
+	_Inherited::_M_swap(_M_tail(___in));
       }
     };
 
@@ -451,22 +451,22 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
       _Tuple_impl(_Tuple_impl&&) = default;
 #else
       constexpr
-      _Tuple_impl(_Tuple_impl&& __in)
+      _Tuple_impl(_Tuple_impl&& ___in)
       noexcept(is_nothrow_move_constructible<_Head>::value)
-      : _Base(static_cast<_Base&&>(__in))
+      : _Base(static_cast<_Base&&>(___in))
       { }
 #endif
 
       template<typename _UHead>
 	constexpr
-	_Tuple_impl(const _Tuple_impl<_Idx, _UHead>& __in)
-	: _Base(_Tuple_impl<_Idx, _UHead>::_M_head(__in))
+	_Tuple_impl(const _Tuple_impl<_Idx, _UHead>& ___in)
+	: _Base(_Tuple_impl<_Idx, _UHead>::_M_head(___in))
 	{ }
 
       template<typename _UHead>
 	constexpr
-	_Tuple_impl(_Tuple_impl<_Idx, _UHead>&& __in)
-	: _Base(std::forward<_UHead>(_Tuple_impl<_Idx, _UHead>::_M_head(__in)))
+	_Tuple_impl(_Tuple_impl<_Idx, _UHead>&& ___in)
+	: _Base(std::forward<_UHead>(_Tuple_impl<_Idx, _UHead>::_M_head(___in)))
 	{ }
 
       template<typename _Alloc>
@@ -493,58 +493,58 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
       template<typename _Alloc>
 	_GLIBCXX20_CONSTEXPR
 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
-		    const _Tuple_impl& __in)
-	: _Base(__use_alloc<_Head, _Alloc, const _Head&>(__a), _M_head(__in))
+		    const _Tuple_impl& ___in)
+	: _Base(__use_alloc<_Head, _Alloc, const _Head&>(__a), _M_head(___in))
 	{ }
 
       template<typename _Alloc>
 	_GLIBCXX20_CONSTEXPR
 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
-		    _Tuple_impl&& __in)
+		    _Tuple_impl&& ___in)
 	: _Base(__use_alloc<_Head, _Alloc, _Head>(__a),
-		std::forward<_Head>(_M_head(__in)))
+		std::forward<_Head>(_M_head(___in)))
 	{ }
 
       template<typename _Alloc, typename _UHead>
 	_GLIBCXX20_CONSTEXPR
 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
-		    const _Tuple_impl<_Idx, _UHead>& __in)
+		    const _Tuple_impl<_Idx, _UHead>& ___in)
 	: _Base(__use_alloc<_Head, _Alloc, const _UHead&>(__a),
-		_Tuple_impl<_Idx, _UHead>::_M_head(__in))
+		_Tuple_impl<_Idx, _UHead>::_M_head(___in))
 	{ }
 
       template<typename _Alloc, typename _UHead>
 	_GLIBCXX20_CONSTEXPR
 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
-		    _Tuple_impl<_Idx, _UHead>&& __in)
+		    _Tuple_impl<_Idx, _UHead>&& ___in)
 	: _Base(__use_alloc<_Head, _Alloc, _UHead>(__a),
-		std::forward<_UHead>(_Tuple_impl<_Idx, _UHead>::_M_head(__in)))
+		std::forward<_UHead>(_Tuple_impl<_Idx, _UHead>::_M_head(___in)))
 	{ }
 
       template<typename _UHead>
 	_GLIBCXX20_CONSTEXPR
 	void
-	_M_assign(const _Tuple_impl<_Idx, _UHead>& __in)
+	_M_assign(const _Tuple_impl<_Idx, _UHead>& ___in)
 	{
-	  _M_head(*this) = _Tuple_impl<_Idx, _UHead>::_M_head(__in);
+	  _M_head(*this) = _Tuple_impl<_Idx, _UHead>::_M_head(___in);
 	}
 
       template<typename _UHead>
 	_GLIBCXX20_CONSTEXPR
 	void
-	_M_assign(_Tuple_impl<_Idx, _UHead>&& __in)
+	_M_assign(_Tuple_impl<_Idx, _UHead>&& ___in)
 	{
 	  _M_head(*this)
-	    = std::forward<_UHead>(_Tuple_impl<_Idx, _UHead>::_M_head(__in));
+	    = std::forward<_UHead>(_Tuple_impl<_Idx, _UHead>::_M_head(___in));
 	}
 
     protected:
       _GLIBCXX20_CONSTEXPR
       void
-      _M_swap(_Tuple_impl& __in)
+      _M_swap(_Tuple_impl& ___in)
       {
 	using std::swap;
-	swap(_M_head(*this), _M_head(__in));
+	swap(_M_head(*this), _M_head(___in));
       }
     };
 
@@ -760,9 +760,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 			   && !__use_other_ctor<const tuple<_UElements...>&>(),
 	       _ImplicitCtor<_Valid, const _UElements&...> = true>
 	constexpr
-	tuple(const tuple<_UElements...>& __in)
+	tuple(const tuple<_UElements...>& ___in)
 	noexcept(__nothrow_constructible<const _UElements&...>())
-	: _Inherited(static_cast<const _Tuple_impl<0, _UElements...>&>(__in))
+	: _Inherited(static_cast<const _Tuple_impl<0, _UElements...>&>(___in))
 	{ }
 
       template<typename... _UElements,
@@ -770,9 +770,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 			   && !__use_other_ctor<const tuple<_UElements...>&>(),
 	       _ExplicitCtor<_Valid, const _UElements&...> = false>
 	explicit constexpr
-	tuple(const tuple<_UElements...>& __in)
+	tuple(const tuple<_UElements...>& ___in)
 	noexcept(__nothrow_constructible<const _UElements&...>())
-	: _Inherited(static_cast<const _Tuple_impl<0, _UElements...>&>(__in))
+	: _Inherited(static_cast<const _Tuple_impl<0, _UElements...>&>(___in))
 	{ }
 
       template<typename... _UElements,
@@ -780,18 +780,18 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 			     && !__use_other_ctor<tuple<_UElements...>&&>(),
 	       _ImplicitCtor<_Valid, _UElements...> = true>
 	constexpr
-	tuple(tuple<_UElements...>&& __in)
+	tuple(tuple<_UElements...>&& ___in)
 	noexcept(__nothrow_constructible<_UElements...>())
-	: _Inherited(static_cast<_Tuple_impl<0, _UElements...>&&>(__in)) { }
+	: _Inherited(static_cast<_Tuple_impl<0, _UElements...>&&>(___in)) { }
 
       template<typename... _UElements,
 	       bool _Valid = (sizeof...(_Elements) == sizeof...(_UElements))
 			     && !__use_other_ctor<tuple<_UElements...>&&>(),
 	       _ExplicitCtor<_Valid, _UElements...> = false>
 	explicit constexpr
-	tuple(tuple<_UElements...>&& __in)
+	tuple(tuple<_UElements...>&& ___in)
 	noexcept(__nothrow_constructible<_UElements...>())
-	: _Inherited(static_cast<_Tuple_impl<0, _UElements...>&&>(__in)) { }
+	: _Inherited(static_cast<_Tuple_impl<0, _UElements...>&&>(___in)) { }
 
       // Allocator-extended constructors.
 
@@ -844,13 +844,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 
       template<typename _Alloc>
 	_GLIBCXX20_CONSTEXPR
-	tuple(allocator_arg_t __tag, const _Alloc& __a, const tuple& __in)
-	: _Inherited(__tag, __a, static_cast<const _Inherited&>(__in)) { }
+	tuple(allocator_arg_t __tag, const _Alloc& __a, const tuple& ___in)
+	: _Inherited(__tag, __a, static_cast<const _Inherited&>(___in)) { }
 
       template<typename _Alloc>
 	_GLIBCXX20_CONSTEXPR
-	tuple(allocator_arg_t __tag, const _Alloc& __a, tuple&& __in)
-	: _Inherited(__tag, __a, static_cast<_Inherited&&>(__in)) { }
+	tuple(allocator_arg_t __tag, const _Alloc& __a, tuple&& ___in)
+	: _Inherited(__tag, __a, static_cast<_Inherited&&>(___in)) { }
 
       template<typename _Alloc, typename... _UElements,
 	       bool _Valid = (sizeof...(_Elements) == sizeof...(_UElements))
@@ -858,9 +858,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	       _ImplicitCtor<_Valid, const _UElements&...> = true>
 	_GLIBCXX20_CONSTEXPR
 	tuple(allocator_arg_t __tag, const _Alloc& __a,
-	      const tuple<_UElements...>& __in)
+	      const tuple<_UElements...>& ___in)
 	: _Inherited(__tag, __a,
-	             static_cast<const _Tuple_impl<0, _UElements...>&>(__in))
+	             static_cast<const _Tuple_impl<0, _UElements...>&>(___in))
 	{ }
 
       template<typename _Alloc, typename... _UElements,
@@ -870,9 +870,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	_GLIBCXX20_CONSTEXPR
 	explicit
 	tuple(allocator_arg_t __tag, const _Alloc& __a,
-	      const tuple<_UElements...>& __in)
+	      const tuple<_UElements...>& ___in)
 	: _Inherited(__tag, __a,
-	             static_cast<const _Tuple_impl<0, _UElements...>&>(__in))
+	             static_cast<const _Tuple_impl<0, _UElements...>&>(___in))
 	{ }
 
       template<typename _Alloc, typename... _UElements,
@@ -881,9 +881,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	       _ImplicitCtor<_Valid, _UElements...> = true>
 	_GLIBCXX20_CONSTEXPR
 	tuple(allocator_arg_t __tag, const _Alloc& __a,
-	      tuple<_UElements...>&& __in)
+	      tuple<_UElements...>&& ___in)
 	: _Inherited(__tag, __a,
-	             static_cast<_Tuple_impl<0, _UElements...>&&>(__in))
+	             static_cast<_Tuple_impl<0, _UElements...>&&>(___in))
 	{ }
 
       template<typename _Alloc, typename... _UElements,
@@ -893,9 +893,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	_GLIBCXX20_CONSTEXPR
 	explicit
 	tuple(allocator_arg_t __tag, const _Alloc& __a,
-	      tuple<_UElements...>&& __in)
+	      tuple<_UElements...>&& ___in)
 	: _Inherited(__tag, __a,
-	             static_cast<_Tuple_impl<0, _UElements...>&&>(__in))
+	             static_cast<_Tuple_impl<0, _UElements...>&&>(___in))
 	{ }
 
       // tuple assignment
@@ -904,10 +904,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
       tuple&
       operator=(typename conditional<__assignable<const _Elements&...>(),
 				     const tuple&,
-				     const __nonesuch&>::type __in)
+				     const __nonesuch&>::type ___in)
       noexcept(__nothrow_assignable<const _Elements&...>())
       {
-	this->_M_assign(__in);
+	this->_M_assign(___in);
 	return *this;
       }
 
@@ -915,39 +915,39 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
       tuple&
       operator=(typename conditional<__assignable<_Elements...>(),
 				     tuple&&,
-				     __nonesuch&&>::type __in)
+				     __nonesuch&&>::type ___in)
       noexcept(__nothrow_assignable<_Elements...>())
       {
-	this->_M_assign(std::move(__in));
+	this->_M_assign(std::move(___in));
 	return *this;
       }
 
       template<typename... _UElements>
 	_GLIBCXX20_CONSTEXPR
 	__enable_if_t<__assignable<const _UElements&...>(), tuple&>
-	operator=(const tuple<_UElements...>& __in)
+	operator=(const tuple<_UElements...>& ___in)
 	noexcept(__nothrow_assignable<const _UElements&...>())
 	{
-	  this->_M_assign(__in);
+	  this->_M_assign(___in);
 	  return *this;
 	}
 
       template<typename... _UElements>
 	_GLIBCXX20_CONSTEXPR
 	__enable_if_t<__assignable<_UElements...>(), tuple&>
-	operator=(tuple<_UElements...>&& __in)
+	operator=(tuple<_UElements...>&& ___in)
 	noexcept(__nothrow_assignable<_UElements...>())
 	{
-	  this->_M_assign(std::move(__in));
+	  this->_M_assign(std::move(___in));
 	  return *this;
 	}
 
       // tuple swap
       _GLIBCXX20_CONSTEXPR
       void
-      swap(tuple& __in)
+      swap(tuple& ___in)
       noexcept(__and_<__is_nothrow_swappable<_Elements>...>::value)
-      { _Inherited::_M_swap(__in); }
+      { _Inherited::_M_swap(___in); }
     };
 
 #if __cpp_deduction_guides >= 201606
@@ -1099,60 +1099,60 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
       template<typename _U1, typename _U2,
 	       _ImplicitCtor<true, const _U1&, const _U2&> = true>
 	constexpr
-	tuple(const tuple<_U1, _U2>& __in)
+	tuple(const tuple<_U1, _U2>& ___in)
 	noexcept(__nothrow_constructible<const _U1&, const _U2&>())
-	: _Inherited(static_cast<const _Tuple_impl<0, _U1, _U2>&>(__in)) { }
+	: _Inherited(static_cast<const _Tuple_impl<0, _U1, _U2>&>(___in)) { }
 
       template<typename _U1, typename _U2,
 	       _ExplicitCtor<true, const _U1&, const _U2&> = false>
 	explicit constexpr
-	tuple(const tuple<_U1, _U2>& __in)
+	tuple(const tuple<_U1, _U2>& ___in)
 	noexcept(__nothrow_constructible<const _U1&, const _U2&>())
-	: _Inherited(static_cast<const _Tuple_impl<0, _U1, _U2>&>(__in)) { }
+	: _Inherited(static_cast<const _Tuple_impl<0, _U1, _U2>&>(___in)) { }
 
       template<typename _U1, typename _U2,
 	       _ImplicitCtor<true, _U1, _U2> = true>
 	constexpr
-	tuple(tuple<_U1, _U2>&& __in)
+	tuple(tuple<_U1, _U2>&& ___in)
 	noexcept(__nothrow_constructible<_U1, _U2>())
-	: _Inherited(static_cast<_Tuple_impl<0, _U1, _U2>&&>(__in)) { }
+	: _Inherited(static_cast<_Tuple_impl<0, _U1, _U2>&&>(___in)) { }
 
       template<typename _U1, typename _U2,
 	       _ExplicitCtor<true, _U1, _U2> = false>
 	explicit constexpr
-	tuple(tuple<_U1, _U2>&& __in)
+	tuple(tuple<_U1, _U2>&& ___in)
 	noexcept(__nothrow_constructible<_U1, _U2>())
-	: _Inherited(static_cast<_Tuple_impl<0, _U1, _U2>&&>(__in)) { }
+	: _Inherited(static_cast<_Tuple_impl<0, _U1, _U2>&&>(___in)) { }
 
       template<typename _U1, typename _U2,
 	       _ImplicitCtor<true, const _U1&, const _U2&> = true>
 	constexpr
-	tuple(const pair<_U1, _U2>& __in)
+	tuple(const pair<_U1, _U2>& ___in)
 	noexcept(__nothrow_constructible<const _U1&, const _U2&>())
-	: _Inherited(__in.first, __in.second) { }
+	: _Inherited(___in.first, ___in.second) { }
 
       template<typename _U1, typename _U2,
 	       _ExplicitCtor<true, const _U1&, const _U2&> = false>
 	explicit constexpr
-	tuple(const pair<_U1, _U2>& __in)
+	tuple(const pair<_U1, _U2>& ___in)
 	noexcept(__nothrow_constructible<const _U1&, const _U2&>())
-	: _Inherited(__in.first, __in.second) { }
+	: _Inherited(___in.first, ___in.second) { }
 
       template<typename _U1, typename _U2,
 	       _ImplicitCtor<true, _U1, _U2> = true>
 	constexpr
-	tuple(pair<_U1, _U2>&& __in)
+	tuple(pair<_U1, _U2>&& ___in)
 	noexcept(__nothrow_constructible<_U1, _U2>())
-	: _Inherited(std::forward<_U1>(__in.first),
-		     std::forward<_U2>(__in.second)) { }
+	: _Inherited(std::forward<_U1>(___in.first),
+		     std::forward<_U2>(___in.second)) { }
 
       template<typename _U1, typename _U2,
 	       _ExplicitCtor<true, _U1, _U2> = false>
 	explicit constexpr
-	tuple(pair<_U1, _U2>&& __in)
+	tuple(pair<_U1, _U2>&& ___in)
 	noexcept(__nothrow_constructible<_U1, _U2>())
-	: _Inherited(std::forward<_U1>(__in.first),
-		     std::forward<_U2>(__in.second)) { }
+	: _Inherited(std::forward<_U1>(___in.first),
+		     std::forward<_U2>(___in.second)) { }
 
       // Allocator-extended constructors.
 
@@ -1202,21 +1202,21 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 
       template<typename _Alloc>
 	_GLIBCXX20_CONSTEXPR
-	tuple(allocator_arg_t __tag, const _Alloc& __a, const tuple& __in)
-	: _Inherited(__tag, __a, static_cast<const _Inherited&>(__in)) { }
+	tuple(allocator_arg_t __tag, const _Alloc& __a, const tuple& ___in)
+	: _Inherited(__tag, __a, static_cast<const _Inherited&>(___in)) { }
 
       template<typename _Alloc>
 	_GLIBCXX20_CONSTEXPR
-	tuple(allocator_arg_t __tag, const _Alloc& __a, tuple&& __in)
-	: _Inherited(__tag, __a, static_cast<_Inherited&&>(__in)) { }
+	tuple(allocator_arg_t __tag, const _Alloc& __a, tuple&& ___in)
+	: _Inherited(__tag, __a, static_cast<_Inherited&&>(___in)) { }
 
       template<typename _Alloc, typename _U1, typename _U2,
 	       _ImplicitCtor<true, const _U1&, const _U2&> = true>
 	_GLIBCXX20_CONSTEXPR
 	tuple(allocator_arg_t __tag, const _Alloc& __a,
-	      const tuple<_U1, _U2>& __in)
+	      const tuple<_U1, _U2>& ___in)
 	: _Inherited(__tag, __a,
-	             static_cast<const _Tuple_impl<0, _U1, _U2>&>(__in))
+	             static_cast<const _Tuple_impl<0, _U1, _U2>&>(___in))
 	{ }
 
       template<typename _Alloc, typename _U1, typename _U2,
@@ -1224,55 +1224,55 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	explicit
 	_GLIBCXX20_CONSTEXPR
 	tuple(allocator_arg_t __tag, const _Alloc& __a,
-	      const tuple<_U1, _U2>& __in)
+	      const tuple<_U1, _U2>& ___in)
 	: _Inherited(__tag, __a,
-	             static_cast<const _Tuple_impl<0, _U1, _U2>&>(__in))
+	             static_cast<const _Tuple_impl<0, _U1, _U2>&>(___in))
 	{ }
 
       template<typename _Alloc, typename _U1, typename _U2,
 	       _ImplicitCtor<true, _U1, _U2> = true>
 	_GLIBCXX20_CONSTEXPR
-	tuple(allocator_arg_t __tag, const _Alloc& __a, tuple<_U1, _U2>&& __in)
-	: _Inherited(__tag, __a, static_cast<_Tuple_impl<0, _U1, _U2>&&>(__in))
+	tuple(allocator_arg_t __tag, const _Alloc& __a, tuple<_U1, _U2>&& ___in)
+	: _Inherited(__tag, __a, static_cast<_Tuple_impl<0, _U1, _U2>&&>(___in))
 	{ }
 
       template<typename _Alloc, typename _U1, typename _U2,
 	       _ExplicitCtor<true, _U1, _U2> = false>
 	explicit
 	_GLIBCXX20_CONSTEXPR
-	tuple(allocator_arg_t __tag, const _Alloc& __a, tuple<_U1, _U2>&& __in)
-	: _Inherited(__tag, __a, static_cast<_Tuple_impl<0, _U1, _U2>&&>(__in))
+	tuple(allocator_arg_t __tag, const _Alloc& __a, tuple<_U1, _U2>&& ___in)
+	: _Inherited(__tag, __a, static_cast<_Tuple_impl<0, _U1, _U2>&&>(___in))
 	{ }
 
       template<typename _Alloc, typename _U1, typename _U2,
 	       _ImplicitCtor<true, const _U1&, const _U2&> = true>
 	_GLIBCXX20_CONSTEXPR
 	tuple(allocator_arg_t __tag, const _Alloc& __a,
-	      const pair<_U1, _U2>& __in)
-	: _Inherited(__tag, __a, __in.first, __in.second) { }
+	      const pair<_U1, _U2>& ___in)
+	: _Inherited(__tag, __a, ___in.first, ___in.second) { }
 
       template<typename _Alloc, typename _U1, typename _U2,
 	       _ExplicitCtor<true, const _U1&, const _U2&> = false>
 	explicit
 	_GLIBCXX20_CONSTEXPR
 	tuple(allocator_arg_t __tag, const _Alloc& __a,
-	      const pair<_U1, _U2>& __in)
-	: _Inherited(__tag, __a, __in.first, __in.second) { }
+	      const pair<_U1, _U2>& ___in)
+	: _Inherited(__tag, __a, ___in.first, ___in.second) { }
 
       template<typename _Alloc, typename _U1, typename _U2,
 	       _ImplicitCtor<true, _U1, _U2> = true>
 	_GLIBCXX20_CONSTEXPR
-	tuple(allocator_arg_t __tag, const _Alloc& __a, pair<_U1, _U2>&& __in)
-	: _Inherited(__tag, __a, std::forward<_U1>(__in.first),
-		     std::forward<_U2>(__in.second)) { }
+	tuple(allocator_arg_t __tag, const _Alloc& __a, pair<_U1, _U2>&& ___in)
+	: _Inherited(__tag, __a, std::forward<_U1>(___in.first),
+		     std::forward<_U2>(___in.second)) { }
 
       template<typename _Alloc, typename _U1, typename _U2,
 	       _ExplicitCtor<true, _U1, _U2> = false>
 	explicit
 	_GLIBCXX20_CONSTEXPR
-	tuple(allocator_arg_t __tag, const _Alloc& __a, pair<_U1, _U2>&& __in)
-	: _Inherited(__tag, __a, std::forward<_U1>(__in.first),
-		     std::forward<_U2>(__in.second)) { }
+	tuple(allocator_arg_t __tag, const _Alloc& __a, pair<_U1, _U2>&& ___in)
+	: _Inherited(__tag, __a, std::forward<_U1>(___in.first),
+		     std::forward<_U2>(___in.second)) { }
 
       // Tuple assignment.
 
@@ -1280,10 +1280,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
       tuple&
       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),
 				     const tuple&,
-				     const __nonesuch&>::type __in)
+				     const __nonesuch&>::type ___in)
       noexcept(__nothrow_assignable<const _T1&, const _T2&>())
       {
-	this->_M_assign(__in);
+	this->_M_assign(___in);
 	return *this;
       }
 
@@ -1291,61 +1291,61 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
       tuple&
       operator=(typename conditional<__assignable<_T1, _T2>(),
 				     tuple&&,
-				     __nonesuch&&>::type __in)
+				     __nonesuch&&>::type ___in)
       noexcept(__nothrow_assignable<_T1, _T2>())
       {
-	this->_M_assign(std::move(__in));
+	this->_M_assign(std::move(___in));
 	return *this;
       }
 
       template<typename _U1, typename _U2>
 	_GLIBCXX20_CONSTEXPR
 	__enable_if_t<__assignable<const _U1&, const _U2&>(), tuple&>
-	operator=(const tuple<_U1, _U2>& __in)
+	operator=(const tuple<_U1, _U2>& ___in)
 	noexcept(__nothrow_assignable<const _U1&, const _U2&>())
 	{
-	  this->_M_assign(__in);
+	  this->_M_assign(___in);
 	  return *this;
 	}
 
       template<typename _U1, typename _U2>
 	_GLIBCXX20_CONSTEXPR
 	__enable_if_t<__assignable<_U1, _U2>(), tuple&>
-	operator=(tuple<_U1, _U2>&& __in)
+	operator=(tuple<_U1, _U2>&& ___in)
 	noexcept(__nothrow_assignable<_U1, _U2>())
 	{
-	  this->_M_assign(std::move(__in));
+	  this->_M_assign(std::move(___in));
 	  return *this;
 	}
 
       template<typename _U1, typename _U2>
 	_GLIBCXX20_CONSTEXPR
 	__enable_if_t<__assignable<const _U1&, const _U2&>(), tuple&>
-	operator=(const pair<_U1, _U2>& __in)
+	operator=(const pair<_U1, _U2>& ___in)
 	noexcept(__nothrow_assignable<const _U1&, const _U2&>())
 	{
-	  this->_M_head(*this) = __in.first;
-	  this->_M_tail(*this)._M_head(*this) = __in.second;
+	  this->_M_head(*this) = ___in.first;
+	  this->_M_tail(*this)._M_head(*this) = ___in.second;
 	  return *this;
 	}
 
       template<typename _U1, typename _U2>
 	_GLIBCXX20_CONSTEXPR
 	__enable_if_t<__assignable<_U1, _U2>(), tuple&>
-	operator=(pair<_U1, _U2>&& __in)
+	operator=(pair<_U1, _U2>&& ___in)
 	noexcept(__nothrow_assignable<_U1, _U2>())
 	{
-	  this->_M_head(*this) = std::forward<_U1>(__in.first);
-	  this->_M_tail(*this)._M_head(*this) = std::forward<_U2>(__in.second);
+	  this->_M_head(*this) = std::forward<_U1>(___in.first);
+	  this->_M_tail(*this)._M_head(*this) = std::forward<_U2>(___in.second);
 	  return *this;
 	}
 
       _GLIBCXX20_CONSTEXPR
       void
-      swap(tuple& __in)
+      swap(tuple& ___in)
       noexcept(__and_<__is_nothrow_swappable<_T1>,
 		      __is_nothrow_swappable<_T2>>::value)
-      { _Inherited::_M_swap(__in); }
+      { _Inherited::_M_swap(___in); }
     };
 
 
diff --git a/libstdc++-v3/include/std/utility b/libstdc++-v3/include/std/utility
index 4c288c6024d..ad1e58d3f4a 100644
--- a/libstdc++-v3/include/std/utility
+++ b/libstdc++-v3/include/std/utility
@@ -220,23 +220,23 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 
   template<size_t _Int, class _Tp1, class _Tp2>
     constexpr typename tuple_element<_Int, pair<_Tp1, _Tp2>>::type&
-    get(pair<_Tp1, _Tp2>& __in) noexcept
-    { return __pair_get<_Int>::__get(__in); }
+    get(pair<_Tp1, _Tp2>& ___in) noexcept
+    { return __pair_get<_Int>::__get(___in); }
 
   template<size_t _Int, class _Tp1, class _Tp2>
     constexpr typename tuple_element<_Int, pair<_Tp1, _Tp2>>::type&&
-    get(pair<_Tp1, _Tp2>&& __in) noexcept
-    { return __pair_get<_Int>::__move_get(std::move(__in)); }
+    get(pair<_Tp1, _Tp2>&& ___in) noexcept
+    { return __pair_get<_Int>::__move_get(std::move(___in)); }
 
   template<size_t _Int, class _Tp1, class _Tp2>
     constexpr const typename tuple_element<_Int, pair<_Tp1, _Tp2>>::type&
-    get(const pair<_Tp1, _Tp2>& __in) noexcept
-    { return __pair_get<_Int>::__const_get(__in); }
+    get(const pair<_Tp1, _Tp2>& ___in) noexcept
+    { return __pair_get<_Int>::__const_get(___in); }
 
   template<size_t _Int, class _Tp1, class _Tp2>
     constexpr const typename tuple_element<_Int, pair<_Tp1, _Tp2>>::type&&
-    get(const pair<_Tp1, _Tp2>&& __in) noexcept
-    { return __pair_get<_Int>::__const_move_get(std::move(__in)); }
+    get(const pair<_Tp1, _Tp2>&& ___in) noexcept
+    { return __pair_get<_Int>::__const_move_get(std::move(___in)); }
 
 #if __cplusplus >= 201402L
 
diff --git a/libstdc++-v3/include/tr1/regex b/libstdc++-v3/include/tr1/regex
index 1cc163ad4b4..41ecedd5494 100644
--- a/libstdc++-v3/include/tr1/regex
+++ b/libstdc++-v3/include/tr1/regex
@@ -2005,7 +2005,7 @@ namespace regex_constants
        */
       template<typename _Out_iter>
         _Out_iter
-        format(_Out_iter __out, const string_type& __fmt,
+        format(_Out_iter ___out, const string_type& __fmt,
 	       regex_constants::match_flag_type __flags
 	       = regex_constants::format_default) const;
 
@@ -2401,7 +2401,7 @@ namespace regex_constants
   template<typename _Out_iter, typename _Bi_iter,
 	   typename _Rx_traits, typename _Ch_type>
     inline _Out_iter
-    regex_replace(_Out_iter __out, _Bi_iter __first, _Bi_iter __last,
+    regex_replace(_Out_iter ___out, _Bi_iter __first, _Bi_iter __last,
 		  const basic_regex<_Ch_type, _Rx_traits>& __e,
 		  const basic_string<_Ch_type>& __fmt,
 		  regex_constants::match_flag_type __flags
diff --git a/libstdc++-v3/include/tr1/tuple b/libstdc++-v3/include/tr1/tuple
index d956f00226c..460fd69f40d 100644
--- a/libstdc++-v3/include/tr1/tuple
+++ b/libstdc++-v3/include/tr1/tuple
@@ -102,26 +102,26 @@ namespace tr1
       : _Inherited(__tail...), _M_head(__head) { }
 
       template<typename... _UElements>
-      _Tuple_impl(const _Tuple_impl<_Idx, _UElements...>& __in)
-      : _Inherited(__in._M_tail()), _M_head(__in._M_head) { }
+      _Tuple_impl(const _Tuple_impl<_Idx, _UElements...>& ___in)
+      : _Inherited(___in._M_tail()), _M_head(___in._M_head) { }
 
-      _Tuple_impl(const _Tuple_impl& __in)
-      : _Inherited(__in._M_tail()), _M_head(__in._M_head) { }
+      _Tuple_impl(const _Tuple_impl& ___in)
+      : _Inherited(___in._M_tail()), _M_head(___in._M_head) { }
      
       template<typename... _UElements>
         _Tuple_impl&
-        operator=(const _Tuple_impl<_Idx, _UElements...>& __in)
+        operator=(const _Tuple_impl<_Idx, _UElements...>& ___in)
         {
-	  _M_head = __in._M_head;
-	  _M_tail() = __in._M_tail();
+	  _M_head = ___in._M_head;
+	  _M_tail() = ___in._M_tail();
 	  return *this;
 	}
 
       _Tuple_impl&
-      operator=(const _Tuple_impl& __in)
+      operator=(const _Tuple_impl& ___in)
       {
-	_M_head = __in._M_head;
-	_M_tail() = __in._M_tail();
+	_M_head = ___in._M_head;
+	_M_tail() = ___in._M_tail();
 	return *this;
       }
     };
@@ -139,24 +139,24 @@ namespace tr1
       : _Inherited(__elements...) { }
 
       template<typename... _UElements>
-        tuple(const tuple<_UElements...>& __in)
-	: _Inherited(__in) { }
+        tuple(const tuple<_UElements...>& ___in)
+	: _Inherited(___in) { }
 
-      tuple(const tuple& __in)
-      : _Inherited(__in) { }
+      tuple(const tuple& ___in)
+      : _Inherited(___in) { }
 
       template<typename... _UElements>
         tuple&
-        operator=(const tuple<_UElements...>& __in)
+        operator=(const tuple<_UElements...>& ___in)
         {
-	  static_cast<_Inherited&>(*this) = __in;
+	  static_cast<_Inherited&>(*this) = ___in;
 	  return *this;
 	}
 
       tuple&
-      operator=(const tuple& __in)
+      operator=(const tuple& ___in)
       {
-	static_cast<_Inherited&>(*this) = __in;
+	static_cast<_Inherited&>(*this) = ___in;
 	return *this;
       }
     };
@@ -178,41 +178,41 @@ namespace tr1
       : _Inherited(__a1, __a2) { }
 
       template<typename _U1, typename _U2>
-        tuple(const tuple<_U1, _U2>& __in)
-	: _Inherited(__in) { }
+        tuple(const tuple<_U1, _U2>& ___in)
+	: _Inherited(___in) { }
 
-      tuple(const tuple& __in)
-      : _Inherited(__in) { }
+      tuple(const tuple& ___in)
+      : _Inherited(___in) { }
 
       template<typename _U1, typename _U2>
-        tuple(const pair<_U1, _U2>& __in)
+        tuple(const pair<_U1, _U2>& ___in)
 	: _Inherited(_Tuple_impl<0, 
 		     typename __add_c_ref<_U1>::type,
-		     typename __add_c_ref<_U2>::type>(__in.first, 
-						      __in.second))
+		     typename __add_c_ref<_U2>::type>(___in.first, 
+						      ___in.second))
         { }
   
       template<typename _U1, typename _U2>
         tuple&
-        operator=(const tuple<_U1, _U2>& __in)
+        operator=(const tuple<_U1, _U2>& ___in)
         {
-	  static_cast<_Inherited&>(*this) = __in;
+	  static_cast<_Inherited&>(*this) = ___in;
 	  return *this;
 	}
 
       tuple&
-      operator=(const tuple& __in)
+      operator=(const tuple& ___in)
       {
-	static_cast<_Inherited&>(*this) = __in;
+	static_cast<_Inherited&>(*this) = ___in;
 	return *this;
       }
 
       template<typename _U1, typename _U2>
         tuple&
-        operator=(const pair<_U1, _U2>& __in)
+        operator=(const pair<_U1, _U2>& ___in)
         {
-	  this->_M_head = __in.first;
-	  this->_M_tail()._M_head = __in.second;
+	  this->_M_head = ___in.first;
+	  this->_M_tail()._M_head = ___in.second;
 	  return *this;
 	}
     };
diff --git a/libstdc++-v3/include/tr1/utility b/libstdc++-v3/include/tr1/utility
index e6fa783fdd2..e7eb63a45ff 100644
--- a/libstdc++-v3/include/tr1/utility
+++ b/libstdc++-v3/include/tr1/utility
@@ -93,13 +93,13 @@ namespace tr1
 
   template<int _Int, class _Tp1, class _Tp2>
     inline typename tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type&
-    get(std::pair<_Tp1, _Tp2>& __in)
-    { return __pair_get<_Int>::__get(__in); }
+    get(std::pair<_Tp1, _Tp2>& ___in)
+    { return __pair_get<_Int>::__get(___in); }
 
   template<int _Int, class _Tp1, class _Tp2>
     inline const typename tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type&
-    get(const std::pair<_Tp1, _Tp2>& __in)
-    { return __pair_get<_Int>::__const_get(__in); }
+    get(const std::pair<_Tp1, _Tp2>& ___in)
+    { return __pair_get<_Int>::__const_get(___in); }
 }
 
 _GLIBCXX_END_NAMESPACE_VERSION
diff --git a/libstdc++-v3/include/tr2/bool_set b/libstdc++-v3/include/tr2/bool_set
index fac2e6e447d..fc205255e50 100644
--- a/libstdc++-v3/include/tr2/bool_set
+++ b/libstdc++-v3/include/tr2/bool_set
@@ -131,18 +131,18 @@ namespace tr2
 
     template<typename CharT, typename Traits>
       friend std::basic_ostream<CharT, Traits>&
-      operator<<(std::basic_ostream<CharT, Traits>& __out, bool_set __b)
+      operator<<(std::basic_ostream<CharT, Traits>& ___out, bool_set __b)
       {
 	int __a = __b._M_b;
-	__out << __a;
+	___out << __a;
       }
 
     template<typename CharT, typename Traits>
       friend std::basic_istream<CharT, Traits>&
-      operator>>(std::basic_istream<CharT, Traits>& __in, bool_set& __b)
+      operator>>(std::basic_istream<CharT, Traits>& ___in, bool_set& __b)
       {
 	long __c;
-	__in >> __c;
+	___in >> __c;
 	if (__c >= _S_false && __c < _S_empty)
 	  __b._M_b = static_cast<_Bool_set_val>(__c);
       }
diff --git a/libstdc++-v3/include/tr2/bool_set.tcc b/libstdc++-v3/include/tr2/bool_set.tcc
index d80379156e5..2773282a023 100644
--- a/libstdc++-v3/include/tr2/bool_set.tcc
+++ b/libstdc++-v3/include/tr2/bool_set.tcc
@@ -100,9 +100,9 @@ _GLIBCXX_END_NAMESPACE_VERSION
        *  @param  v  Value to format and insert.
        *  @return  Iterator after reading.
       iter_type
-      get(iter_type __in, iter_type __end, ios_base& __io,
+      get(iter_type ___in, iter_type __end, ios_base& __io,
 	  ios_base::iostate& __err, bool& __v) const
-      { return this->do_get(__in, __end, __io, __err, __v); }
+      { return this->do_get(___in, __end, __io, __err, __v); }
        */
 /*
   template<typename _CharT, typename _InIter>
diff --git a/libstdc++-v3/scripts/gen_includers.pl b/libstdc++-v3/scripts/gen_includers.pl
index 477f028408f..18f00820c26 100644
--- a/libstdc++-v3/scripts/gen_includers.pl
+++ b/libstdc++-v3/scripts/gen_includers.pl
@@ -15,8 +15,8 @@ $mu_get_tuple_args = "::std::tr1::get<0>(__tuple)";
 $bind_v_template_args = "typename result_of<_Mu<_T1> _CV(_T1, tuple<_GLIBCXX_BIND_TEMPLATE_ARGS>)>::type";
 $bind_v_args = "_Mu<_T1>()(_M_arg1, ::std::tr1::tie(_GLIBCXX_BIND_ARGS))";
 $tuple_add_cref = "typename __add_c_ref<_T1>::type __a1";
-$tuple_copy_init = "_M_arg1(__in._M_arg1)";
-$tuple_assign = "_M_arg1 = __in._M_arg1;";
+$tuple_copy_init = "_M_arg1(___in._M_arg1)";
+$tuple_assign = "_M_arg1 = ___in._M_arg1;";
 $template_params_null_class = "typename _T1 = _NullClass";
 $template_args_stripped = "typename __strip_reference_wrapper<_T1>::__type";
 $template_params_u = "typename _U1";
@@ -42,8 +42,8 @@ for ($num_args = 2; $num_args <= $max; ++$num_args) {
   $bind_v_template_args .= ", typename result_of<_Mu<_T$num_args> _CV(_T$num_args, tuple<_GLIBCXX_BIND_TEMPLATE_ARGS>)>::type";
   $bind_v_args .= ", _Mu<_T$num_args>()(_M_arg$num_args, ::std::tr1::tie(_GLIBCXX_BIND_ARGS))";
   $tuple_add_cref .= ", typename __add_c_ref<_T$num_args>::type __a$num_args";
-  $tuple_copy_init .= ", _M_arg$num_args(__in._M_arg$num_args)";
-  $tuple_assign .= " _M_arg$num_args = __in._M_arg$num_args;";
+  $tuple_copy_init .= ", _M_arg$num_args(___in._M_arg$num_args)";
+  $tuple_assign .= " _M_arg$num_args = ___in._M_arg$num_args;";
   $template_params_null_class .= ", typename _T$num_args = _NullClass";
   $template_args_stripped .= ", typename __strip_reference_wrapper<_T$num_args>::__type";
   $template_params_u .= ", typename _U$num_args";
diff --git a/libstdc++-v3/src/c++11/shared_ptr.cc b/libstdc++-v3/src/c++11/shared_ptr.cc
index 4678fbeffe2..b8e46686684 100644
--- a/libstdc++-v3/src/c++11/shared_ptr.cc
+++ b/libstdc++-v3/src/c++11/shared_ptr.cc
@@ -35,7 +35,11 @@ namespace __gnu_internal _GLIBCXX_VISIBILITY(hidden)
   get_mutex(unsigned char i)
   {
     // increase alignment to put each lock on a separate cache line
-    struct alignas(64) M : __gnu_cxx::__mutex { };
+    struct
+#ifndef __mc68000__
+    alignas(64)
+#endif
+    M : __gnu_cxx::__mutex { };
     static M m[mask + 1];
     return m[i];
   }
diff --git a/libstdc++-v3/src/c++11/snprintf_lite.cc b/libstdc++-v3/src/c++11/snprintf_lite.cc
index dcf8421cac2..ef9d9c869da 100644
--- a/libstdc++-v3/src/c++11/snprintf_lite.cc
+++ b/libstdc++-v3/src/c++11/snprintf_lite.cc
@@ -74,14 +74,14 @@ namespace __gnu_cxx {
     // Long enough for decimal representation.
     int __ilen = 3 * sizeof(__val);
     char *__cs = static_cast<char*>(__builtin_alloca(__ilen));
-    char* __out = __cs + __ilen;
+    char* ___out = __cs + __ilen;
     do
       {
-	*--__out = "0123456789"[__val % 10];
+	*--___out = "0123456789"[__val % 10];
 	__val /= 10;
       }
     while (__val != 0);
-    size_t __len = __cs + __ilen - __out;
+    size_t __len = __cs + __ilen - ___out;
     if (__bufsize < __len)
       return -1;
 
diff --git a/libstdc++-v3/src/c++17/ryu/common.h b/libstdc++-v3/src/c++17/ryu/common.h
index f8ee147db04..c9b966aecaa 100644
--- a/libstdc++-v3/src/c++17/ryu/common.h
+++ b/libstdc++-v3/src/c++17/ryu/common.h
@@ -18,7 +18,7 @@
 #define RYU_COMMON_H
 
 
-#if defined(_M_IX86) || defined(_M_ARM)
+#if defined(_M_IX86) || defined(_M_ARM) || defined(__m68k__)
 #define RYU_32_BIT_PLATFORM
 #endif
 
diff --git a/libstdc++-v3/src/c++98/istream-string.cc b/libstdc++-v3/src/c++98/istream-string.cc
index 55cfe2949b9..198dc10e614 100644
--- a/libstdc++-v3/src/c++98/istream-string.cc
+++ b/libstdc++-v3/src/c++98/istream-string.cc
@@ -40,7 +40,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 
   template<>
     basic_istream<char>&
-    operator>>(basic_istream<char>& __in, basic_string<char>& __str)
+    operator>>(basic_istream<char>& ___in, basic_string<char>& __str)
     {
       typedef basic_istream<char>       	__istream_type;
       typedef __istream_type::int_type		__int_type;
@@ -52,18 +52,18 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 
       __size_type __extracted = 0;
       ios_base::iostate __err = ios_base::goodbit;
-      __istream_type::sentry __cerb(__in, false);
+      __istream_type::sentry __cerb(___in, false);
       if (__cerb)
 	{
 	  __try
 	    {
 	      __str.erase();
-	      const streamsize __w = __in.width();
+	      const streamsize __w = ___in.width();
 	      const __size_type __n = __w > 0 ? static_cast<__size_type>(__w)
 		                              : __str.max_size();
-	      const __ctype_type& __ct = use_facet<__ctype_type>(__in.getloc());
+	      const __ctype_type& __ct = use_facet<__ctype_type>(___in.getloc());
 	      const __int_type __eof = __traits_type::eof();
-	      __streambuf_type* __sb = __in.rdbuf();
+	      __streambuf_type* __sb = ___in.rdbuf();
 	      __int_type __c = __sb->sgetc();
 
 	      while (__extracted < __n
@@ -95,11 +95,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 
 	      if (__extracted < __n && __traits_type::eq_int_type(__c, __eof))
 		__err |= ios_base::eofbit;
-	      __in.width(0);
+	      ___in.width(0);
 	    }
 	  __catch(__cxxabiv1::__forced_unwind&)
 	    {
-	      __in._M_setstate(ios_base::badbit);
+	      ___in._M_setstate(ios_base::badbit);
 	      __throw_exception_again;
 	    }
 	  __catch(...)
@@ -107,19 +107,19 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	      // _GLIBCXX_RESOLVE_LIB_DEFECTS
 	      // 91. Description of operator>> and getline() for string<>
 	      // might cause endless loop
-	      __in._M_setstate(ios_base::badbit);
+	      ___in._M_setstate(ios_base::badbit);
 	    }
 	}
       if (!__extracted)
 	__err |= ios_base::failbit;
       if (__err)
-	__in.setstate(__err);
-      return __in;
+	___in.setstate(__err);
+      return ___in;
     }
 
   template<>
     basic_istream<char>&
-    getline(basic_istream<char>& __in, basic_string<char>& __str,
+    getline(basic_istream<char>& ___in, basic_string<char>& __str,
 	    char __delim)
     {
       typedef basic_istream<char>       	__istream_type;
@@ -133,7 +133,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
       __size_type __extracted = 0;
       const __size_type __n = __str.max_size();
       ios_base::iostate __err = ios_base::goodbit;
-      __istream_type::sentry __cerb(__in, true);
+      __istream_type::sentry __cerb(___in, true);
       if (__cerb)
 	{
 	  __try
@@ -141,7 +141,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	      __str.erase();
 	      const __int_type __idelim = __traits_type::to_int_type(__delim);
 	      const __int_type __eof = __traits_type::eof();
-	      __streambuf_type* __sb = __in.rdbuf();
+	      __streambuf_type* __sb = ___in.rdbuf();
 	      __int_type __c = __sb->sgetc();
 
 	      while (__extracted < __n
@@ -183,7 +183,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	    }
 	  __catch(__cxxabiv1::__forced_unwind&)
 	    {
-	      __in._M_setstate(ios_base::badbit);
+	      ___in._M_setstate(ios_base::badbit);
 	      __throw_exception_again;
 	    }
 	  __catch(...)
@@ -191,20 +191,20 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	      // _GLIBCXX_RESOLVE_LIB_DEFECTS
 	      // 91. Description of operator>> and getline() for string<>
 	      // might cause endless loop
-	      __in._M_setstate(ios_base::badbit);
+	      ___in._M_setstate(ios_base::badbit);
 	    }
 	}
       if (!__extracted)
 	__err |= ios_base::failbit;
       if (__err)
-	__in.setstate(__err);
-      return __in;
+	___in.setstate(__err);
+      return ___in;
     }
 
 #ifdef _GLIBCXX_USE_WCHAR_T
   template<>
     basic_istream<wchar_t>&
-    getline(basic_istream<wchar_t>& __in, basic_string<wchar_t>& __str,
+    getline(basic_istream<wchar_t>& ___in, basic_string<wchar_t>& __str,
 	    wchar_t __delim)
     {
       typedef basic_istream<wchar_t>       	__istream_type;
@@ -218,7 +218,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
       __size_type __extracted = 0;
       const __size_type __n = __str.max_size();
       ios_base::iostate __err = ios_base::goodbit;
-      __istream_type::sentry __cerb(__in, true);
+      __istream_type::sentry __cerb(___in, true);
       if (__cerb)
 	{
 	  __try
@@ -226,7 +226,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	      __str.erase();
 	      const __int_type __idelim = __traits_type::to_int_type(__delim);
 	      const __int_type __eof = __traits_type::eof();
-	      __streambuf_type* __sb = __in.rdbuf();
+	      __streambuf_type* __sb = ___in.rdbuf();
 	      __int_type __c = __sb->sgetc();
 
 	      while (__extracted < __n
@@ -268,7 +268,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	    }
 	  __catch(__cxxabiv1::__forced_unwind&)
 	    {
-	      __in._M_setstate(ios_base::badbit);
+	      ___in._M_setstate(ios_base::badbit);
 	      __throw_exception_again;
 	    }
 	  __catch(...)
@@ -276,14 +276,14 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	      // _GLIBCXX_RESOLVE_LIB_DEFECTS
 	      // 91. Description of operator>> and getline() for string<>
 	      // might cause endless loop
-	      __in._M_setstate(ios_base::badbit);
+	      ___in._M_setstate(ios_base::badbit);
 	    }
 	}
       if (!__extracted)
 	__err |= ios_base::failbit;
       if (__err)
-	__in.setstate(__err);
-      return __in;
+	___in.setstate(__err);
+      return ___in;
     }
 #endif
 
diff --git a/libstdc++-v3/src/c++98/istream.cc b/libstdc++-v3/src/c++98/istream.cc
index 1c13e21816a..84405ba8f73 100644
--- a/libstdc++-v3/src/c++98/istream.cc
+++ b/libstdc++-v3/src/c++98/istream.cc
@@ -205,7 +205,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
     }
 
     void
-    __istream_extract(istream& __in, char* __s, streamsize __num)
+    __istream_extract(istream& ___in, char* __s, streamsize __num)
     {
       typedef basic_istream<char>       	__istream_type;
       typedef __istream_type::int_type		__int_type;
@@ -216,20 +216,20 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 
       streamsize __extracted = 0;
       ios_base::iostate __err = ios_base::goodbit;
-      __istream_type::sentry __cerb(__in, false);
+      __istream_type::sentry __cerb(___in, false);
       if (__cerb)
 	{
 	  __try
 	    {
 	      // Figure out how many characters to extract.
-	      streamsize __width = __in.width();
+	      streamsize __width = ___in.width();
 	      if (0 < __width && __width < __num)
 		__num = __width;
 
-	      const __ctype_type& __ct = use_facet<__ctype_type>(__in.getloc());
+	      const __ctype_type& __ct = use_facet<__ctype_type>(___in.getloc());
 
 	      const __int_type __eof = __traits_type::eof();
-	      __streambuf_type* __sb = __in.rdbuf();
+	      __streambuf_type* __sb = ___in.rdbuf();
 	      __int_type __c = __sb->sgetc();
 
 	      while (__extracted < __num - 1
@@ -268,20 +268,20 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION
 	      // _GLIBCXX_RESOLVE_LIB_DEFECTS
 	      // 68.  Extractors for char* should store null at end
 	      *__s = __char_type();
-	      __in.width(0);
+	      ___in.width(0);
 	    }
 	  __catch(__cxxabiv1::__forced_unwind&)
 	    {
-	      __in._M_setstate(ios_base::badbit);
+	      ___in._M_setstate(ios_base::badbit);
 	      __throw_exception_again;
 	    }
 	  __catch(...)
-	    { __in._M_setstate(ios_base::badbit); }
+	    { ___in._M_setstate(ios_base::badbit); }
 	}
       if (!__extracted)
 	__err |= ios_base::failbit;
       if (__err)
-	__in.setstate(__err);
+	___in.setstate(__err);
     }
 
 #ifdef _GLIBCXX_USE_WCHAR_T
diff --git a/libstdc++-v3/src/c++98/math_stubs_float.cc b/libstdc++-v3/src/c++98/math_stubs_float.cc
index 09ea0f2ba2a..9873533b168 100644
--- a/libstdc++-v3/src/c++98/math_stubs_float.cc
+++ b/libstdc++-v3/src/c++98/math_stubs_float.cc
@@ -28,10 +28,12 @@
 // we use the following crude approximations. We keep saying that we'll do
 // better later, but never do.
 
+#define WEAK __attribute__((weak))
+
 extern "C"
 {
 #ifndef _GLIBCXX_HAVE_FABSF
-  float
+  float WEAK
   fabsf(float x)
   {
     return (float) fabs(x);
@@ -39,7 +41,7 @@ extern "C"
 #endif
 
 #ifndef _GLIBCXX_HAVE_ACOSF
-  float
+  float WEAK
   acosf(float x)
   {
     return (float) acos(x);
@@ -47,7 +49,7 @@ extern "C"
 #endif
 
 #ifndef _GLIBCXX_HAVE_ASINF
-  float
+  float WEAK
   asinf(float x)
   {
     return (float) asin(x);
@@ -55,7 +57,7 @@ extern "C"
 #endif
 
 #ifndef _GLIBCXX_HAVE_ATANF
-  float
+  float WEAK
   atanf(float x)
   {
     return (float) atan(x);
@@ -63,7 +65,7 @@ extern "C"
 #endif
 
 #ifndef _GLIBCXX_HAVE_ATAN2F
-  float
+  float WEAK
   atan2f(float x, float y)
   {
     return (float) atan2(x, y);
@@ -71,7 +73,7 @@ extern "C"
 #endif
 
 #ifndef _GLIBCXX_HAVE_CEILF
-  float
+  float WEAK
   ceilf(float x)
   {
     return (float) ceil(x);
@@ -79,7 +81,7 @@ extern "C"
 #endif
 
 #ifndef _GLIBCXX_HAVE_COSF
-  float
+  float WEAK
   cosf(float x)
   {
     return (float) cos(x);
@@ -87,7 +89,7 @@ extern "C"
 #endif
 
 #ifndef _GLIBCXX_HAVE_COSHF
-  float
+  float WEAK
   coshf(float x)
   {
     return (float) cosh(x);
@@ -95,7 +97,7 @@ extern "C"
 #endif
 
 #ifndef _GLIBCXX_HAVE_EXPF
-  float
+  float WEAK
   expf(float x)
   {
     return (float) exp(x);
@@ -103,7 +105,7 @@ extern "C"
 #endif
 
 #ifndef _GLIBCXX_HAVE_FLOORF
-  float
+  float WEAK
   floorf(float x)
   {
     return (float) floor(x);
@@ -111,7 +113,7 @@ extern "C"
 #endif
 
 #ifndef _GLIBCXX_HAVE_FMODF
-  float
+  float WEAK
   fmodf(float x, float y)
   {
     return (float) fmod(x, y);
@@ -119,7 +121,7 @@ extern "C"
 #endif
 
 #ifndef _GLIBCXX_HAVE_FREXPF
-  float
+  float WEAK
   frexpf(float x, int *exp)
   {
     return (float) frexp(x, exp);
@@ -127,7 +129,7 @@ extern "C"
 #endif
 
 #ifndef _GLIBCXX_HAVE_SQRTF
-  float
+  float WEAK
   sqrtf(float x)
   {
     return (float) sqrt(x);
@@ -135,7 +137,7 @@ extern "C"
 #endif
 
 #ifndef _GLIBCXX_HAVE_HYPOTF
-  float
+  float WEAK
   hypotf(float x, float y)
   {
     float s = fabsf(x) + fabsf(y);
@@ -147,7 +149,7 @@ extern "C"
 #endif
 
 #ifndef _GLIBCXX_HAVE_LDEXPF
-  float
+  float WEAK
   ldexpf(float x, int exp)
   {
     return (float) ldexp(x, exp);
@@ -155,7 +157,7 @@ extern "C"
 #endif
 
 #ifndef _GLIBCXX_HAVE_LOGF
-  float
+  float WEAK
   logf(float x)
   {
     return (float) log(x);
@@ -163,7 +165,7 @@ extern "C"
 #endif
 
 #ifndef _GLIBCXX_HAVE_LOG10F
-  float
+  float WEAK
   log10f(float x)
   {
     return (float) log10(x);
@@ -171,7 +173,7 @@ extern "C"
 #endif
 
 #ifndef _GLIBCXX_HAVE_MODFF
-  float
+  float WEAK
   modff(float x, float *iptr)
   {
     double result, temp;
@@ -183,7 +185,7 @@ extern "C"
 #endif
 
 #ifndef _GLIBCXX_HAVE_POWF
-  float
+  float WEAK
   powf(float x, float y)
   {
     return (float) pow(x, y);
@@ -191,7 +193,7 @@ extern "C"
 #endif
 
 #ifndef _GLIBCXX_HAVE_SINF
-  float
+  float WEAK
   sinf(float x)
   {
     return (float) sin(x);
@@ -199,7 +201,7 @@ extern "C"
 #endif
 
 #ifndef _GLIBCXX_HAVE_SINHF
-  float
+  float WEAK
   sinhf(float x)
   {
     return (float) sinh(x);
@@ -207,7 +209,7 @@ extern "C"
 #endif
 
 #ifndef _GLIBCXX_HAVE_TANF
-  float
+  float WEAK
   tanf(float x)
   {
     return (float) tan(x);
@@ -215,7 +217,7 @@ extern "C"
 #endif
 
 #ifndef _GLIBCXX_HAVE_TANHF
-  float
+  float WEAK
   tanhf(float x)
   {
     return (float) tanh(x);
diff --git a/libstdc++-v3/src/c++98/math_stubs_long_double.cc b/libstdc++-v3/src/c++98/math_stubs_long_double.cc
index 4579c86d4f8..e44ed275c26 100644
--- a/libstdc++-v3/src/c++98/math_stubs_long_double.cc
+++ b/libstdc++-v3/src/c++98/math_stubs_long_double.cc
@@ -28,10 +28,12 @@
 // we use the following crude approximations. We keep saying that we'll do
 // better later, but never do.
 
+#define WEAK __attribute__((weak))
+
 extern "C"
 {
 #ifndef _GLIBCXX_HAVE_FABSL
-  long double
+  long double WEAK
   fabsl(long double x)
   {
     return fabs((double) x);
@@ -39,7 +41,7 @@ extern "C"
 #endif
 
 #ifndef _GLIBCXX_HAVE_ACOSL
-  long double
+  long double WEAK
   acosl(long double x)
   {
     return acos((double) x);
@@ -47,7 +49,7 @@ extern "C"
 #endif
 
 #ifndef _GLIBCXX_HAVE_ASINL
-  long double
+  long double WEAK
   asinl(long double x)
   {
     return asin((double) x);
@@ -55,7 +57,7 @@ extern "C"
 #endif
 
 #ifndef _GLIBCXX_HAVE_ATANL
-  long double
+  long double WEAK
   atanl(long double x)
   {
     return atan ((double) x);
@@ -63,7 +65,7 @@ extern "C"
 #endif
 
 #ifndef _GLIBCXX_HAVE_ATAN2L
-  long double
+  long double WEAK
   atan2l(long double x, long double y)
   {
     return atan2((double) x, (double) y);
@@ -71,7 +73,7 @@ extern "C"
 #endif
 
 #ifndef _GLIBCXX_HAVE_CEILL
-  long double
+  long double WEAK
   ceill(long double x)
   {
     return ceil((double) x);
@@ -79,7 +81,7 @@ extern "C"
 #endif
 
 #ifndef _GLIBCXX_HAVE_COSL
-  long double
+  long double WEAK
   cosl(long double x)
   {
     return cos((double) x);
@@ -87,7 +89,7 @@ extern "C"
 #endif
 
 #ifndef _GLIBCXX_HAVE_COSHL
-  long double
+  long double WEAK
   coshl(long double x)
   {
     return cosh((double) x);
@@ -95,7 +97,7 @@ extern "C"
 #endif
 
 #ifndef _GLIBCXX_HAVE_EXPL
-  long double
+  long double WEAK
   expl(long double x)
   {
     return exp((double) x);
@@ -103,7 +105,7 @@ extern "C"
 #endif
 
 #ifndef _GLIBCXX_HAVE_FLOORL
-  long double
+  long double WEAK
   floorl(long double x)
   {
     return floor((double) x);
@@ -111,7 +113,7 @@ extern "C"
 #endif
 
 #ifndef _GLIBCXX_HAVE_FMODL
-  long double
+  long double WEAK
   fmodl(long double x, long double y)
   {
     return fmod((double) x, (double) y);
@@ -119,7 +121,7 @@ extern "C"
 #endif
 
 #ifndef _GLIBCXX_HAVE_FREXPL
-  long double
+  long double WEAK
   frexpl(long double x, int *exp)
   {
     return frexp((double) x, exp);
@@ -127,7 +129,7 @@ extern "C"
 #endif
 
 #ifndef _GLIBCXX_HAVE_SQRTL
-  long double
+  long double WEAK
   sqrtl(long double x)
   {
     return  sqrt((double) x);
@@ -135,7 +137,7 @@ extern "C"
 #endif
 
 #ifndef _GLIBCXX_HAVE_HYPOTL
-  long double
+  long double WEAK
   hypotl(long double x, long double y)
   {
     long double s = fabsl(x) + fabsl(y);
@@ -147,7 +149,7 @@ extern "C"
 #endif
 
 #ifndef _GLIBCXX_HAVE_LDEXPL
-  long double
+  long double WEAK
   ldexpl(long double x, int exp)
   {
     return ldexp((double) x, exp);
@@ -155,7 +157,7 @@ extern "C"
 #endif
 
 #ifndef _GLIBCXX_HAVE_LOGL
-  long double
+  long double WEAK
   logl(long double x)
   {
     return log((double) x);
@@ -163,7 +165,7 @@ extern "C"
 #endif
 
 #ifndef _GLIBCXX_HAVE_LOG10L
-  long double
+  long double WEAK
   log10l(long double x)
   {
     return log10((double) x);
@@ -171,7 +173,7 @@ extern "C"
 #endif
 
 #ifndef _GLIBCXX_HAVE_MODFL
-  long double
+  long double WEAK
   modfl(long double x, long double *iptr)
   {
     double result, temp;
@@ -183,7 +185,7 @@ extern "C"
 #endif
 
 #ifndef _GLIBCXX_HAVE_POWL
-  long double
+  long double WEAK
   powl(long double x, long double y)
   {
     return pow((double) x, (double) y);
@@ -191,7 +193,7 @@ extern "C"
 #endif
 
 #ifndef _GLIBCXX_HAVE_SINL
-  long double
+  long double WEAK
   sinl(long double x)
   {
     return sin((double) x);
@@ -199,7 +201,7 @@ extern "C"
 #endif
 
 #ifndef _GLIBCXX_HAVE_SINHL
-  long double
+  long double WEAK
   sinhl(long double x)
   {
     return sinh((double) x);
@@ -207,7 +209,7 @@ extern "C"
 #endif
 
 #ifndef _GLIBCXX_HAVE_TANL
-  long double
+  long double WEAK
   tanl(long double x)
   {
     return tan((double) x);
@@ -215,7 +217,7 @@ extern "C"
 #endif
 
 #ifndef _GLIBCXX_HAVE_TANHL
-  long double
+  long double WEAK
   tanhl(long double x)
   {
     return tanh((double) x);
diff --git a/libstdc++-v3/src/filesystem/ops-common.h b/libstdc++-v3/src/filesystem/ops-common.h
index c7c8f3f4cb7..2c8ee31ba9d 100644
--- a/libstdc++-v3/src/filesystem/ops-common.h
+++ b/libstdc++-v3/src/filesystem/ops-common.h
@@ -247,7 +247,7 @@ namespace __gnu_posix
   file_time(const stat_type& st, std::error_code& ec) noexcept
   {
     using namespace std::chrono;
-#ifdef _GLIBCXX_USE_ST_MTIM
+#if defined(_GLIBCXX_USE_ST_MTIM) && !defined(__MINT__)
     time_t s = st.st_mtim.tv_sec;
     nanoseconds ns{st.st_mtim.tv_nsec};
 #else
diff --git a/libstdc++-v3/testsuite/performance/27_io/ifstream_extract_chars.cc b/libstdc++-v3/testsuite/performance/27_io/ifstream_extract_chars.cc
index 01c7ec2384d..fddf29ec8c3 100644
--- a/libstdc++-v3/testsuite/performance/27_io/ifstream_extract_chars.cc
+++ b/libstdc++-v3/testsuite/performance/27_io/ifstream_extract_chars.cc
@@ -47,7 +47,7 @@ int main()
       out << line;
   }
   
-  // operator>>(basic_istream<char>& __in, basic_string<char>& __str)
+  // operator>>(basic_istream<char>& ___in, basic_string<char>& __str)
   {
     start_counters(time, resource);
     for (int iter = 0; iter < 25; ++iter)
@@ -62,7 +62,7 @@ int main()
     clear_counters(time, resource);
   }
   
-  // operator>>(basic_istream<char>& __in, char* __s)
+  // operator>>(basic_istream<char>& ___in, char* __s)
   {
     start_counters(time, resource);
     for (int iter = 0; iter < 25; ++iter)
diff --git a/libstdc++-v3/testsuite/performance/27_io/ifstream_getline-2.cc b/libstdc++-v3/testsuite/performance/27_io/ifstream_getline-2.cc
index 93b2ec7e2ba..bd82835495f 100644
--- a/libstdc++-v3/testsuite/performance/27_io/ifstream_getline-2.cc
+++ b/libstdc++-v3/testsuite/performance/27_io/ifstream_getline-2.cc
@@ -63,7 +63,7 @@ int main()
     clear_counters(time, resource);
   }
 
-  // getline(basic_istream<_CharT, _Traits>& __in,
+  // getline(basic_istream<_CharT, _Traits>& ___in,
   //         basic_string<_CharT, _Traits, _Alloc>& __str, _CharT __delim)
   {
     ifstream file(filename);
diff --git a/libtool.m4 b/libtool.m4
index 17f8e5f3074..3624d4e7318 100644
--- a/libtool.m4
+++ b/libtool.m4
@@ -1515,6 +1515,12 @@ AC_CACHE_VAL([lt_cv_sys_max_cmd_len], [dnl
     lt_cv_sys_max_cmd_len=8192;
     ;;
 
+  mint*)
+    # On MiNT this test can take minutes to run, and I'm not sure it's
+    # healthy for this platform. Let's restrict it to 8192.
+    lt_cv_sys_max_cmd_len=8192;
+    ;;
+
   netbsd* | freebsd* | openbsd* | darwin* | dragonfly*)
     # This has been around since 386BSD, at least.  Likely further.
     if test -x /sbin/sysctl; then
@@ -1730,7 +1736,7 @@ else
     lt_cv_dlopen_self=yes
     ;;
 
-  mingw* | pw32* | cegcc*)
+  mingw* | msys* | pw32* | cegcc*)
     lt_cv_dlopen="LoadLibrary"
     lt_cv_dlopen_libs=
     ;;
@@ -2206,14 +2212,14 @@ bsdi[[45]]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -2237,7 +2243,7 @@ cygwin* | mingw* | pw32* | cegcc*)
 m4_if([$1], [],[
       sys_lib_search_path_spec="$sys_lib_search_path_spec /usr/lib/w32api"])
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[[.]]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -2838,7 +2844,7 @@ if test "$GCC" = yes; then
   # Check if gcc -print-prog-name=ld gives a path.
   AC_MSG_CHECKING([for ld used by $CC])
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -4400,7 +4406,7 @@ _LT_EOF
       fi
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # _LT_TAGVAR(hardcode_libdir_flag_spec, $1) is actually meaningless,
       # as there is no search path for DLLs.
       _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'
@@ -4773,7 +4779,7 @@ _LT_EOF
       _LT_TAGVAR(export_dynamic_flag_spec, $1)=-rdynamic
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # When not using gcc, we currently assume that we are using
       # Microsoft Visual C++.
       # hardcode_libdir_flag_spec is actually meaningless, as there is
@@ -5717,7 +5723,7 @@ if test "$_lt_caught_CXX_error" != yes; then
         esac
         ;;
 
-      cygwin* | mingw* | pw32* | cegcc*)
+      cygwin* | mingw* | msys* | pw32* | cegcc*)
         # _LT_TAGVAR(hardcode_libdir_flag_spec, $1) is actually meaningless,
         # as there is no search path for DLLs.
         _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'
diff --git a/libvtv/configure b/libvtv/configure
index d64b4af5c6b..e4fe85f89fc 100755
--- a/libvtv/configure
+++ b/libvtv/configure
@@ -6460,7 +6460,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -9993,7 +9993,7 @@ _LT_EOF
       fi
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # _LT_TAGVAR(hardcode_libdir_flag_spec, ) is actually meaningless,
       # as there is no search path for DLLs.
       hardcode_libdir_flag_spec='-L$libdir'
@@ -10424,7 +10424,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
       export_dynamic_flag_spec=-rdynamic
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # When not using gcc, we currently assume that we are using
       # Microsoft Visual C++.
       # hardcode_libdir_flag_spec is actually meaningless, as there is
@@ -11325,14 +11325,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -11356,7 +11356,7 @@ cygwin* | mingw* | pw32* | cegcc*)
 
       sys_lib_search_path_spec="$sys_lib_search_path_spec /usr/lib/w32api"
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -11982,7 +11982,7 @@ else
     lt_cv_dlopen_self=yes
     ;;
 
-  mingw* | pw32* | cegcc*)
+  mingw* | msys* | pw32* | cegcc*)
     lt_cv_dlopen="LoadLibrary"
     lt_cv_dlopen_libs=
     ;;
@@ -12856,7 +12856,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -13209,7 +13209,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
         esac
         ;;
 
-      cygwin* | mingw* | pw32* | cegcc*)
+      cygwin* | mingw* | msys* | pw32* | cegcc*)
         # _LT_TAGVAR(hardcode_libdir_flag_spec, CXX) is actually meaningless,
         # as there is no search path for DLLs.
         hardcode_libdir_flag_spec_CXX='-L$libdir'
@@ -14982,14 +14982,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -15012,7 +15012,7 @@ cygwin* | mingw* | pw32* | cegcc*)
       soname_spec='`echo ${libname} | sed -e 's/^lib/cyg/'``echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
 
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -15622,7 +15622,7 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu
 
 
 case $host in
-  *-cygwin* | *-mingw*)
+  *-cygwin* | *-mingw* | *-msys*)
     # 'host' will be top-level target in the case of a target lib,
     # we must compare to with_cross_host to decide if this is a native
     # or cross-compiler and select where to install dlls appropriately.
@@ -15754,7 +15754,7 @@ if test "x$VTV_SUPPORTED" = "xyes"; then
 fi
 
 case "$target_os" in
-  cygwin*|mingw32*)
+  cygwin*|mingw*)
     vtv_cygmin="yes"
     ;;
   *)
diff --git a/libvtv/configure.ac b/libvtv/configure.ac
index f3b937e4b10..95cecbc669a 100644
--- a/libvtv/configure.ac
+++ b/libvtv/configure.ac
@@ -190,7 +190,7 @@ _EOF
 fi
 
 case "$target_os" in
-  cygwin*|mingw32*)
+  cygwin*|mingw*)
     vtv_cygmin="yes"
     ;;
   *)
diff --git a/lto-plugin/configure b/lto-plugin/configure
index baa84adbb6c..3e106454a05 100755
--- a/lto-plugin/configure
+++ b/lto-plugin/configure
@@ -6157,7 +6157,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -9689,7 +9689,7 @@ _LT_EOF
       fi
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # _LT_TAGVAR(hardcode_libdir_flag_spec, ) is actually meaningless,
       # as there is no search path for DLLs.
       hardcode_libdir_flag_spec='-L$libdir'
@@ -10120,7 +10120,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
       export_dynamic_flag_spec=-rdynamic
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # When not using gcc, we currently assume that we are using
       # Microsoft Visual C++.
       # hardcode_libdir_flag_spec is actually meaningless, as there is
@@ -11021,14 +11021,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -11052,7 +11052,7 @@ cygwin* | mingw* | pw32* | cegcc*)
 
       sys_lib_search_path_spec="$sys_lib_search_path_spec /usr/lib/w32api"
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -11678,7 +11678,7 @@ else
     lt_cv_dlopen_self=yes
     ;;
 
-  mingw* | pw32* | cegcc*)
+  mingw* | msys* | pw32* | cegcc*)
     lt_cv_dlopen="LoadLibrary"
     lt_cv_dlopen_libs=
     ;;
@@ -12297,7 +12297,7 @@ CC="$lt_save_CC"
 
 
 case $host in
-  *-cygwin* | *-mingw*)
+  *-cygwin* | *-mingw* | *-msys*)
     # 'host' will be top-level target in the case of a target lib,
     # we must compare to with_cross_host to decide if this is a native
     # or cross-compiler and select where to install dlls appropriately.
diff --git a/zlib/configure b/zlib/configure
index f489f31bc70..c88c18c7009 100755
--- a/zlib/configure
+++ b/zlib/configure
@@ -4640,7 +4640,7 @@ if test "$GCC" = yes; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
-  *-*-mingw*)
+  *-*-mingw*|*-*-msys*)
     # gcc leaves a trailing carriage return which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
@@ -4992,6 +4992,12 @@ else
     lt_cv_sys_max_cmd_len=8192;
     ;;
 
+  mint*)
+    # On MiNT this test can take minutes to run, and I'm not sure it's
+    # healthy for this platform. Let's restrict it to 8192.
+    lt_cv_sys_max_cmd_len=8192;
+    ;;
+
   amigaos*)
     # On AmigaOS with pdksh, this test takes hours, literally.
     # So we just punt and use a minimum line length of 8192.
@@ -8447,7 +8453,7 @@ _LT_EOF
       fi
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # _LT_TAGVAR(hardcode_libdir_flag_spec, ) is actually meaningless,
       # as there is no search path for DLLs.
       hardcode_libdir_flag_spec='-L$libdir'
@@ -8884,7 +8890,7 @@ if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
       export_dynamic_flag_spec=-rdynamic
       ;;
 
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | mingw* | msys* | pw32* | cegcc*)
       # When not using gcc, we currently assume that we are using
       # Microsoft Visual C++.
       # hardcode_libdir_flag_spec is actually meaningless, as there is
@@ -9788,14 +9794,14 @@ bsdi[45]*)
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32* | cegcc*)
+cygwin* | mingw* | msys* | pw32* | cegcc*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
 
   case $GCC,$host_os in
-  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+  yes,cygwin* | yes,mingw* | yes,msys* | yes,pw32* | yes,cegcc*)
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
     postinstall_cmds='base_file=`basename \${file}`~
@@ -9819,7 +9825,7 @@ cygwin* | mingw* | pw32* | cegcc*)
 
       sys_lib_search_path_spec="$sys_lib_search_path_spec /usr/lib/w32api"
       ;;
-    mingw* | cegcc*)
+    mingw* | msys* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
       soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
       ;;
@@ -10448,7 +10454,7 @@ else
     lt_cv_dlopen_self=yes
     ;;
 
-  mingw* | pw32* | cegcc*)
+  mingw* | msys* | pw32* | cegcc*)
     lt_cv_dlopen="LoadLibrary"
     lt_cv_dlopen_libs=
     ;;
