name: macOS build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: macos-13
    strategy:
      fail-fast: false
      matrix:
        project: [ binutils, gcc-464, gcc-7, gcc-8, gcc-9, gcc-10, gcc-11, gcc-12, gcc-13, gcc-14, gcc-15, mintbin ]
        target: [ m68k-atari-mint, m68k-atari-mintelf ]
        include:
          - project: binutils
            version: 2.44
            source_archive: https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.xz
          - project: gcc-464
            version: 4.6.4
            source_archive: https://ftp.gnu.org/gnu/gcc/gcc-4.6.4/gcc-4.6.4.tar.bz2
          - project: gcc-7
            version: 7.5.0
            source_archive: https://ftp.gnu.org/gnu/gcc/gcc-7.5.0/gcc-7.5.0.tar.xz
          - project: gcc-8
            version: 8.5.0
            source_archive: https://ftp.gnu.org/gnu/gcc/gcc-8.5.0/gcc-8.5.0.tar.xz
          - project: gcc-9
            version: 9.5.0
            source_archive: https://ftp.gnu.org/gnu/gcc/gcc-9.5.0/gcc-9.5.0.tar.xz
          - project: gcc-10
            version: 10.5.0
            source_archive: https://ftp.gnu.org/gnu/gcc/gcc-10.5.0/gcc-10.5.0.tar.xz
          - project: gcc-11
            version: 11.5.0
            source_archive: https://ftp.gnu.org/gnu/gcc/gcc-11.5.0/gcc-11.5.0.tar.xz
          - project: gcc-12
            version: 12.4.0
            source_archive: https://ftp.gnu.org/gnu/gcc/gcc-12.4.0/gcc-12.4.0.tar.xz
          - project: gcc-13
            version: 13.4.0
            source_archive: https://ftp.gnu.org/gnu/gcc/gcc-13.4.0/gcc-13.4.0.tar.xz
          - project: gcc-14
            version: 14.3.0
            source_archive: https://ftp.gnu.org/gnu/gcc/gcc-14.3.0/gcc-14.3.0.tar.xz
          - project: gcc-15
            version: 15.1.0
            source_archive: https://ftp.gnu.org/gnu/gcc/gcc-15.1.0/gcc-15.1.0.tar.xz
          - project: mintbin
            version: 0.4
            source_archive: https://tho-otto.de/download/mint/mintbin-0.4.tar.xz
    steps:
      - uses: actions/checkout@v4
      - name: Install SSH keys
        if: ${{ github.event_name == 'push' }}
        env:
          SSH_ID: ${{ secrets.SSH_ID }}
        run: ./.scripts/install_ssh_id.sh
      - name: Install packages
        run: wget -nv ${{ matrix.source_archive }}
      - name: build
        env:
          BUILD_ARM64: yes
        run: ./.scripts/build-wrap.sh ${{ matrix.project }} ${{ matrix.target }}
      - name: deploy
        if: ${{ github.event_name == 'push' }}
        env:
          COMMITER_NAME: ${{ github.event.commits[0].author.name }}
          COMMITER_EMAIL: ${{ github.event.commits[0].author.email }}
          PROJECT_NAME: ${{ matrix.project }}
          PROJECT_VERSION: ${{ matrix.version }}
          TARGET: ${{ matrix.target }}
        run: ./.scripts/deploy.sh
